
import { isTypeToken,  stripLeading, stripTrailing } from "src/runtime/index";
import { TypeTokenName } from "src/types/index";

type ExtractedToken = [token: TypeTokenName, data: string | undefined];

export function extractTypeToken<T>(tuple: T) {
  if (isTypeToken(tuple)) {
    const [name, defn] = stripTrailing(stripLeading(tuple, "<<"), ">>").split(":") as ExtractedToken;
    // const type = tuple as TypeToken<typeof name>;
  
    return [name, defn];
  } else {
    throw new Error(`The string passed into extractTypeToken() was NOT a TypeToken type! The string was: ${tuple}`);
  }

}
