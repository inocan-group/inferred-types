[{"name":"Dictionary","fqn":"module::186693758::Dictionary","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3949704489,"updated":1723767905064},{"name":"TypedFunction","fqn":"module::540585742::TypedFunction","filepath":"src/types/boolean-logic/operators/ReturnsTrue.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3093746778,"updated":1723767905075},{"name":"Api","fqn":"module::4278016201::Api","filepath":"src/types/api/api.ts","startLine":221,"endLine":226,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSurface","type":"TSurface"}],"jsDocs":[{"comment":"**Api**\n\nAn API definition typically created via `AsApi<TSurface,TOpts>` which is\nnot responsible for managing state.\n\n**Related:** `FluentApi`, `AsFluentApi`","tags":[]}],"deps":["module::186693758::Dictionary","module::540585742::TypedFunction"],"refs":[],"symbolHash":4153719965,"updated":1723767904138},{"name":"_GetEscapeFunction","fqn":"local::266219068::_GetEscapeFunction","filepath":"src/types/api/api.ts","startLine":44,"endLine":57,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2654537007,"updated":1723767904531},{"name":"Values","fqn":"module::3974819915::Values","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":945451873,"updated":1723767905137},{"name":"FluentState","fqn":"module::4139463594::FluentState","filepath":"src/types/api/api.ts","startLine":72,"endLine":78,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2345542925,"updated":1723767904128},{"name":"FluentFn","fqn":"module::4233178244::FluentFn","filepath":"src/types/api/api.ts","startLine":80,"endLine":92,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TState","type":"TState"},{"name":"TName","type":"TName"},{"name":"TFn","type":"TFn"},{"name":"TOnce","type":"TOnce"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4139463594::FluentState","module::540585742::TypedFunction"],"refs":[],"symbolHash":17838593,"updated":1723767904131},{"name":"ExpandRecursively","fqn":"module::3435872486::ExpandRecursively","filepath":"src/types/base-types/fns/EscapeFunction.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1194223488,"updated":1723767904987},{"name":"ExpandFluentFns","fqn":"local::266219068::ExpandFluentFns","filepath":"src/types/api/api.ts","startLine":95,"endLine":108,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFluentState","type":"TFluentState"},{"name":"TFns","type":"TFns"},{"name":"TFluentApi","type":"TFluentApi"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2990993536,"updated":1723767904532},{"name":"Tuple","fqn":"module::2666698309::Tuple","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1145272394,"updated":1723767905064},{"name":"ApiSurface","fqn":"module::647390714::ApiSurface","filepath":"src/types/api/api.ts","startLine":250,"endLine":250,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ApiSurface**`<T>`\n\nExtracts the API's surface area from an `Api`.","tags":[]}],"deps":["module::4278016201::Api"],"refs":[],"symbolHash":3618474514,"updated":1723767904139},{"name":"ApiState","fqn":"module::549128158::ApiState","filepath":"src/types/api/api.ts","startLine":131,"endLine":131,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ApiState**\n\nFor API's which manage state, the state should be a Dictionary\nor Tuple in shape.","tags":[]}],"deps":["module::186693758::Dictionary","module::2666698309::Tuple"],"refs":[],"symbolHash":3970016632,"updated":1723767904133},{"name":"KeyOf","fqn":"module::2202603258::KeyOf","filepath":"src/types/api/api.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3496432627,"updated":1723767904536},{"name":"Unset","fqn":"module::814973::Unset","filepath":"src/types/string-literals/character-sets/phone/RawPhoneNumber.ts","startLine":17,"endLine":17,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4122198111,"updated":1723767905162},{"name":"IfUnset","fqn":"module::4019558171::IfUnset","filepath":"src/types/dictionary/RequiredKeys.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":627399542,"updated":1723767904663},{"name":"PropertyKey","fqn":"ext::2318994541::PropertyKey","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":4,"endLine":4,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905064},{"name":"PublicKeyOf","fqn":"module::1874893613::PublicKeyOf","filepath":"src/types/api/api.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":254581399,"updated":1723767904533},{"name":"AsApi","fqn":"module::693354809::AsApi","filepath":"src/types/api/api.ts","startLine":287,"endLine":291,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSurface","type":"TSurface"}],"jsDocs":[{"comment":"**Api**`<TSurface>`\n\nValidates a candidate for a _stateless_ API and returns it as an `Api<TSurface>`\nif valid. If not valid you'll get a `ErrorCondition`.","tags":[]}],"deps":["module::186693758::Dictionary","module::540585742::TypedFunction","module::2900512600::HasEscapeFunction","module::4278016201::Api","module::3686363877::Throw"],"refs":[],"symbolHash":3840604614,"updated":1723767904142},{"name":"TupleToUnion","fqn":"module::2535688849::TupleToUnion","filepath":"src/types/string-literals/geo/zip.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3569585842,"updated":1723767905152},{"name":"ReduceValues","fqn":"module::1669874810::ReduceValues","filepath":"src/types/api/api.ts","startLine":19,"endLine":19,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3499716775,"updated":1723767904534},{"name":"ReturnType","fqn":"ext::2318994541::ReturnType","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905077},{"name":"HasEscapeFunction","fqn":"module::2900512600::HasEscapeFunction","filepath":"src/types/api/api.ts","startLine":24,"endLine":24,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2386569887,"updated":1723767904535},{"name":"Throw","fqn":"module::3686363877::Throw","filepath":"src/types/string-literals/character-sets/phone/PhoneShortCode.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":112315299,"updated":1723767905162},{"name":"EmptyObject","fqn":"module::4114441065::EmptyObject","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1595174664,"updated":1723767905144},{"name":"Fail","fqn":"module::511710969::Fail","filepath":"src/types/base-types/List.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4022846239,"updated":1723767904565},{"name":"Extends","fqn":"module::488874576::Extends","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":822995052,"updated":1723767905063},{"name":"Record","fqn":"ext::2318994541::Record","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905058},{"name":"UpsertKeyValue","fqn":"module::61594965::UpsertKeyValue","filepath":"src/types/api/api.ts","startLine":17,"endLine":17,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1316710501,"updated":1723767904537},{"name":"ApiCallback","fqn":"module::1663272331::ApiCallback","filepath":"src/types/api/api.ts","startLine":263,"endLine":265,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TApi","type":"TApi"}],"jsDocs":[{"comment":"**ApiCallback**`<TSurface,[TOpts]>`\n\nDefines a callback function which receives an API Surface (`TSurface`).\nIt is required that one of the properties on this surface be designated\nas an `EscapeFunction` and if that is not done this utility will produce\nan `ErrorCondition<\"no-escape-function\">`.\n\n\n**Related:** `HandleApiCallback`, `ApiCallbackInfo`","tags":[]}],"deps":["module::4278016201::Api","module::647390714::ApiSurface","ext::2318994541::ReturnType"],"refs":[],"symbolHash":926052720,"updated":1723767904141},{"name":"Parameters","fqn":"ext::2318994541::Parameters","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905026},{"name":"GetEscapeFunction","fqn":"module::1218893954::GetEscapeFunction","filepath":"src/types/api/api.ts","startLine":66,"endLine":70,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetEscapeFunction**`<T>`\n\nGets an escape function from an `Api` and from a `Dictionary | TypeFunction`\nif it exists. If it does not exist then returns an ErrorCondition.","tags":[]}],"deps":["module::186693758::Dictionary","module::540585742::TypedFunction","module::4278016201::Api","local::266219068::_GetEscapeFunction","module::3974819915::Values"],"refs":[],"symbolHash":1731486628,"updated":1723767904127},{"name":"ErrorCondition","fqn":"module::1939532401::ErrorCondition","filepath":"src/types/string-literals/character-sets/phone/ToPhoneFormat.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":957397840,"updated":1723767905163},{"name":"Something","fqn":"module::3396439809::Something","filepath":"src/types/functional/Result.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2579664187,"updated":1723767904695},{"name":"ExplicitlyEmptyObject","fqn":"module::542025033::ExplicitlyEmptyObject","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2419487240,"updated":1723767905064},{"name":"If","fqn":"module::1931245833::If","filepath":"src/types/string-literals/character-sets/SingularNoun.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3094571483,"updated":1723767905136},{"name":"IsNever","fqn":"module::80185219::IsNever","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1584280554,"updated":1723767905065},{"name":"IsEqual","fqn":"module::1364134543::IsEqual","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":17,"endLine":17,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1801404181,"updated":1723767905137},{"name":"Len","fqn":"local::1424159856::Len","filepath":"src/types/base-types/IndexableObject.ts","startLine":3,"endLine":3,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3729832408,"updated":1723767904563},{"name":"RemoveIndex","fqn":"module::2365457769::RemoveIndex","filepath":"src/types/base-types/IndexableObject.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":626591147,"updated":1723767904563},{"name":"NonNullable","fqn":"ext::2318994541::NonNullable","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904955},{"name":"Map","fqn":"ext::2318994541::Map","filepath":"../../../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","startLine":2,"endLine":2,"scope":"external","flags":["None","FunctionScopedVariable","Interface","Transient","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"V","type":"V"},{"name":"K","type":"K"},{"name":"V","type":"V"},{"name":"K","type":"K"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904982},{"name":"WeakMap","fqn":"ext::2318994541::WeakMap","filepath":"../../../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","startLine":2,"endLine":2,"scope":"external","flags":["None","FunctionScopedVariable","Interface","Transient","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"V","type":"V"},{"name":"K","type":"K"},{"name":"V","type":"V"},{"name":"K","type":"K"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904982},{"name":"Set","fqn":"ext::2318994541::Set","filepath":"../../../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","startLine":2,"endLine":2,"scope":"external","flags":["None","FunctionScopedVariable","Interface","Transient","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"T","type":"T"},{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904982},{"name":"TupleRange","fqn":"module::80663867::TupleRange","filepath":"src/types/base-types/Tuple.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":908219899,"updated":1723767904151},{"name":"Readonly","fqn":"ext::2318994541::Readonly","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904807},{"name":"FixedLengthArray","fqn":"module::1695495442::FixedLengthArray","filepath":"src/types/string-literals/Repeat.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2436165682,"updated":1723767904931},{"name":"NumericSign","fqn":"module::1750920435::NumericSign","filepath":"src/types/numeric-literals/Digitize.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":518796368,"updated":1723767904799},{"name":"Digit","fqn":"module::2660456408::Digit","filepath":"src/types/string-literals/character-sets/CSV.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":429480092,"updated":1723767905101},{"name":"NumericChar","fqn":"module::1881292962::NumericChar","filepath":"src/types/string-literals/character-sets/phone/RawPhoneNumber.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3980091537,"updated":1723767905162},{"name":"IndexableObject","fqn":"module::334498121::IndexableObject","filepath":"src/types/base-types/Indexable.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1389952639,"updated":1723767904562},{"name":"Narrowable","fqn":"module::3605609985::Narrowable","filepath":"src/types/boolean-logic/operators/ContainsAll.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1484592354,"updated":1723767905023},{"name":"ObjectKey","fqn":"module::4119350992::ObjectKey","filepath":"src/types/boolean-logic/operators/HasRequiredProps.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3144491710,"updated":1723767905041},{"name":"Symbol","fqn":"ext::2318994541::Symbol","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":4,"endLine":4,"scope":"external","flags":["None","FunctionScopedVariable","Interface","Transient","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904811},{"name":"Iterator","fqn":"ext::2318994541::Iterator","filepath":"../../../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","startLine":3,"endLine":3,"scope":"external","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TReturn","type":"TReturn"},{"name":"TNext","type":"TNext"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904811},{"name":"IsInteger","fqn":"module::2933755573::IsInteger","filepath":"src/types/base-types/List.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3198104247,"updated":1723767904565},{"name":"AsArray","fqn":"module::4284904442::AsArray","filepath":"src/types/string-literals/character-sets/LowerAlpha.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3269905841,"updated":1723767905131},{"name":"AnyFunction","fqn":"module::3580587573::AnyFunction","filepath":"src/types/boolean-logic/operators/IsObject.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2384494707,"updated":1723767905058},{"name":"ShallowCopy","fqn":"local::3344715809::ShallowCopy","filepath":"src/types/base-types/List.ts","startLine":13,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2791113171,"updated":1723767904565},{"name":"Flatten","fqn":"module::3529663403::Flatten","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":15,"endLine":15,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1114420074,"updated":1723767905137},{"name":"BCP47","fqn":"module::1952920049::BCP47","filepath":"src/types/base-types/List.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3054268224,"updated":1723767904568},{"name":"New","fqn":"local::3344715809::New","filepath":"src/types/base-types/List.ts","startLine":14,"endLine":14,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2441668773,"updated":1723767904569},{"name":"RegExp","fqn":"ext::2318994541::RegExp","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":4,"endLine":4,"scope":"external","flags":["None","FunctionScopedVariable","Interface","Transient","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904787},{"name":"Function","fqn":"ext::2318994541::Function","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":4,"endLine":4,"scope":"external","flags":["None","FunctionScopedVariable","Interface","Transient","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904986},{"name":"Some","fqn":"module::1469696892::Some","filepath":"src/types/base-types/fns/OptionalParamFn.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3326962544,"updated":1723767904989},{"name":"EscapeFunction","fqn":"module::3591970705::EscapeFunction","filepath":"src/types/base-types/fns/EscapeFunction.ts","startLine":19,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**EscapeFunction**`<[T]>`\n\nAn escape function is a function which takes no parameters and\nmarks itself by setting the key `escape` to the value **true**.\n\nIf this utility is used with a generic it will ensure that the function\nhas the `escape` property set. If no generic is used then it will just\npresent a generalized shape for escape functions.\n```ts\n// () => string & {escape: true}\ntype Esc = EscapeFunction<() => string>;\n// () => unknown & {escape: true}\ntype Esc2 = EscapeFunction;\n```","tags":[]}],"deps":[],"refs":[],"symbolHash":128188079,"updated":1723767904184},{"name":"ExpandDictionary","fqn":"module::2994160504::ExpandDictionary","filepath":"src/types/base-types/fns/EscapeFunction.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1383852665,"updated":1723767904987},{"name":"FnProps","fqn":"module::2594163080::FnProps","filepath":"src/types/boolean-logic/operators/ApiOperators.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4258164239,"updated":1723767905021},{"name":"LeftRight","fqn":"module::1195775228::LeftRight","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":14,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"L","type":"L"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"**LeftRight**`<L,R>`\n\nA tuple which has two possible states represented as `L`\nand `R`.\n\n**Related:** `AsLeft`, `AsRight`, `WhereLeft`, `HandleRight`, `LeftExtends`, ...","tags":[]}],"deps":[],"refs":[],"symbolHash":2989034012,"updated":1723767904185},{"name":"Defined","fqn":"module::2271274158::Defined","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":708343411,"updated":1723767904994},{"name":"IsSingleSided","fqn":"module::2953322716::IsSingleSided","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":36,"endLine":40,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsSingleSided**`<T>`\n\nBoolean utility which tests whether a `LeftRight` container has\na value only on the left or right sides but _not_ both.","tags":[]}],"deps":["module::1195775228::LeftRight","module::2271274158::Defined"],"refs":[],"symbolHash":1830400961,"updated":1723767904185},{"name":"left","fqn":"local::889785542::left","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":3,"endLine":3,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2649299086,"updated":1723767904997},{"name":"right","fqn":"local::889785542::right","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":4,"endLine":4,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3052766272,"updated":1723767904996},{"name":"IfEqual","fqn":"module::4258457119::IfEqual","filepath":"src/types/boolean-logic/operators/SomeEqual.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2656033665,"updated":1723767905076},{"name":"Contains","fqn":"module::2698938817::Contains","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":24,"endLine":24,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2823518519,"updated":1723767905141},{"name":"Explicitness","fqn":"local::889785542::Explicitness","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":115,"endLine":115,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":12276119,"updated":1723767904996},{"name":"NarrowlyContains","fqn":"module::3504175184::NarrowlyContains","filepath":"src/types/boolean-logic/combinators/Or.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1797844305,"updated":1723767905012},{"name":"LeftRight__Operations","fqn":"module::2894172080::LeftRight__Operations","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":205,"endLine":209,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3729194284,"updated":1723767904190},{"name":"AsError","fqn":"module::3658915459::AsError","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1481937363,"updated":1723767904997},{"name":"Concat","fqn":"module::2597507937::Concat","filepath":"src/types/string-literals/casing/SnakeCase.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4263457943,"updated":1723767905087},{"name":"LeftExtends","fqn":"module::779948345::LeftExtends","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":83,"endLine":86,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TLeftRight","type":"TLeftRight"}],"jsDocs":[{"comment":"**LeftExtends**`<TEval,TLeftRight>`\n\nBoolean utility which states whether the value of `TEval` _extends_\nthe _left_ value of `TLeftRight`","tags":[]}],"deps":["module::1195775228::LeftRight","local::889785542::left"],"refs":[],"symbolHash":1370527110,"updated":1723767904187},{"name":"LeftEquals","fqn":"module::3634406013::LeftEquals","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":94,"endLine":97,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TLeftRight","type":"TLeftRight"}],"jsDocs":[{"comment":"**LeftEquals**`<TEval,TLeftRight>`\n\nBoolean utility which states whether the value of `TEval` _equals_\nthe _left_ value of `TLeftRight`","tags":[]}],"deps":["module::1195775228::LeftRight","module::4258457119::IfEqual","local::889785542::left"],"refs":[],"symbolHash":3718891879,"updated":1723767904187},{"name":"LeftIncludes","fqn":"module::1029167213::LeftIncludes","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":106,"endLine":113,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TLeftRight","type":"TLeftRight"}],"jsDocs":[{"comment":"**LeftIncludes**\n\nBoolean utility which validates that at least one of the strings segments\nin `TEval` -- a string or tuple of strings -- is found in the string\nvalue contained in the left side of `TLeftRight`.","tags":[]}],"deps":["module::1195775228::LeftRight","local::889785542::left","module::2698938817::Contains"],"refs":[],"symbolHash":232680945,"updated":1723767904188},{"name":"LeftContains","fqn":"module::1777190149::LeftContains","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":130,"endLine":138,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TLeftRight","type":"TLeftRight"},{"name":"TExplicitness","type":"TExplicitness"}],"jsDocs":[{"comment":"**LeftContains**\n\nBoolean utility which validates that the _left_ value of the `TLeftRight`\nis a tuple and one of the elements _contains_ `TEval`.\n\nThe definition of _contains_ is determined by the optional `TExplicitness` generic:\n- it defaults to \"loose\" and in turns means that `TEval` must _extend_ an element\n- if set to `tight` then it will perform an explicit equality \ncheck on each element.\n\n**Related:** `LeftIncludes`","tags":[]}],"deps":["module::1195775228::LeftRight","local::889785542::Explicitness","local::889785542::left","module::2666698309::Tuple","module::2698938817::Contains","module::3504175184::NarrowlyContains"],"refs":[],"symbolHash":3357067522,"updated":1723767904188},{"name":"Api","fqn":"module::417089564::Api","filepath":"src/types/boolean-logic/operators/ApiOperators.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3060253562,"updated":1723767905021},{"name":"GetEscapeFunction","fqn":"module::2761333230::GetEscapeFunction","filepath":"src/types/boolean-logic/operators/ApiOperators.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2150247656,"updated":1723767905021},{"name":"EscapeFunction","fqn":"module::2332046825::EscapeFunction","filepath":"src/types/boolean-logic/operators/ApiOperators.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1121609850,"updated":1723767905021},{"name":"AllAcc","fqn":"local::3664003991::AllAcc","filepath":"src/types/boolean-logic/operators/AllExtend.ts","startLine":3,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TExtend","type":"TExtend"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2082667888,"updated":1723767905021},{"name":"And","fqn":"module::83169107::And","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":693635485,"updated":1723767905072},{"name":"IsStringLiteral","fqn":"module::172457424::IsStringLiteral","filepath":"src/types/string-literals/character-sets/phone/ToPhoneFormat.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2551278597,"updated":1723767905163},{"name":"IsNumericLiteral","fqn":"module::82688423::IsNumericLiteral","filepath":"src/types/string-literals/character-sets/phone/PhoneNumber.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2492842558,"updated":1723767905162},{"name":"IsTuple","fqn":"module::4041511888::IsTuple","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":364839016,"updated":1723767905064},{"name":"IsBooleanLiteral","fqn":"module::1272639998::IsBooleanLiteral","filepath":"src/types/boolean-logic/operators/AllLiteral.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2591454728,"updated":1723767905022},{"name":"IsObjectLiteral","fqn":"module::2943445649::IsObjectLiteral","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3225244700,"updated":1723767905064},{"name":"Widen","fqn":"module::4064428151::Widen","filepath":"src/types/boolean-logic/operators/AreSameType.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2532266634,"updated":1723767905022},{"name":"IsWideType","fqn":"module::391074403::IsWideType","filepath":"src/types/boolean-logic/operators/Validate.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3661204509,"updated":1723767905077},{"name":"PreProcess","fqn":"local::2145784806::PreProcess","filepath":"src/types/boolean-logic/operators/Contains.ts","startLine":44,"endLine":56,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":91672673,"updated":1723767905023},{"name":"_Contains","fqn":"local::1090657334::_Contains","filepath":"src/types/boolean-logic/operators/ContainsAll.ts","startLine":5,"endLine":17,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"THasAll","type":"THasAll"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2851620011,"updated":1723767905023},{"name":"DoesExtend","fqn":"module::3591638282::DoesExtend","filepath":"src/types/boolean-logic/operators/IsNumericLiteral.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3317632681,"updated":1723767905058},{"name":"_Extends","fqn":"local::508943492::_Extends","filepath":"src/types/boolean-logic/operators/ExtendsAll.ts","startLine":4,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TList","type":"TList"},{"name":"Processed","type":"Processed"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3669518645,"updated":1723767905023},{"name":"First","fqn":"module::2295046820::First","filepath":"src/types/string-literals/geo/zip.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1069098502,"updated":1723767905152},{"name":"AfterFirst","fqn":"module::798798449::AfterFirst","filepath":"src/types/boolean-logic/operators/SomeEqual.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":765536252,"updated":1723767905076},{"name":"Not","fqn":"module::3858944705::Not","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3839086990,"updated":1723767905062},{"name":"ExtendsSome","fqn":"module::1757664903::ExtendsSome","filepath":"src/types/boolean-logic/operators/IsFalsy.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2304041860,"updated":1723767905052},{"name":"PreProcess","fqn":"local::1167627601::PreProcess","filepath":"src/types/boolean-logic/operators/EndsWith.ts","startLine":27,"endLine":34,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1293943730,"updated":1723767905024},{"name":"AsString","fqn":"module::1897058928::AsString","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1850434936,"updated":1723767905147},{"name":"SomeAcc","fqn":"local::39876281::SomeAcc","filepath":"src/types/boolean-logic/operators/SomeExtend.ts","startLine":3,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TExtend","type":"TExtend"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3810227939,"updated":1723767905076},{"name":"Process","fqn":"local::1038600572::Process","filepath":"src/types/boolean-logic/operators/StartsWith.ts","startLine":16,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1608495974,"updated":1723767905076},{"name":"Length","fqn":"module::1195601881::Length","filepath":"src/types/boolean-logic/operators/NotLength.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1305816299,"updated":1723767905073},{"name":"_HasUnion","fqn":"local::2489501799::_HasUnion","filepath":"src/types/boolean-logic/operators/HasUnionType.ts","startLine":3,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":21647592,"updated":1723767905026},{"name":"Process","fqn":"local::1878389361::Process","filepath":"src/types/boolean-logic/operators/HasSameValues.ts","startLine":19,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3680310959,"updated":1723767905026},{"name":"NumberLike","fqn":"module::3330042255::NumberLike","filepath":"src/types/boolean-logic/operators/IsPositiveNumber.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1535827507,"updated":1723767905059},{"name":"_Len","fqn":"local::536823326::_Len","filepath":"src/types/boolean-logic/operators/IsVueRef.ts","startLine":10,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2679475187,"updated":1723767905065},{"name":"Retain","fqn":"module::3313669345::Retain","filepath":"src/types/boolean-logic/operators/IsVueRef.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3651453453,"updated":1723767905065},{"name":"_Keys","fqn":"local::536823326::_Keys","filepath":"src/types/boolean-logic/operators/IsVueRef.ts","startLine":5,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2865062272,"updated":1723767905065},{"name":"_Validate","fqn":"local::536823326::_Validate","filepath":"src/types/boolean-logic/operators/IsVueRef.ts","startLine":14,"endLine":16,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":156103471,"updated":1723767905065},{"name":"LiteralFn","fqn":"module::415438851::LiteralFn","filepath":"src/types/boolean-logic/operators/IsNarrowingFn.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1015006619,"updated":1723767905056},{"name":"RegularFn","fqn":"local::646558316::RegularFn","filepath":"src/types/boolean-logic/operators/IsLiteralFn.ts","startLine":7,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"Fn","type":"Fn"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":848993589,"updated":1723767905056},{"name":"Container","fqn":"module::2872591658::Container","filepath":"src/types/string-literals/character-sets/ValueAtDotPath.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3193141535,"updated":1723767905144},{"name":"IsNegativeNumber","fqn":"module::1640529169::IsNegativeNumber","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1142455779,"updated":1723767905064},{"name":"AsNumber","fqn":"module::116081596::AsNumber","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":20,"endLine":20,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2752237814,"updated":1723767905138},{"name":"Abs","fqn":"module::603953565::Abs","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2955859576,"updated":1723767905064},{"name":"NumericKeys","fqn":"module::3420625191::NumericKeys","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1329237113,"updated":1723767905064},{"name":"CheckIt","fqn":"local::945123088::CheckIt","filepath":"src/types/boolean-logic/operators/IsObjectLiteral.ts","startLine":15,"endLine":19,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3678662892,"updated":1723767905059},{"name":"Process","fqn":"local::1598833034::Process","filepath":"src/types/boolean-logic/operators/IsTuple.ts","startLine":3,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3082046850,"updated":1723767905061},{"name":"Nothing","fqn":"module::761993671::Nothing","filepath":"src/types/boolean-logic/operators/IsNothing.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":574529561,"updated":1723767905057},{"name":"Or","fqn":"module::2376902257::Or","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1957182861,"updated":1723767905063},{"name":"Calc","fqn":"local::2396761233::Calc","filepath":"src/types/boolean-logic/operators/IsGreaterThan.ts","startLine":3,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"},{"name":"Count","type":"Count"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":759851224,"updated":1723767905054},{"name":"IsGreaterThan","fqn":"module::187453973::IsGreaterThan","filepath":"src/types/boolean-logic/operators/IsGreaterThan.ts","startLine":22,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**IsGreaterThan**`<A,B>`\n\nBoolean type operator which determines whether `A`\nis _greater than_ `B`.\n\n**Note:** does not take negative numbers into account","tags":[]}],"deps":["module::3330042255::NumberLike","module::1931245833::If","module::2376902257::Or","module::1364134543::IsEqual","local::2396761233::Calc","module::116081596::AsNumber"],"refs":[],"symbolHash":1976259800,"updated":1723767904206},{"name":"Calc","fqn":"local::1843790622::Calc","filepath":"src/types/boolean-logic/operators/IsLessThan.ts","startLine":3,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"},{"name":"Count","type":"Count"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1471258807,"updated":1723767905055},{"name":"IsLessThan","fqn":"module::434570654::IsLessThan","filepath":"src/types/boolean-logic/operators/IsLessThan.ts","startLine":22,"endLine":25,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**IsLessThan**`<A,B>`\n\nBoolean type operator which determines whether `A`\nis _less than_ `B`.\n\n**Note:** does not take negative numbers into account","tags":[]}],"deps":["module::3330042255::NumberLike","local::1843790622::Calc","module::116081596::AsNumber"],"refs":[],"symbolHash":2055542552,"updated":1723767904207},{"name":"CheckForInvalid","fqn":"local::3405700127::CheckForInvalid","filepath":"src/types/boolean-logic/operators/IsDotPath.ts","startLine":11,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":690345022,"updated":1723767905051},{"name":"IfNever","fqn":"module::1715223530::IfNever","filepath":"src/types/boolean-logic/operators/IsSingularNoun.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":43468631,"updated":1723767905060},{"name":"SingularNoun","fqn":"module::2553806509::SingularNoun","filepath":"src/types/boolean-logic/operators/IsSingularNoun.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":290832489,"updated":1723767905060},{"name":"HasCharacters","fqn":"module::2109384881::HasCharacters","filepath":"src/types/boolean-logic/operators/IsInteger.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3076354864,"updated":1723767905054},{"name":"UpperAlphaChar","fqn":"module::2595159798::UpperAlphaChar","filepath":"src/types/string-literals/character-sets/AlphaChar.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":85937446,"updated":1723767905092},{"name":"Uppercase","fqn":"ext::2318994541::Uppercase","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905087},{"name":"Process","fqn":"local::3967616597::Process","filepath":"src/types/boolean-logic/operators/IsOptionalScalar.ts","startLine":8,"endLine":16,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1378000468,"updated":1723767905059},{"name":"Mutable","fqn":"module::13543941::Mutable","filepath":"src/types/string-literals/character-sets/phone/PhoneCountryCode.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2494625263,"updated":1723767905161},{"name":"Scalar","fqn":"module::3252133680::Scalar","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3868069280,"updated":1723767905065},{"name":"Keys","fqn":"module::4102577001::Keys","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1763606832,"updated":1723767905135},{"name":"AsRecord","fqn":"module::4076869199::AsRecord","filepath":"src/types/boolean-logic/operators/IsEmptyObject.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4076869199,"updated":1723767905051},{"name":"IsUnion","fqn":"module::3393438424::IsUnion","filepath":"src/types/string-literals/options/DropChars.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3761990155,"updated":1723767905153},{"name":"Validations","fqn":"local::654329304::Validations","filepath":"src/types/boolean-logic/operators/IsLiteral.ts","startLine":11,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3069739667,"updated":1723767905056},{"name":"IsLiteral","fqn":"module::4050561663::IsLiteral","filepath":"src/types/boolean-logic/operators/IsLiteral.ts","startLine":39,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsLiteral**`<T>`\n\nBoolean utility which returns `true` when `T` is:\n\n- string literal\n- numeric literal\n- boolean literal\n- object literal\n- or a tuple literal\n\nNote: when `T` is a _union type_, even if there are literal types\nin the union, this will return `false`.\n\n**Related:** `IsUnion`, `IsWideUnion`, `IsLiteralUnion`","tags":[]}],"deps":["module::3393438424::IsUnion","local::654329304::Validations"],"refs":[],"symbolHash":3288252147,"updated":1723767904211},{"name":"GetKeys","fqn":"local::2940894408::GetKeys","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":41,"endLine":51,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1315732565,"updated":1723767905065},{"name":"InvalidNever","fqn":"local::2940894408::InvalidNever","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":78,"endLine":83,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1509240405,"updated":1723767905065},{"name":"ProxyError","fqn":"module::2877350891::ProxyError","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4093698396,"updated":1723767905066},{"name":"IsWideScalar","fqn":"module::2615055512::IsWideScalar","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":23,"endLine":35,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsWideScalar**`<T>`\n\nBoolean operator which validates whether or not `T`\nis considered a \"wide type\" which extends `Scalar`","tags":[]}],"deps":["module::3252133680::Scalar","module::1364134543::IsEqual"],"refs":[],"symbolHash":2084645424,"updated":1723767904212},{"name":"IsWideContainer","fqn":"module::3251840889::IsWideContainer","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":60,"endLine":74,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsWideContainer**`<T>`\n\nBoolean operator which tests wether `T` is a `Container` and\nalso a `wide type` (aka, not a literal).","tags":[]}],"deps":["module::2872591658::Container","module::1364134543::IsEqual","local::2940894408::GetKeys"],"refs":[],"symbolHash":2647553214,"updated":1723767904212},{"name":"IsWideUnion","fqn":"module::698625611::IsWideUnion","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3585072216,"updated":1723767905066},{"name":"WidenUnion","fqn":"module::291733697::WidenUnion","filepath":"src/types/boolean-logic/operators/IsString.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2336203283,"updated":1723767905060},{"name":"Process","fqn":"local::1869782582::Process","filepath":"src/types/boolean-logic/operators/IsTrue.ts","startLine":3,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TNever","type":"TNever"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":43609272,"updated":1723767905061},{"name":"IsBoolean","fqn":"module::996394587::IsBoolean","filepath":"src/types/boolean-logic/operators/Validate.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3106717598,"updated":1723767905077},{"name":"Number","fqn":"ext::2318994541::Number","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":4,"endLine":4,"scope":"external","flags":["None","FunctionScopedVariable","Interface","Transient","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]},{"comment":"","tags":[]},{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905052},{"name":"IsTrue","fqn":"module::4187212716::IsTrue","filepath":"src/types/string-literals/geo/state.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":391272945,"updated":1723767905151},{"name":"IsFalse","fqn":"module::1567416713::IsFalse","filepath":"src/types/boolean-logic/operators/Validate.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":527392031,"updated":1723767905077},{"name":"IsEqual","fqn":"module::2321429668::IsEqual","filepath":"src/types/boolean-logic/operators/IsEqual.ts","startLine":8,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"X","type":"X"},{"name":"Y","type":"Y"},{"name":"TRUE","type":"TRUE"},{"name":"FALSE","type":"FALSE"}],"jsDocs":[{"comment":"**IsEqual**`<X,Y>`\n\nType utility which tests whether two types -- `X` and `Y` -- are exactly the same type","tags":[]}],"deps":[],"refs":[],"symbolHash":389282970,"updated":1723767904216},{"name":"UnionToTuple","fqn":"module::458105997::UnionToTuple","filepath":"src/types/string-literals/options/DropChars.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1511023411,"updated":1723767905153},{"name":"As","fqn":"module::3860303104::As","filepath":"src/types/string-literals/character-sets/phone/PhoneNumber.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":94836707,"updated":1723767905162},{"name":"SomeEqual","fqn":"module::3434924723::SomeEqual","filepath":"src/types/boolean-logic/operators/IsTruthy.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3960417266,"updated":1723767905061},{"name":"AnyObject","fqn":"module::1903151425::AnyObject","filepath":"src/types/boolean-logic/operators/IsFnWithParams.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2944092555,"updated":1723767905053},{"name":"IsEmptyObject","fqn":"module::1021334241::IsEmptyObject","filepath":"src/types/boolean-logic/operators/IsFnWithParams.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1254429514,"updated":1723767905053},{"name":"IsNotEqual","fqn":"module::1690887405::IsNotEqual","filepath":"src/types/boolean-logic/operators/NotLength.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1189681958,"updated":1723767905073},{"name":"PreProcess","fqn":"local::406245140::PreProcess","filepath":"src/types/boolean-logic/operators/HasCharacters.ts","startLine":35,"endLine":43,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TChars","type":"TChars"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2662362790,"updated":1723767905038},{"name":"AllStringLiterals","fqn":"module::1118303037::AllStringLiterals","filepath":"src/types/boolean-logic/operators/HasCharacters.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1530576680,"updated":1723767905038},{"name":"ProcessTuple","fqn":"local::406245140::ProcessTuple","filepath":"src/types/boolean-logic/operators/HasCharacters.ts","startLine":19,"endLine":33,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TChars","type":"TChars"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":557056953,"updated":1723767905038},{"name":"Process","fqn":"local::1036253892::Process","filepath":"src/types/boolean-logic/operators/HasOtherCharacters.ts","startLine":7,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TChars","type":"TChars"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2350116269,"updated":1723767905038},{"name":"ReadonlyKeys","fqn":"module::2806756356::ReadonlyKeys","filepath":"src/types/boolean-logic/operators/IsReadonlyObject.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2426967430,"updated":1723767905059},{"name":"Chars","fqn":"module::3921923702::Chars","filepath":"src/types/string-literals/options/DropChars.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1587586814,"updated":1723767905153},{"name":"Validate","fqn":"local::3011118821::Validate","filepath":"src/types/boolean-logic/operators/HasWideValues.ts","startLine":3,"endLine":7,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4081423672,"updated":1723767905039},{"name":"WideBooleanNotAllowed","fqn":"local::4149157720::WideBooleanNotAllowed","filepath":"src/types/boolean-logic/operators/Validate.ts","startLine":12,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":918655532,"updated":1723767905077},{"name":"LogicFunction","fqn":"module::2984222131::LogicFunction","filepath":"src/types/boolean-logic/operators/Validate.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2833608448,"updated":1723767905077},{"name":"WideReturnNotAllowed","fqn":"local::4149157720::WideReturnNotAllowed","filepath":"src/types/boolean-logic/operators/Validate.ts","startLine":17,"endLine":20,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1435947799,"updated":1723767905077},{"name":"AsTuple","fqn":"module::3750673569::AsTuple","filepath":"src/types/boolean-logic/operators/HasSameKeys.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3604933730,"updated":1723767905040},{"name":"Process","fqn":"local::3960513784::Process","filepath":"src/types/boolean-logic/operators/HasSameKeys.ts","startLine":5,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2913898769,"updated":1723767905040},{"name":"_Keys","fqn":"local::3960513784::_Keys","filepath":"src/types/boolean-logic/operators/HasSameKeys.ts","startLine":14,"endLine":16,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1523554003,"updated":1723767905040},{"name":"HasSameValues","fqn":"module::3965208509::HasSameValues","filepath":"src/types/boolean-logic/operators/HasSameKeys.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2325119588,"updated":1723767905040},{"name":"Process","fqn":"local::1025490070::Process","filepath":"src/types/boolean-logic/operators/IsWideUnion.ts","startLine":7,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1117889875,"updated":1723767905066},{"name":"Process","fqn":"local::997508130::Process","filepath":"src/types/boolean-logic/operators/IsLiteralUnion.ts","startLine":4,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3779854058,"updated":1723767905056},{"name":"Process","fqn":"local::2006686525::Process","filepath":"src/types/boolean-logic/operators/IsNonLiteralUnion.ts","startLine":4,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":213378932,"updated":1723767905057},{"name":"RequiredProps","fqn":"module::2153154265::RequiredProps","filepath":"src/types/boolean-logic/operators/HasRequiredProps.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1301034643,"updated":1723767905041},{"name":"DotPathFor","fqn":"module::3421907004::DotPathFor","filepath":"src/types/boolean-logic/operators/IsValidDotPath.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":700375800,"updated":1723767905063},{"name":"IsContainer","fqn":"module::2824052739::IsContainer","filepath":"src/types/boolean-logic/operators/IsValidDotPath.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3631691605,"updated":1723767905063},{"name":"IsDotPath","fqn":"module::4223968119::IsDotPath","filepath":"src/types/boolean-logic/operators/IsValidDotPath.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":475844692,"updated":1723767905064},{"name":"IsHexadecimal","fqn":"module::1278898013::IsHexadecimal","filepath":"src/types/boolean-logic/operators/IsCssHexadecimal.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2930983733,"updated":1723767905050},{"name":"GetUrlPath","fqn":"module::336478937::GetUrlPath","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1337767144,"updated":1723767905149},{"name":"GetUrlSource","fqn":"module::1089226927::GetUrlSource","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2556818548,"updated":1723767905062},{"name":"NetworkProtocol","fqn":"module::2966373716::NetworkProtocol","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4230848705,"updated":1723767905063},{"name":"NetworkProtocolPrefix","fqn":"module::2868506805::NetworkProtocolPrefix","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3734008914,"updated":1723767905063},{"name":"HasNetworkProtocolReference","fqn":"module::3147694355::HasNetworkProtocolReference","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":26,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TProto","type":"TProto"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2966373716::NetworkProtocol","module::488874576::Extends","module::2868506805::NetworkProtocolPrefix"],"refs":[],"symbolHash":3549258564,"updated":1723767904228},{"name":"HasUrlPath","fqn":"module::2121051408::HasUrlPath","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":15,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::83169107::And","module::3858944705::Not","module::80185219::IsNever","module::336478937::GetUrlPath","module::2376902257::Or","module::488874576::Extends"],"refs":[],"symbolHash":3945359399,"updated":1723767904228},{"name":"HasUrlSource","fqn":"module::2472775512::HasUrlSource","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":24,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3858944705::Not","module::80185219::IsNever","module::1089226927::GetUrlSource"],"refs":[],"symbolHash":3759518129,"updated":1723767904228},{"name":"Ip4Octet","fqn":"module::2254794222::Ip4Octet","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2203100675,"updated":1723767905067},{"name":"HasOtherCharacters","fqn":"module::4119602969::HasOtherCharacters","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":551401860,"updated":1723767905067},{"name":"Lowercase","fqn":"ext::2318994541::Lowercase","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905087},{"name":"IsLessThan","fqn":"module::1551084983::IsLessThan","filepath":"src/types/string-literals/character-sets/phone/GetPhoneNumberType.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":528978256,"updated":1723767905158},{"name":"IsGreaterThan","fqn":"module::3252841211::IsGreaterThan","filepath":"src/types/string-literals/character-sets/phone/PhoneShortCode.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1307382946,"updated":1723767905162},{"name":"IsHexadecimal","fqn":"module::3955573120::IsHexadecimal","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":44,"endLine":53,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsHexadecimal**`<T>`\n\nBoolean operator which tests the string `T` to ensure\nall characters are valid hexadecimal digits/chars.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::4119602969::HasOtherCharacters","ext::2318994541::Lowercase","module::1881292962::NumericChar"],"refs":[],"symbolHash":1029268104,"updated":1723767904230},{"name":"Ip4Address","fqn":"module::2631466056::Ip4Address","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2558668964,"updated":1723767905142},{"name":"Split","fqn":"module::3471304285::Split","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2089248896,"updated":1723767905149},{"name":"DeepOctetCheck","fqn":"local::1195686355::DeepOctetCheck","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":74,"endLine":82,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3597545343,"updated":1723767905068},{"name":"Ip6AddressFull","fqn":"module::3395427357::Ip6AddressFull","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3323893435,"updated":1723767905068},{"name":"_EachGroup","fqn":"local::1195686355::_EachGroup","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":103,"endLine":107,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2503825406,"updated":1723767905068},{"name":"Ip6GroupExpansion","fqn":"module::2738071727::Ip6GroupExpansion","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3028337707,"updated":1723767905068},{"name":"IsIp4Address","fqn":"module::1328685990::IsIp4Address","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":92,"endLine":101,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsIp4Address**`<T>`\n\nValidates that `T` is a _valid_ IPv4 address by:\n\n- making sure the basic `${number}.${number}.${number}.${number}`\n- and then that each octet is a valid number between 0 and 255","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::2631466056::Ip4Address","module::3471304285::Split","local::1195686355::DeepOctetCheck"],"refs":[],"symbolHash":1322348703,"updated":1723767904231},{"name":"IsIp6Address","fqn":"module::4098885414::IsIp6Address","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":109,"endLine":117,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::3395427357::Ip6AddressFull","module::83169107::And","local::1195686355::_EachGroup","module::3471304285::Split","module::2738071727::Ip6GroupExpansion"],"refs":[],"symbolHash":2480303943,"updated":1723767904231},{"name":"Ip6AddressLoose","fqn":"module::683291882::Ip6AddressLoose","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":870149426,"updated":1723767905071},{"name":"_TLD","fqn":"local::1195686355::_TLD","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":150,"endLine":156,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2737293153,"updated":1723767905072},{"name":"Last","fqn":"module::3431685797::Last","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":270439537,"updated":1723767905149},{"name":"_BeforeTLD","fqn":"local::1195686355::_BeforeTLD","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":158,"endLine":162,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4083113271,"updated":1723767905072},{"name":"BeforeLast","fqn":"module::2607133933::BeforeLast","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4116420336,"updated":1723767905072},{"name":"GetUrlQueryParams","fqn":"module::790210903::GetUrlQueryParams","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":295241663,"updated":1723767905078},{"name":"IsErrorCondition","fqn":"module::3228905537::IsErrorCondition","filepath":"src/types/boolean-logic/operators/PhoneOperators.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4058264185,"updated":1723767905073},{"name":"PhoneNumber","fqn":"module::3537681521::PhoneNumber","filepath":"src/types/string-literals/character-sets/phone/ToPhoneFormat.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3670837280,"updated":1723767905163},{"name":"MaybeError","fqn":"module::3092265634::MaybeError","filepath":"src/types/boolean-logic/operators/PhoneOperators.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1868894759,"updated":1723767905073},{"name":"GetPhoneCountryCode","fqn":"module::2524449437::GetPhoneCountryCode","filepath":"src/types/string-literals/character-sets/phone/RemovePhoneCountryCode.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3283398578,"updated":1723767905163},{"name":"PhoneCountryCode","fqn":"module::629825325::PhoneCountryCode","filepath":"src/types/boolean-logic/operators/PhoneOperators.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":959842311,"updated":1723767905073},{"name":"IsPositiveNumber","fqn":"module::4007167582::IsPositiveNumber","filepath":"src/types/boolean-logic/operators/HaveSameNumericSign.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3132240073,"updated":1723767905048},{"name":"_HasArray","fqn":"local::1101128538::_HasArray","filepath":"src/types/boolean-logic/operators/HasArray.ts","startLine":3,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3681896427,"updated":1723767905048},{"name":"Process","fqn":"local::2529771705::Process","filepath":"src/types/boolean-logic/operators/UnionHasArray.ts","startLine":4,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":485759398,"updated":1723767905076},{"name":"AnyError","fqn":"local::2692443845::AnyError","filepath":"src/types/boolean-logic/operators/MaybeError.ts","startLine":4,"endLine":10,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1257745916,"updated":1723767905066},{"name":"LogicalReturns","fqn":"module::1149977588::LogicalReturns","filepath":"src/types/boolean-logic/combinators/Or.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1273658319,"updated":1723767905012},{"name":"Process","fqn":"local::3164929300::Process","filepath":"src/types/boolean-logic/combinators/And.ts","startLine":11,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TConditions","type":"TConditions"},{"name":"TBooleanSeen","type":"TBooleanSeen"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2419625683,"updated":1723767905008},{"name":"Process","fqn":"local::4282093110::Process","filepath":"src/types/boolean-logic/combinators/Or.ts","startLine":14,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TConditions","type":"TConditions"},{"name":"TBooleanSean","type":"TBooleanSean"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1392825493,"updated":1723767905012},{"name":"ConditionError","fqn":"local::4282093110::ConditionError","filepath":"src/types/boolean-logic/combinators/Or.ts","startLine":23,"endLine":29,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TErr","type":"TErr"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2685898642,"updated":1723767905012},{"name":"Exclude","fqn":"ext::2318994541::Exclude","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"U","type":"U"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905160},{"name":"Negate","fqn":"local::803441450::Negate","filepath":"src/types/boolean-logic/combinators/Not.ts","startLine":15,"endLine":25,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2885551979,"updated":1723767905012},{"name":"NegateTuple","fqn":"local::803441450::NegateTuple","filepath":"src/types/boolean-logic/combinators/Not.ts","startLine":27,"endLine":40,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTuple","type":"TTuple"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2315502037,"updated":1723767905012},{"name":"ComparatorOperation","fqn":"module::1891863935::ComparatorOperation","filepath":"src/types/boolean-logic/combinators/Compare.ts","startLine":28,"endLine":40,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ComparatorOperation**\n\nA union type providing various ways in which two values\ncan be compared.","tags":[]}],"deps":[],"refs":[],"symbolHash":2549707436,"updated":1723767904238},{"name":"ParamsForComparison","fqn":"module::2946248511::ParamsForComparison","filepath":"src/types/boolean-logic/combinators/Compare.ts","startLine":48,"endLine":71,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ParamsForComparison**`<T>`\n\nProvides a lookup function on `T` of the _parameters_ required\nfor a given `ComparatorOperation`.","tags":[]}],"deps":["module::1891863935::ComparatorOperation","module::2666698309::Tuple","module::3330042255::NumberLike"],"refs":[],"symbolHash":2403375233,"updated":1723767904238},{"name":"WhenNever","fqn":"module::3700024488::WhenNever","filepath":"src/types/boolean-logic/combinators/Compare.ts","startLine":18,"endLine":18,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":227639539,"updated":1723767905011},{"name":"Process","fqn":"local::2394964595::Process","filepath":"src/types/boolean-logic/combinators/Compare.ts","startLine":107,"endLine":149,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TOp","type":"TOp"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2201342372,"updated":1723767905011},{"name":"Process","fqn":"local::3944463141::Process","filepath":"src/types/boolean-logic/combinators/Some.ts","startLine":15,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TElements","type":"TElements"},{"name":"TOp","type":"TOp"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1838247373,"updated":1723767905013},{"name":"AllLiteral","fqn":"module::625714087::AllLiteral","filepath":"src/types/boolean-logic/branching/IfAllLiteral.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":625714087,"updated":1723767905001},{"name":"AllExtend","fqn":"module::2109379844::AllExtend","filepath":"src/types/string-literals/character-sets/SingularNoun.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":337639173,"updated":1723767905136},{"name":"InvalidTest","fqn":"local::3490008594::InvalidTest","filepath":"src/types/boolean-logic/branching/If.ts","startLine":3,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1324713588,"updated":1723767905002},{"name":"ErrorConditionShape","fqn":"module::729484003::ErrorConditionShape","filepath":"src/types/boolean-logic/branching/IfErrorCondition.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":469836119,"updated":1723767905002},{"name":"IfEqual","fqn":"module::666678570::IfEqual","filepath":"src/types/boolean-logic/branching/IfEqual.ts","startLine":9,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"X","type":"X"},{"name":"Y","type":"Y"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**IfEqual**`<X,Y,[IF],[ELSE]>`\n\nType utility which returns type `IF` _if_ `X` is equal to `Y`; otherwise returns\ntype `ELSE`.","tags":[]}],"deps":["ext::2318994541::Exclude","module::1364134543::IsEqual"],"refs":[],"symbolHash":1608279628,"updated":1723767904242},{"name":"IfEquals","fqn":"module::472914021::IfEquals","filepath":"src/types/boolean-logic/branching/Passthrough.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1812209261,"updated":1723767905007},{"name":"Narrow","fqn":"local::519239118::Narrow","filepath":"src/types/boolean-logic/branching/Handle.ts","startLine":10,"endLine":19,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"THandle","type":"THandle"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":785513005,"updated":1723767905003},{"name":"Process","fqn":"local::2564443943::Process","filepath":"src/types/boolean-logic/branching/Default.ts","startLine":3,"endLine":5,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TDefault","type":"TDefault"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3978912347,"updated":1723767905003},{"name":"NonArray","fqn":"module::3227017853::NonArray","filepath":"src/types/boolean-logic/branching/Iff.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2435591220,"updated":1723767905004},{"name":"ProcessContainers","fqn":"local::3952940613::ProcessContainers","filepath":"src/types/boolean-logic/branching/Iff.ts","startLine":4,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValues","type":"TValues"},{"name":"TIgnore","type":"TIgnore"},{"name":"TOffset","type":"TOffset"},{"name":"TNotFound","type":"TNotFound"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2725684007,"updated":1723767905004},{"name":"Process","fqn":"local::3952940613::Process","filepath":"src/types/boolean-logic/branching/Iff.ts","startLine":15,"endLine":23,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValues","type":"TValues"},{"name":"TIgnore","type":"TIgnore"},{"name":"TNotFound","type":"TNotFound"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2611081246,"updated":1723767905004},{"name":"Iterate","fqn":"local::2578965571::Iterate","filepath":"src/types/boolean-logic/branching/Fail.ts","startLine":12,"endLine":16,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2975246009,"updated":1723767905004},{"name":"ShouldFail","fqn":"local::2578965571::ShouldFail","filepath":"src/types/boolean-logic/branching/Fail.ts","startLine":6,"endLine":10,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":966574243,"updated":1723767905004},{"name":"Partial","fqn":"ext::2318994541::Partial","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905006},{"name":"OnPassRemap","fqn":"module::2403285159::OnPassRemap","filepath":"src/types/boolean-logic/branching/OnPass.ts","startLine":14,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TNever","type":"TNever"},{"name":"TFalse","type":"TFalse"},{"name":"TError","type":"TError"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1625761714,"updated":1723767904245},{"name":"Constant","fqn":"module::3629498205::Constant","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":19,"endLine":19,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1398066754,"updated":1723767905134},{"name":"Iterate","fqn":"local::2391662311::Iterate","filepath":"src/types/boolean-logic/branching/OnPass.ts","startLine":54,"endLine":78,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TPass","type":"TPass"},{"name":"TRemap","type":"TRemap"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3359987054,"updated":1723767905006},{"name":"Merge","fqn":"local::2391662311::Merge","filepath":"src/types/boolean-logic/branching/OnPass.ts","startLine":24,"endLine":39,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TUser","type":"TUser"},{"name":"TKeys","type":"TKeys"},{"name":"TConfig","type":"TConfig"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2149018829,"updated":1723767905006},{"name":"Process","fqn":"local::2391662311::Process","filepath":"src/types/boolean-logic/branching/OnPass.ts","startLine":42,"endLine":52,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TPass","type":"TPass"},{"name":"TRemap","type":"TRemap"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3600394247,"updated":1723767905006},{"name":"IsUndefined","fqn":"module::1274869242::IsUndefined","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":23,"endLine":23,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2974750404,"updated":1723767905141},{"name":"ToString","fqn":"module::577891714::ToString","filepath":"src/types/boolean-logic/narrowing/AsIndexOf.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1108808035,"updated":1723767905014},{"name":"FnWithDescription","fqn":"module::3727409867::FnWithDescription","filepath":"src/types/boolean-logic/narrowing/AsDoneFn.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1624618435,"updated":1723767905014},{"name":"Process","fqn":"local::3619314027::Process","filepath":"src/types/boolean-logic/narrowing/AsSomething.ts","startLine":10,"endLine":17,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1727941439,"updated":1723767905014},{"name":"ClassDecoratorContext","fqn":"ext::2318994541::ClassDecoratorContext","filepath":"../../../../../node_modules/typescript/lib/lib.decorators.d.ts","startLine":2,"endLine":3,"scope":"external","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"Class","type":"Class"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904610},{"name":"ClassFieldDecoratorContext","fqn":"ext::2318994541::ClassFieldDecoratorContext","filepath":"../../../../../node_modules/typescript/lib/lib.decorators.d.ts","startLine":7,"endLine":8,"scope":"external","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"This","type":"This"},{"name":"Value","type":"Value"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904610},{"name":"IsEmptyContainer","fqn":"module::394049077::IsEmptyContainer","filepath":"src/types/lists/ArrayElementType.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3700321730,"updated":1723767904723},{"name":"ProcessTuple","fqn":"local::1640627676::ProcessTuple","filepath":"src/types/containers/RemoveNever.ts","startLine":38,"endLine":56,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TKeys","type":"TKeys"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3368436978,"updated":1723767904613},{"name":"ProcessObj","fqn":"local::1640627676::ProcessObj","filepath":"src/types/containers/RemoveNever.ts","startLine":14,"endLine":36,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TKeys","type":"TKeys"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1631579795,"updated":1723767904614},{"name":"_Keys","fqn":"local::1640627676::_Keys","filepath":"src/types/containers/RemoveNever.ts","startLine":9,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1106820088,"updated":1723767904614},{"name":"Process","fqn":"local::3397903486::Process","filepath":"src/types/containers/RemoveMarked.ts","startLine":20,"endLine":41,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TKeys","type":"TKeys"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2091031064,"updated":1723767904613},{"name":"_Keys","fqn":"local::3397903486::_Keys","filepath":"src/types/containers/RemoveMarked.ts","startLine":15,"endLine":18,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":299062067,"updated":1723767904613},{"name":"Process","fqn":"local::87702380::Process","filepath":"src/types/containers/RemoveUndefined.ts","startLine":21,"endLine":42,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TKeys","type":"TKeys"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1786253901,"updated":1723767904614},{"name":"_Keys","fqn":"local::87702380::_Keys","filepath":"src/types/containers/RemoveUndefined.ts","startLine":16,"endLine":19,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2949671065,"updated":1723767904614},{"name":"RemoveMarked","fqn":"module::500662101::RemoveMarked","filepath":"src/types/runtime-types/Dict.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":437198127,"updated":1723767904830},{"name":"ProcessTup","fqn":"local::3006455599::ProcessTup","filepath":"src/types/containers/RemoveEmpty.ts","startLine":30,"endLine":41,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Result","type":"Result"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":53948847,"updated":1723767904613},{"name":"ProcessObj","fqn":"local::3006455599::ProcessObj","filepath":"src/types/containers/RemoveEmpty.ts","startLine":43,"endLine":55,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":360264983,"updated":1723767904613},{"name":"SimplifyObject","fqn":"module::818348575::SimplifyObject","filepath":"src/types/dictionary/MakePropsMutable.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2800786764,"updated":1723767904648},{"name":"Unique","fqn":"module::3563854871::Unique","filepath":"src/types/dictionary/CombinedKeys.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3143636012,"updated":1723767904617},{"name":"Process","fqn":"local::2215088808::Process","filepath":"src/types/dictionary/CreateKV.ts","startLine":6,"endLine":16,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKeys","type":"TKeys"},{"name":"TValue","type":"TValue"},{"name":"TObj","type":"TObj"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2713719939,"updated":1723767904618},{"name":"_Get","fqn":"local::2221494839::_Get","filepath":"src/types/dictionary/Get.ts","startLine":4,"endLine":6,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"K","type":"K"},{"name":"Acc","type":"Acc"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1530648048,"updated":1723767904618},{"name":"UnionToIntersection","fqn":"module::1904522907::UnionToIntersection","filepath":"src/types/tuples/FromDictArray.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3001429288,"updated":1723767904950},{"name":"Process","fqn":"local::2352292282::Process","filepath":"src/types/dictionary/Keys.ts","startLine":45,"endLine":59,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3746163863,"updated":1723767904644},{"name":"_Public","fqn":"local::2352292282::_Public","filepath":"src/types/dictionary/Keys.ts","startLine":84,"endLine":94,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"},{"name":"TOutput","type":"TOutput"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1581399258,"updated":1723767904644},{"name":"Keys","fqn":"module::881437656::Keys","filepath":"src/types/dictionary/Keys.ts","startLine":77,"endLine":81,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**Keys**`<TContainer>`\n\nProvides the _explicit keys_ of a container `TContainer` as an array of values.\n\n```ts\ntype Obj = { foo: 1, bar: 2, [key: string]: unknown };\ntype Arr = [1,2,3];\n// readonly [\"foo\", \"bar\"]\ntype K1 = Keys<Obj>;\n// readonly [0,1,2]\ntype K2 = Keys<Arr>;\n```\n\n**Related:** `ValidKey`, `PublicKeys`","tags":[]}],"deps":["module::2872591658::Container","module::2666698309::Tuple","module::3860303104::As","local::2352292282::Process","module::4119350992::ObjectKey"],"refs":[],"symbolHash":202211848,"updated":1723767904255},{"name":"_KeyOf","fqn":"local::2352292282::_KeyOf","filepath":"src/types/dictionary/Keys.ts","startLine":127,"endLine":132,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3092702106,"updated":1723767904645},{"name":"PublicKeys","fqn":"module::3526817119::PublicKeys","filepath":"src/types/dictionary/Keys.ts","startLine":102,"endLine":102,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**PublicKeys**`<TContainer>`\n\nProvides a tuple of _keys_ for `TContainer` but unlike `Keys<T>` it removes any\nkeys which start with an underscore character.","tags":[]}],"deps":["module::2872591658::Container","local::2352292282::_Public","module::881437656::Keys"],"refs":[],"symbolHash":3115359928,"updated":1723767904256},{"name":"PrivateKeys","fqn":"module::1441699817::PrivateKeys","filepath":"src/types/dictionary/Keys.ts","startLine":122,"endLine":124,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**PrivateKeys**`<T>`\n\nKeys on an object which have a `_` character as first part of the\nname are considered private and this utility will create a union\nof all the keys in this category.\n\n**Related:** `PublicKeys`, `Keys`, `PrivateKeyOf`","tags":[]}],"deps":[],"refs":[],"symbolHash":166780852,"updated":1723767904256},{"name":"Process","fqn":"local::2487391577::Process","filepath":"src/types/dictionary/Values.ts","startLine":6,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKeys","type":"TKeys"},{"name":"TObj","type":"TObj"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3187338912,"updated":1723767904666},{"name":"VueRef","fqn":"module::984984219::VueRef","filepath":"src/types/dictionary/MaybeRef.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1649305967,"updated":1723767904661},{"name":"IsVueRef","fqn":"module::1228063573::IsVueRef","filepath":"src/types/type-conversion/ToString.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1651797769,"updated":1723767904978},{"name":"Pick","fqn":"ext::2318994541::Pick","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"K","type":"K"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904948},{"name":"RequiredKeys","fqn":"module::3734776969::RequiredKeys","filepath":"src/types/dictionary/RequiredProps.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":57486263,"updated":1723767904664},{"name":"RemoveIndexKeys","fqn":"module::3453304542::RemoveIndexKeys","filepath":"src/types/dictionary/OptionalProps.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":710302289,"updated":1723767904662},{"name":"OptionalKeys","fqn":"module::3167061785::OptionalKeys","filepath":"src/types/dictionary/OptionalProps.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2472655178,"updated":1723767904662},{"name":"Process","fqn":"local::159970369::Process","filepath":"src/types/dictionary/KeysWithValue.ts","startLine":11,"endLine":26,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKeys","type":"TKeys"},{"name":"TObj","type":"TObj"},{"name":"TValue","type":"TValue"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1194511231,"updated":1723767904646},{"name":"OptRequired","fqn":"module::3042253816::OptRequired","filepath":"src/types/dictionary/MapTo.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3671386662,"updated":1723767904661},{"name":"MapCardinalityIllustrated","fqn":"module::3538219116::MapCardinalityIllustrated","filepath":"src/types/dictionary/MapTo.ts","startLine":68,"endLine":68,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1619649354,"updated":1723767904263},{"name":"MapIR","fqn":"module::1711549169::MapIR","filepath":"src/types/dictionary/MapTo.ts","startLine":166,"endLine":168,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"extracts IR from a `FinalizedMapConfig`","tags":[]}],"deps":["module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::4164652471::DecomposeMapConfig"],"refs":[],"symbolHash":2452388732,"updated":1723767904267},{"name":"DefaultOneToManyMapping","fqn":"module::3986957099::DefaultOneToManyMapping","filepath":"src/types/dictionary/MapTo.ts","startLine":43,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"The _default_ One-to-Many mapping that the mapTo() utility provides","tags":[]}],"deps":[],"refs":[],"symbolHash":3209386143,"updated":1723767904262},{"name":"MapCard","fqn":"module::3249115044::MapCard","filepath":"src/types/dictionary/MapTo.ts","startLine":173,"endLine":175,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"extracts the MapCardinality from a `FinalizedMapConfig`","tags":[]}],"deps":["module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::4164652471::DecomposeMapConfig"],"refs":[],"symbolHash":2202644571,"updated":1723767904268},{"name":"MapOR","fqn":"module::3562651094::MapOR","filepath":"src/types/dictionary/MapTo.ts","startLine":178,"endLine":180,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"extracts OR from a `FinalizedMapConfig`","tags":[]}],"deps":["module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::4164652471::DecomposeMapConfig"],"refs":[],"symbolHash":2757340034,"updated":1723767904268},{"name":"Required","fqn":"ext::2318994541::Required","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904692},{"name":"Omit","fqn":"ext::2318994541::Omit","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"K","type":"K"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904936},{"name":"MapConfig","fqn":"module::1999165230::MapConfig","filepath":"src/types/dictionary/MapTo.ts","startLine":75,"endLine":90,"scope":"module","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"IR","type":"IR"},{"name":"D","type":"D"},{"name":"OR","type":"OR"}],"jsDocs":[{"comment":"The _user_ configuration of a **mapTo** mapper function\nwhich will be finalized by merging it with the appropriate\ndefault mapping type.","tags":[]}],"deps":["module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated"],"refs":[],"symbolHash":2930122752,"updated":1723767904264},{"name":"FinalizedMapConfig","fqn":"module::4096635909::FinalizedMapConfig","filepath":"src/types/dictionary/MapTo.ts","startLine":99,"endLine":103,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"IR","type":"IR"},{"name":"D","type":"D"},{"name":"OR","type":"OR"}],"jsDocs":[{"comment":"A finalized configuration of a **mapTo** mapper functions cardinality\nrelationships between _inputs_ and _outputs_.\n\nNote: _this configuration does _not_ yet include the actual mapping\nconfiguration between the input and output._","tags":[]}],"deps":["module::3042253816::OptRequired","module::1711549169::MapIR","module::3986957099::DefaultOneToManyMapping","module::3538219116::MapCardinalityIllustrated","module::3249115044::MapCard","module::3562651094::MapOR","ext::2318994541::Required","ext::2318994541::Omit","module::1999165230::MapConfig"],"refs":[],"symbolHash":1823138608,"updated":1723767904265},{"name":"MapTo","fqn":"module::2541467838::MapTo","filepath":"src/types/dictionary/MapTo.ts","startLine":322,"endLine":332,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"I","type":"I"},{"name":"O","type":"O"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"**MapTo<I, O>**\n\nA mapping function between an input type `I` and output type `O`. Defaults to using\nthe _default_ OneToMany mapping config.\n\n**Note:** this type is designed to guide the userland mapping; refer\nto `MapFn` if you want the type output by the `mapFn()` utility.","tags":[]}],"deps":["module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::3986957099::DefaultOneToManyMapping","module::1711549169::MapIR","module::4095187072::MapInput","module::3249115044::MapCard","module::3542797552::MapOutput","module::3562651094::MapOR"],"refs":[],"symbolHash":3274720428,"updated":1723767904273},{"name":"Mapper","fqn":"module::2390256795::Mapper","filepath":"src/types/dictionary/MapTo.ts","startLine":426,"endLine":448,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"I","type":"I"},{"name":"O","type":"O"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"**Mapper**\n\nA fully configured _mapper_ stemming from the **mapTo()** utility. It is both a mapping\nfunction and a dictionary which describes the mapper's properties.\n```ts\nconst m = mapTo.oneToOne().map( ... );\nconst mapped = m(inputs);\nconst mappedOver = inputs.map(m);\n```\n\nNote: the root of a `Mapper` is the mapper function but\nthis is combined with a dictionary of settings and types\nwhich you can use. For instance, look at the `fnSignature`\nproperty to get the _type_ signature of the map function.","tags":[]}],"deps":["module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::1711549169::MapIR","module::3562651094::MapOR","module::3249115044::MapCard","module::538174109::MapFn"],"refs":[],"symbolHash":2141299792,"updated":1723767904278},{"name":"DecomposeMapConfig","fqn":"module::4164652471::DecomposeMapConfig","filepath":"src/types/dictionary/MapTo.ts","startLine":145,"endLine":163,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"M","type":"M"}],"jsDocs":[{"comment":"Extracts the IR, Cardinality, and OR generics from a FinalizedMapConfig","tags":[]}],"deps":["module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::1999165230::MapConfig"],"refs":[],"symbolHash":684473398,"updated":1723767904267},{"name":"MergeObjects","fqn":"module::1930997862::MergeObjects","filepath":"src/types/literals/Choices.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2096358877,"updated":1723767904780},{"name":"ConfiguredMap","fqn":"module::161123951::ConfiguredMap","filepath":"src/types/dictionary/MapTo.ts","startLine":132,"endLine":140,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"C","type":"C"}],"jsDocs":[{"comment":"**ConfiguredMap**\n\nA partial application of the mapTo() utility which has expressed the\nconfiguration of the _inputs_ and _outputs_ and provides a `.map()`\nmethod which allows the user configure the specifics of the mapping.","tags":[]}],"deps":["module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::2541467838::MapTo","module::2390256795::Mapper","module::1711549169::MapIR","module::3249115044::MapCard","module::3562651094::MapOR"],"refs":[],"symbolHash":2651263239,"updated":1723767904266},{"name":"AsFinalizedConfig","fqn":"module::2280612438::AsFinalizedConfig","filepath":"src/types/dictionary/MapTo.ts","startLine":185,"endLine":194,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"},{"name":"D","type":"D"}],"jsDocs":[{"comment":"Merges the types of a userland configuration with a default configuration","tags":[]}],"deps":["module::1999165230::MapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::4096635909::FinalizedMapConfig","module::1930997862::MergeObjects","module::186693758::Dictionary"],"refs":[],"symbolHash":1200180391,"updated":1723767904269},{"name":"MapCardinalityConfig","fqn":"local::3073043475::MapCardinalityConfig","filepath":"src/types/dictionary/MapTo.ts","startLine":109,"endLine":123,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"IR","type":"IR"},{"name":"OR","type":"OR"}],"jsDocs":[{"comment":"User configuration exposed by a config function which specifies the\ncardinality already (e.g., `oneToMany()`, `manyToOne()`)","tags":[]}],"deps":[],"refs":[],"symbolHash":1961440501,"updated":1723767904654},{"name":"DefaultOneToOneMapping","fqn":"module::219196777::DefaultOneToOneMapping","filepath":"src/types/dictionary/MapTo.ts","startLine":48,"endLine":48,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"The _default_ One-to-One mapping that the mapTo() utility provides","tags":[]}],"deps":[],"refs":[],"symbolHash":3496305317,"updated":1723767904263},{"name":"DefaultManyToOneMapping","fqn":"module::216911648::DefaultManyToOneMapping","filepath":"src/types/dictionary/MapTo.ts","startLine":53,"endLine":53,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"The _default_ Many-to-One mapping that the mapTo() utility provides","tags":[]}],"deps":[],"refs":[],"symbolHash":2348726872,"updated":1723767904263},{"name":"MapInput","fqn":"module::4095187072::MapInput","filepath":"src/types/dictionary/MapTo.ts","startLine":277,"endLine":293,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"I","type":"I"},{"name":"IR","type":"IR"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated"],"refs":[],"symbolHash":3972897232,"updated":1723767904271},{"name":"MapOutput","fqn":"module::3542797552::MapOutput","filepath":"src/types/dictionary/MapTo.ts","startLine":295,"endLine":311,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"O","type":"O"},{"name":"OR","type":"OR"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated"],"refs":[],"symbolHash":73415803,"updated":1723767904272},{"name":"MapFnInput","fqn":"module::3929850549::MapFnInput","filepath":"src/types/dictionary/MapTo.ts","startLine":366,"endLine":380,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"I","type":"I"},{"name":"IR","type":"IR"},{"name":"D","type":"D"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated"],"refs":[],"symbolHash":3982124789,"updated":1723767904275},{"name":"MapFnOutput","fqn":"module::3961072340::MapFnOutput","filepath":"src/types/dictionary/MapTo.ts","startLine":334,"endLine":364,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"I","type":"I"},{"name":"O","type":"O"},{"name":"S","type":"S"},{"name":"OR","type":"OR"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated"],"refs":[],"symbolHash":1851438370,"updated":1723767904274},{"name":"MapFn","fqn":"module::538174109::MapFn","filepath":"src/types/dictionary/MapTo.ts","startLine":398,"endLine":408,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"I","type":"I"},{"name":"O","type":"O"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"The mapping function provided by the `mapFn()` utility. This _fn_\nis intended to be used in two ways:\n\n1. Iterative:\n   ```ts\n   const m = mapTo<I,O>(i => [ ... ]);\n   // maps inputs to outputs\n   const out = inputs.map(m);\n   ```\n2. Block:\n   ```ts\n   // maps inputs to outputs (filtering or splitting where appr.)\n   const out2 = m(inputs);\n   ```","tags":[]}],"deps":["module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::1711549169::MapIR","module::3929850549::MapFnInput","module::3249115044::MapCard","module::3961072340::MapFnOutput","module::3562651094::MapOR"],"refs":[],"symbolHash":1580476133,"updated":1723767904276},{"name":"WithKeys","fqn":"module::6736587::WithKeys","filepath":"src/types/dictionary/MakePropsMutable.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1589594736,"updated":1723767904648},{"name":"WithoutKeys","fqn":"module::2735667252::WithoutKeys","filepath":"src/types/dictionary/MakePropsMutable.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2535117322,"updated":1723767904648},{"name":"isReadonly","fqn":"local::3416378531::isReadonly","filepath":"src/types/dictionary/ReadonlyKeys.ts","startLine":7,"endLine":10,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"K","type":"K"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2369969941,"updated":1723767904663},{"name":"MakeIntoUnion","fqn":"local::2208580797::MakeIntoUnion","filepath":"src/types/dictionary/WithKeys.ts","startLine":3,"endLine":4,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2992558236,"updated":1723767904666},{"name":"MakeNumericIndex","fqn":"local::2208580797::MakeNumericIndex","filepath":"src/types/dictionary/WithKeys.ts","startLine":7,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1618070033,"updated":1723767904666},{"name":"Process","fqn":"local::4085884460::Process","filepath":"src/types/dictionary/WithValue.ts","startLine":13,"endLine":23,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TValue","type":"TValue"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":594024933,"updated":1723767904668},{"name":"IntersectingKeys","fqn":"module::2167685608::IntersectingKeys","filepath":"src/types/sets/Relate.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3030050136,"updated":1723767904856},{"name":"Process","fqn":"local::2987430520::Process","filepath":"src/types/dictionary/WithoutKeys.ts","startLine":9,"endLine":14,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3546035606,"updated":1723767904667},{"name":"KeysWithoutValue","fqn":"module::2803964246::KeysWithoutValue","filepath":"src/types/dictionary/WithoutValue.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1251403003,"updated":1723767904667},{"name":"NonNumericKeys","fqn":"module::3495790331::NonNumericKeys","filepath":"src/types/dictionary/WithNumericKeys.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3656188636,"updated":1723767904667},{"name":"NonStringKeys","fqn":"module::2634758165::NonStringKeys","filepath":"src/types/dictionary/WithStringKeys.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2291783906,"updated":1723767904668},{"name":"Process","fqn":"local::3450365745::Process","filepath":"src/types/dictionary/UpsertKeyValue.ts","startLine":9,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"K","type":"K"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1057440044,"updated":1723767904665},{"name":"BuildObj","fqn":"local::2955782784::BuildObj","filepath":"src/types/dictionary/EnsureKeys.ts","startLine":3,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TType","type":"TType"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1077519163,"updated":1723767904642},{"name":"FnDefn","fqn":"module::578458603::FnDefn","filepath":"src/types/literals/DoneFnTuple.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":336025797,"updated":1723767904777},{"name":"KvFnDefn","fqn":"module::2716012356::KvFnDefn","filepath":"src/types/dictionary/KvFn.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**KvFnDefn**\n\nUsed as input to the `KvFn<T>` utility.","tags":[]}],"deps":["module::578458603::FnDefn"],"refs":[],"symbolHash":2921127151,"updated":1723767904286},{"name":"Process","fqn":"local::2002332006::Process","filepath":"src/types/dictionary/CreateLookup.ts","startLine":6,"endLine":40,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TPayload","type":"TPayload"},{"name":"TKeyProp","type":"TKeyProp"},{"name":"TValProp","type":"TValProp"},{"name":"TOutput","type":"TOutput"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4187978960,"updated":1723767904643},{"name":"Process","fqn":"local::341612160::Process","filepath":"src/types/dictionary/MergeKVs.ts","startLine":6,"endLine":18,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"},{"name":"TOutput","type":"TOutput"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2065848277,"updated":1723767904661},{"name":"ProcessTupleKeys","fqn":"local::2355838702::ProcessTupleKeys","filepath":"src/types/dictionary/MakeKeysOptional.ts","startLine":8,"endLine":17,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":127365563,"updated":1723767904647},{"name":"ProcessUnionKeys","fqn":"local::2355838702::ProcessUnionKeys","filepath":"src/types/dictionary/MakeKeysOptional.ts","startLine":19,"endLine":28,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1802527245,"updated":1723767904647},{"name":"TypeErrorInfo","fqn":"module::3926596428::TypeErrorInfo","filepath":"src/types/errors/Throw.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3724206025,"updated":1723767904682},{"name":"Error","fqn":"local::206009832::Error","filepath":"src/types/errors/AsError.ts","startLine":14,"endLine":21,"scope":"local","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TName","type":"TName"},{"name":"TMsg","type":"TMsg"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4246701709,"updated":1723767904672},{"name":"AsError__Meta","fqn":"module::3445016838::AsError__Meta","filepath":"src/types/errors/AsError.ts","startLine":24,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3926596428::TypeErrorInfo"],"refs":[],"symbolHash":4229928334,"updated":1723767904290},{"name":"Process","fqn":"local::206009832::Process","filepath":"src/types/errors/AsError.ts","startLine":40,"endLine":58,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3148005535,"updated":1723767904673},{"name":"ErrorCondition","fqn":"module::1957285337::ErrorCondition","filepath":"src/types/errors/ErrorCondition.ts","startLine":106,"endLine":125,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TMsg","type":"TMsg"},{"name":"TUtility","type":"TUtility"},{"name":"TStack","type":"TStack"},{"name":"TRest","type":"TRest"}],"jsDocs":[{"comment":"**ErrorCondition**`<TKind,[TMsg],[TDomain],[TVars]>`\n\nA way to express a meaningful error message in type system.\n\n**Related:** `Throw`, `ProxyError`, `MapError`, `IsErrorCondition`","tags":[]}],"deps":["module::93108774::TypeErrorInfo","module::4114441065::EmptyObject","module::3435872486::ExpandRecursively","module::634500037::RemoveNever"],"refs":[],"symbolHash":3785322720,"updated":1723767904293},{"name":"TypeErrorInfo","fqn":"module::93108774::TypeErrorInfo","filepath":"src/types/errors/ErrorCondition.ts","startLine":8,"endLine":85,"scope":"module","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContext","type":"TContext"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["ext::2318994541::Record","module::4114441065::EmptyObject","module::1957285337::ErrorCondition"],"refs":[],"symbolHash":1064120399,"updated":1723767904292},{"name":"RemoveNever","fqn":"module::634500037::RemoveNever","filepath":"src/types/lists/RetainByProp.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3572919157,"updated":1723767904745},{"name":"StackFrame","fqn":"module::2740749792::StackFrame","filepath":"src/types/errors/StackTrace.ts","startLine":3,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3926192647,"updated":1723767904294},{"name":"Error","fqn":"ext::2318994541::Error","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":4,"endLine":4,"scope":"external","flags":["None","FunctionScopedVariable","Interface","Transient","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]},{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904679},{"name":"PascalCase","fqn":"module::82172027::PascalCase","filepath":"src/types/string-literals/casing/CamelCase.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2186859358,"updated":1723767905081},{"name":"KebabCase","fqn":"module::2853127496::KebabCase","filepath":"src/types/functional/Result.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1542023722,"updated":1723767904692},{"name":"KindError","fqn":"module::629381106::KindError","filepath":"src/types/errors/KindError.ts","startLine":27,"endLine":35,"scope":"module","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"**KindError**\n\nAn error which:\n\n- must have a \"kind\" type defined which can be used to categorize the error\n- is allowed to express other key/value pairs in the `context` property\n\nThis error is generated with the `kindError(kind, _defineContext) => (msg, ctx)`\nhigher order function.\n\n```ts\n// Defines the Error\nconst BadJuju = kindError(\"bad-juju\", { flavor?: \"\" });\n// BadJuju {\n//     name: BadJuju;\n//     kind: \"bad-juju\";\n//     msg: \"oh my god!\";\n//     context: { flavor?: string}\n// }\nBadJuju(\"oh my god!\");\nBadJuju(\"oh my god!\", { flavor: \"strawberry\"})\n```","tags":[]}],"deps":["ext::2318994541::Record","ext::2318994541::Error","module::82172027::PascalCase","module::2853127496::KebabCase"],"refs":[],"symbolHash":54403860,"updated":1723767904295},{"name":"StackDesc","fqn":"local::1263998295::StackDesc","filepath":"src/types/errors/ProxyError.ts","startLine":10,"endLine":14,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2809758724,"updated":1723767904681},{"name":"Underlying","fqn":"local::1263998295::Underlying","filepath":"src/types/errors/ProxyError.ts","startLine":4,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4164855329,"updated":1723767904681},{"name":"HandleStack","fqn":"local::2438819323::HandleStack","filepath":"src/types/errors/Throw.ts","startLine":21,"endLine":28,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TUtility","type":"TUtility"},{"name":"TRest","type":"TRest"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":879450834,"updated":1723767904682},{"name":"PartialErrorDefn","fqn":"module::3332347927::PartialErrorDefn","filepath":"src/types/errors/PartialError.ts","startLine":5,"endLine":11,"scope":"module","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1939532401::ErrorCondition"],"refs":[],"symbolHash":793469328,"updated":1723767904297},{"name":"PartialError","fqn":"module::2598461277::PartialError","filepath":"src/types/errors/CompleteError.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3052551316,"updated":1723767904679},{"name":"Req","fqn":"local::1346882915::Req","filepath":"src/types/errors/CompleteError.ts","startLine":13,"endLine":18,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2905676879,"updated":1723767904679},{"name":"Optional","fqn":"local::1346882915::Optional","filepath":"src/types/errors/CompleteError.ts","startLine":20,"endLine":29,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":958959268,"updated":1723767904679},{"name":"LeftRight","fqn":"module::1190632890::LeftRight","filepath":"src/types/sets/UniqueKv.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2918133973,"updated":1723767904857},{"name":"ResultErr","fqn":"module::1449148835::ResultErr","filepath":"src/types/functional/Result.ts","startLine":29,"endLine":66,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"C","type":"C"},{"name":"S","type":"S"}],"jsDocs":[{"comment":"`\n**ResultErr**\n\nA `ResultErr` provides the structure of an","tags":[]}],"deps":["ext::2318994541::Record","module::2853127496::KebabCase"],"refs":[],"symbolHash":1213181223,"updated":1723767904299},{"name":"RuntimeUnion","fqn":"module::27289767::RuntimeUnion","filepath":"src/types/functional/Result.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":429520048,"updated":1723767904691},{"name":"ErrInput","fqn":"module::1931856674::ErrInput","filepath":"src/types/functional/Result.ts","startLine":73,"endLine":76,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ResultErrInputs**\n\nThe types which can _represent_ an error within an `Err` block.","tags":[]}],"deps":["module::1449148835::ResultErr","module::27289767::RuntimeUnion"],"refs":[],"symbolHash":1121410163,"updated":1723767904300},{"name":"TakeProp","fqn":"module::731915050::TakeProp","filepath":"src/types/functional/Result.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3739494620,"updated":1723767904693},{"name":"StackTrace","fqn":"module::4194102057::StackTrace","filepath":"src/types/functional/Result.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1503393437,"updated":1723767904693},{"name":"ERR","fqn":"local::767579206::ERR","filepath":"src/types/functional/Result.ts","startLine":22,"endLine":22,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":151281847,"updated":1723767904696},{"name":"AsErr","fqn":"module::1037520660::AsErr","filepath":"src/types/functional/Result.ts","startLine":83,"endLine":98,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsErr**`<T>`\n\n**Related:** `AsErrKind`, `ResultErr`","tags":[]}],"deps":["module::1931856674::ErrInput","module::2535688849::TupleToUnion","module::27289767::RuntimeUnion","module::1449148835::ResultErr","module::2853127496::KebabCase","ext::2318994541::NonNullable","module::731915050::TakeProp","ext::2318994541::Required"],"refs":[],"symbolHash":875242132,"updated":1723767904301},{"name":"ResultTuple","fqn":"module::3044833185::ResultTuple","filepath":"src/types/functional/Result.ts","startLine":132,"endLine":137,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"**ResultTuple**\n\nA tuple containing the types of both possible OK and ERR conditions and\nare stored in the `__kind` property of a `Result<T,E>`.","tags":[]}],"deps":["module::1931856674::ErrInput"],"refs":[],"symbolHash":4076251774,"updated":1723767904302},{"name":"OK","fqn":"local::767579206::OK","filepath":"src/types/functional/Result.ts","startLine":21,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":828170694,"updated":1723767904695},{"name":"Ok","fqn":"module::4205386834::Ok","filepath":"src/types/functional/Result.ts","startLine":161,"endLine":164,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"**Ok**`<T>`\n\nThe **ok** state of a `Result<T,E>` structure.","tags":[]}],"deps":["module::1931856674::ErrInput","local::767579206::OK","module::3044833185::ResultTuple"],"refs":[],"symbolHash":1059905547,"updated":1723767904304},{"name":"Err","fqn":"module::398563619::Err","filepath":"src/types/functional/Result.ts","startLine":151,"endLine":154,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"E","type":"E"},{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Err**`<E>`\n\nA type utility which receives a _representation_ of an error when using\nthe `Result<T,E>` structure. It will expand this _representation_ to a fully\nformed **state** and **err** property.","tags":[]}],"deps":["module::1931856674::ErrInput","local::767579206::ERR","module::1037520660::AsErr","module::3044833185::ResultTuple"],"refs":[],"symbolHash":729041403,"updated":1723767904304},{"name":"Result","fqn":"module::4215597801::Result","filepath":"src/types/functional/Result.ts","startLine":173,"endLine":176,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"**Result**`<T,E>`\n\nA structure which contains the union of either an OK or ERR\nstate. This is meant to resemble the **Rust** type of the same\nname as much as possible.","tags":[]}],"deps":["module::1931856674::ErrInput","module::4205386834::Ok","module::398563619::Err"],"refs":[],"symbolHash":3868857485,"updated":1723767904304},{"name":"_IsResult","fqn":"local::767579206::_IsResult","filepath":"src/types/functional/Result.ts","startLine":201,"endLine":211,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TVal","type":"TVal"},{"name":"TErr","type":"TErr"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2921066830,"updated":1723767904695},{"name":"TypeGuard","fqn":"module::3224493375::TypeGuard","filepath":"src/types/runtime-types/TypeTuple.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1618581124,"updated":1723767904852},{"name":"IsFunction","fqn":"module::1498766630::IsFunction","filepath":"src/types/functional/Result.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3202176055,"updated":1723767904698},{"name":"IsNonEmptyObject","fqn":"module::3866744368::IsNonEmptyObject","filepath":"src/types/functions/NarrowingFn.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4103208750,"updated":1723767904711},{"name":"FnMeta","fqn":"module::1086143214::FnMeta","filepath":"src/types/functions/ToFn.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3160929546,"updated":1723767904713},{"name":"JustFunction","fqn":"module::809272385::JustFunction","filepath":"src/types/functions/FnWithProps.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1315463225,"updated":1723767904703},{"name":"AsFnMeta","fqn":"module::2610106395::AsFnMeta","filepath":"src/types/functions/RemoveFnProps.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4143273224,"updated":1723767904713},{"name":"IsNarrowingFn","fqn":"module::3096040080::IsNarrowingFn","filepath":"src/types/type-conversion/Widen.ts","startLine":28,"endLine":28,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2329928375,"updated":1723767904982},{"name":"PromiseLike","fqn":"ext::2318994541::PromiseLike","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":4,"endLine":4,"scope":"external","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904953},{"name":"Awaited","fqn":"ext::2318994541::Awaited","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":4,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767904712},{"name":"Process","fqn":"local::2479988965::Process","filepath":"src/types/functions/FnProps.ts","startLine":9,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3850867295,"updated":1723767904705},{"name":"FnDefn","fqn":"module::2142645710::FnDefn","filepath":"src/types/functions/FnWithDescription.ts","startLine":3,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3580587573::AnyFunction","ext::2318994541::Record","module::4119350992::ObjectKey"],"refs":[],"symbolHash":2918202220,"updated":1723767904314},{"name":"NarrowingFn","fqn":"module::2280783541::NarrowingFn","filepath":"src/types/functions/NarrowingFn.ts","startLine":32,"endLine":45,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"}],"jsDocs":[{"comment":"**NarrowingFn**`<N>`\n\nProduces a function which helps to narrow down to the type passed in \nby assigning generics to all input parameters.\n\n```ts\n// <T extends string>(name: string) => string\ntype Fn1 = NarrowingFn<(name: string) => string>;\n// <T extends number>(v: T) => T\ntype Fn2 = NarrowingFn<number>;\n// <T extends number>(v: T) => T\ntype Fn2 = NarrowingFn<42>;\n```\n\n**Related:** `LiteralFn`, `IsNarrowingFn`","tags":[]}],"deps":["module::3580587573::AnyFunction","module::540585742::TypedFunction","module::1364134543::IsEqual","ext::2318994541::Parameters","module::3686363877::Throw","module::3096040080::IsNarrowingFn","ext::2318994541::ReturnType"],"refs":[],"symbolHash":1292837879,"updated":1723767904316},{"name":"LiteralFn","fqn":"module::3275125468::LiteralFn","filepath":"src/types/functions/LiteralFn.ts","startLine":19,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"}],"jsDocs":[{"comment":"**LiteralFn**`<TFn>`\n\nReceives any function `TFn` and makes sure that it is not using\ngenerics to narrow the inputs coming into the function.\n\n**Related:** `IsLiteralFn`, `NarrowingFn`","tags":[]}],"deps":["module::3580587573::AnyFunction","module::2610106395::AsFnMeta"],"refs":[],"symbolHash":4260821628,"updated":1723767904317},{"name":"IsLiteral","fqn":"module::2707240268::IsLiteral","filepath":"src/types/string-literals/character-sets/ValueAtDotPath.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4008516440,"updated":1723767905144},{"name":"IsUnset","fqn":"module::1436230481::IsUnset","filepath":"src/types/functions/WrapperFn.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":902559892,"updated":1723767904713},{"name":"FnFrom","fqn":"module::2388804063::FnFrom","filepath":"src/types/functions/WrapperFn.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2681445355,"updated":1723767904714},{"name":"AsNarrowingFn","fqn":"module::1189946910::AsNarrowingFn","filepath":"src/types/functions/WrapperFn.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3338631380,"updated":1723767904714},{"name":"_AsArray","fqn":"local::3818237550::_AsArray","filepath":"src/types/lists/AsArray.ts","startLine":3,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1908844040,"updated":1723767904724},{"name":"ComparatorOperation","fqn":"module::3462458201::ComparatorOperation","filepath":"src/types/lists/RetainByProp.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2973215442,"updated":1723767904745},{"name":"IsArray","fqn":"module::1412066075::IsArray","filepath":"src/types/type-conversion/ToNumber.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3660323684,"updated":1723767904977},{"name":"Process","fqn":"local::2476446411::Process","filepath":"src/types/lists/Filter.ts","startLine":27,"endLine":38,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TFilter","type":"TFilter"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":42403085,"updated":1723767904724},{"name":"Process","fqn":"local::4212362060::Process","filepath":"src/types/lists/FilterByProp.ts","startLine":35,"endLine":47,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TComparator","type":"TComparator"},{"name":"TProp","type":"TProp"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2992116553,"updated":1723767904725},{"name":"Process","fqn":"local::2430456485::Process","filepath":"src/types/lists/FilterLiterals.ts","startLine":5,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":120345962,"updated":1723767904725},{"name":"ProcessString","fqn":"local::1822106442::ProcessString","filepath":"src/types/lists/Length.ts","startLine":17,"endLine":23,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":546860769,"updated":1723767904743},{"name":"_Keys","fqn":"local::1822106442::_Keys","filepath":"src/types/lists/Length.ts","startLine":13,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2699910850,"updated":1723767904743},{"name":"IfLength","fqn":"module::4285962579::IfLength","filepath":"src/types/lists/Last.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3518987250,"updated":1723767904742},{"name":"Override","fqn":"local::2666123552::Override","filepath":"src/types/lists/IndexOf.ts","startLine":20,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TOverride","type":"TOverride"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3438640779,"updated":1723767904742},{"name":"Process","fqn":"local::2666123552::Process","filepath":"src/types/lists/IndexOf.ts","startLine":88,"endLine":122,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TIdx","type":"TIdx"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2555240400,"updated":1723767904742},{"name":"Get","fqn":"module::4189225722::Get","filepath":"src/types/lists/UnionFromProp.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3016350678,"updated":1723767904750},{"name":"Iterate","fqn":"local::3681635331::Iterate","filepath":"src/types/lists/Flatten.ts","startLine":61,"endLine":68,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TDepth","type":"TDepth"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3401506636,"updated":1723767904727},{"name":"Process","fqn":"local::3681635331::Process","filepath":"src/types/lists/Flatten.ts","startLine":90,"endLine":99,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TLevel","type":"TLevel"}],"jsDocs":[{"comment":"Responsible for branching the flattening operation\nto either `_Flat`, `WideFlatten` for Tuples or Arrays\nand `FlattenUnion` for a union type.\n\nJust returns `TList` \"as is\" if it's not a a Tuple or\nUnion type.","tags":[]}],"deps":[],"refs":[],"symbolHash":3869777833,"updated":1723767904727},{"name":"IterateScalar","fqn":"local::3681635331::IterateScalar","filepath":"src/types/lists/Flatten.ts","startLine":114,"endLine":121,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TLevel","type":"TLevel"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2255123907,"updated":1723767904727},{"name":"RevAcc","fqn":"local::3172967922::RevAcc","filepath":"src/types/lists/Reverse.ts","startLine":3,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1651581570,"updated":1723767904746},{"name":"PrepList","fqn":"local::3352558065::PrepList","filepath":"src/types/lists/Retain.ts","startLine":38,"endLine":51,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"O","type":"O"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3787131501,"updated":1723767904745},{"name":"Process","fqn":"local::3352558065::Process","filepath":"src/types/lists/Retain.ts","startLine":25,"endLine":36,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TComparator","type":"TComparator"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":224263664,"updated":1723767904745},{"name":"Process","fqn":"local::839838833::Process","filepath":"src/types/lists/RetainByProp.ts","startLine":35,"endLine":47,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TComparator","type":"TComparator"},{"name":"TProp","type":"TProp"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2992116553,"updated":1723767904745},{"name":"Process","fqn":"local::1435279640::Process","filepath":"src/types/lists/RetainLiterals.ts","startLine":6,"endLine":14,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3577399571,"updated":1723767904745},{"name":"Process","fqn":"local::4013046669::Process","filepath":"src/types/lists/RetainWideTypes.ts","startLine":6,"endLine":14,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2828170192,"updated":1723767904746},{"name":"FindAcc","fqn":"local::1767637946::FindAcc","filepath":"src/types/lists/Find.ts","startLine":3,"endLine":20,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TOp","type":"TOp"},{"name":"TComparator","type":"TComparator"},{"name":"TDeref","type":"TDeref"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3630239425,"updated":1723767904729},{"name":"Add","fqn":"module::2714376692::Add","filepath":"src/types/lists/Slice.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2441393935,"updated":1723767904747},{"name":"TakeFirst","fqn":"module::71757441::TakeFirst","filepath":"src/types/lists/TakeLast.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":302769635,"updated":1723767904749},{"name":"IsGreaterThanOrEqual","fqn":"module::2021481320::IsGreaterThanOrEqual","filepath":"src/types/lists/Slice.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":778958924,"updated":1723767904747},{"name":"RemoveStart","fqn":"module::1656198109::RemoveStart","filepath":"src/types/lists/Slice.ts","startLine":19,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TStart","type":"TStart"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4007167582::IsPositiveNumber","module::1695495442::FixedLengthArray","module::3686363877::Throw","module::2714376692::Add"],"refs":[],"symbolHash":134016215,"updated":1723767904329},{"name":"TruncateAtLen","fqn":"module::566869884::TruncateAtLen","filepath":"src/types/lists/Slice.ts","startLine":38,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TLen","type":"TLen"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1640529169::IsNegativeNumber","module::1931245833::If","module::3252841211::IsGreaterThan","module::603953565::Abs","module::71757441::TakeFirst","module::2714376692::Add","module::2021481320::IsGreaterThanOrEqual"],"refs":[],"symbolHash":1322535670,"updated":1723767904329},{"name":"PreProcess","fqn":"local::3319298851::PreProcess","filepath":"src/types/lists/Slice.ts","startLine":87,"endLine":106,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TStart","type":"TStart"},{"name":"TLen","type":"TLen"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2460539055,"updated":1723767904748},{"name":"IsTruthy","fqn":"module::672944827::IsTruthy","filepath":"src/types/type-conversion/ToBoolean.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1409657997,"updated":1723767904976},{"name":"Process","fqn":"local::3032479891::Process","filepath":"src/types/lists/LogicalReturns.ts","startLine":5,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValues","type":"TValues"},{"name":"_TParams","type":"_TParams"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4045675695,"updated":1723767904743},{"name":"Intersect","fqn":"local::1102818139::Intersect","filepath":"src/types/lists/IntersectAll.ts","startLine":3,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TIntersect","type":"TIntersect"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":536711131,"updated":1723767904742},{"name":"Process","fqn":"local::2581725621::Process","filepath":"src/types/lists/NumericKeys.ts","startLine":26,"endLine":34,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4253250993,"updated":1723767904743},{"name":"ConverterKeys","fqn":"local::1826827089::ConverterKeys","filepath":"src/types/lists/ConvertAndMap.ts","startLine":29,"endLine":41,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"},{"name":"N","type":"N"},{"name":"B","type":"B"},{"name":"O","type":"O"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1169648155,"updated":1723767904732},{"name":"ConverterInputUnion","fqn":"local::1826827089::ConverterInputUnion","filepath":"src/types/lists/ConvertAndMap.ts","startLine":53,"endLine":63,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TConverted","type":"TConverted"},{"name":"TRemaining","type":"TRemaining"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3898435597,"updated":1723767904732},{"name":"StrongMap","fqn":"module::398229324::StrongMap","filepath":"src/types/lists/ConvertAndMap.ts","startLine":107,"endLine":114,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDefined","type":"TDefined"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2896563307::ConverterCoverage","ext::2318994541::Record"],"refs":[],"symbolHash":1134674059,"updated":1723767904335},{"name":"ConverterCoverage","fqn":"module::2896563307::ConverterCoverage","filepath":"src/types/lists/ConvertAndMap.ts","startLine":78,"endLine":78,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1858532831,"updated":1723767904333},{"name":"StrongMapTypes","fqn":"module::3813498580::StrongMapTypes","filepath":"src/types/lists/ConvertAndMap.ts","startLine":90,"endLine":105,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2535688849::TupleToUnion","module::2295046820::First","module::458105997::UnionToTuple","module::798798449::AfterFirst","ext::2318994541::Record"],"refs":[],"symbolHash":3152027708,"updated":1723767904334},{"name":"MapCoverage","fqn":"module::3560705549::MapCoverage","filepath":"src/types/lists/ConvertAndMap.ts","startLine":84,"endLine":88,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Extracts the coverage provided by a `StrongMap` as a Tuple","tags":[]}],"deps":["module::398229324::StrongMap","module::2896563307::ConverterCoverage","module::458105997::UnionToTuple"],"refs":[],"symbolHash":516590178,"updated":1723767904333},{"name":"ConversionTuple","fqn":"module::3767205438::ConversionTuple","filepath":"src/types/lists/ConvertSet.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3605609985::Narrowable"],"refs":[],"symbolHash":1641873720,"updated":1723767904336},{"name":"ConvertAcc","fqn":"local::2259542695::ConvertAcc","filepath":"src/types/lists/ConvertSet.ts","startLine":12,"endLine":22,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSet","type":"TSet"},{"name":"TConversions","type":"TConversions"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1671036515,"updated":1723767904735},{"name":"_Pop","fqn":"local::947494186::_Pop","filepath":"src/types/lists/Pop.ts","startLine":3,"endLine":7,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2851638955,"updated":1723767904744},{"name":"_Shift","fqn":"local::3151652387::_Shift","filepath":"src/types/lists/Shift.ts","startLine":12,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3404274872,"updated":1723767904746},{"name":"Pop","fqn":"module::4205836599::Pop","filepath":"src/types/lists/ReplaceLast.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2308960529,"updated":1723767904744},{"name":"Handle","fqn":"module::690480842::Handle","filepath":"src/types/lists/BeforeLast.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":634680255,"updated":1723767904736},{"name":"IsReadonlyArray","fqn":"module::2747467799::IsReadonlyArray","filepath":"src/types/numeric-literals/ToNumericArray.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1361655874,"updated":1723767904807},{"name":"Process","fqn":"local::1259673248::Process","filepath":"src/types/lists/GetEach.ts","startLine":11,"endLine":22,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TKey","type":"TKey"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2891055314,"updated":1723767904740},{"name":"Process","fqn":"local::2893570918::Process","filepath":"src/types/lists/ToCSV.ts","startLine":3,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TReplace","type":"TReplace"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1196053600,"updated":1723767904749},{"name":"Process","fqn":"local::3268560762::Process","filepath":"src/types/lists/Push.ts","startLine":3,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":607754784,"updated":1723767904744},{"name":"Process","fqn":"local::3682292868::Process","filepath":"src/types/lists/TakeFirst.ts","startLine":13,"endLine":32,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TLen","type":"TLen"},{"name":"TIdx","type":"TIdx"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2285254391,"updated":1723767904749},{"name":"Reverse","fqn":"module::3335621540::Reverse","filepath":"src/types/lists/TakeLast.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":271032458,"updated":1723767904749},{"name":"NamedColor_Gray","fqn":"module::1853643450::NamedColor_Gray","filepath":"src/types/literals/Color.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1476107911,"updated":1723767904341},{"name":"NamedColor_White","fqn":"module::3258999115::NamedColor_White","filepath":"src/types/literals/Color.ts","startLine":15,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1903629818,"updated":1723767904341},{"name":"NamedColor_Brown","fqn":"module::3010435364::NamedColor_Brown","filepath":"src/types/literals/Color.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3498458661,"updated":1723767904341},{"name":"NamedColor_Blue","fqn":"module::3732084026::NamedColor_Blue","filepath":"src/types/literals/Color.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4034120191,"updated":1723767904341},{"name":"NamedColor_Cyan","fqn":"module::3560199473::NamedColor_Cyan","filepath":"src/types/literals/Color.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":444194055,"updated":1723767904341},{"name":"NamedColor_Green","fqn":"module::3178349798::NamedColor_Green","filepath":"src/types/literals/Color.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3639616057,"updated":1723767904340},{"name":"NamedColor_Yellow","fqn":"module::1851902873::NamedColor_Yellow","filepath":"src/types/literals/Color.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2166255021,"updated":1723767904340},{"name":"NamedColor_Orange","fqn":"module::1111808991::NamedColor_Orange","filepath":"src/types/literals/Color.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3972067965,"updated":1723767904340},{"name":"NamedColor_Red","fqn":"module::2592338049::NamedColor_Red","filepath":"src/types/literals/Color.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":592922245,"updated":1723767904340},{"name":"NamedColor_Purple","fqn":"module::2044115328::NamedColor_Purple","filepath":"src/types/literals/Color.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":132976305,"updated":1723767904340},{"name":"NamedColor_Pink","fqn":"module::1376523986::NamedColor_Pink","filepath":"src/types/literals/Color.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":443387333,"updated":1723767904340},{"name":"HexadecimalChar","fqn":"module::3304895550::HexadecimalChar","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3900658296,"updated":1723767905130},{"name":"_ExpandTuple","fqn":"local::501531366::_ExpandTuple","filepath":"src/types/literals/ExpandRecursively.ts","startLine":4,"endLine":14,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TLength","type":"TLength"},{"name":"TContent","type":"TContent"},{"name":"TTuple","type":"TTuple"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2447855374,"updated":1723767904765},{"name":"ExpandTuple","fqn":"module::2612732298::ExpandTuple","filepath":"src/types/literals/ExpandRecursively.ts","startLine":35,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2666698309::Tuple","local::501531366::_ExpandTuple"],"refs":[],"symbolHash":3483810433,"updated":1723767904342},{"name":"ExpandParameters","fqn":"local::501531366::ExpandParameters","filepath":"src/types/literals/ExpandRecursively.ts","startLine":16,"endLine":33,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"},{"name":"TParams","type":"TParams"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":337609214,"updated":1723767904765},{"name":"ExpandRecursively","fqn":"module::220604077::ExpandRecursively","filepath":"src/types/literals/ExpandRecursively.ts","startLine":50,"endLine":57,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Recursively goes over an object based structure and tries to reduce\nit down to just a simple key/value type.","tags":[]}],"deps":["module::186693758::Dictionary","module::3580587573::AnyFunction","module::540585742::TypedFunction","local::501531366::ExpandParameters","ext::2318994541::Parameters"],"refs":[],"symbolHash":4200448165,"updated":1723767904343},{"name":"HasParameters","fqn":"module::1631669924::HasParameters","filepath":"src/types/literals/Box.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3478848756,"updated":1723767904767},{"name":"VueComputedRef","fqn":"module::1623293713::VueComputedRef","filepath":"src/types/literals/VueComputedRef.ts","startLine":12,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**VueComputedRef**\n\nThe goal of this type is to _appear_ to the runtime and type systems\nto be a `ComputedRef` (aka, **Computed** property). \n\nNone of the functionality is provided by this but it allows us to create \n_types_ and _type guards_ which can respond to this structure without \nneeding to have `Vue` but a dependency on this package.","tags":[]}],"deps":[],"refs":[],"symbolHash":199920128,"updated":1723767904345},{"name":"TypeTokenKind","fqn":"module::3926965677::TypeTokenKind","filepath":"src/types/literals/Shape.ts","startLine":25,"endLine":25,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":313068351,"updated":1723767904785},{"name":"Suggest","fqn":"module::3356276222::Suggest","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":107182674,"updated":1723767905131},{"name":"Narrow","fqn":"local::3386471196::Narrow","filepath":"src/types/literals/Shape.ts","startLine":32,"endLine":32,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2140535978,"updated":1723767904785},{"name":"Zip","fqn":"module::2202560718::Zip","filepath":"src/types/literals/Shape.ts","startLine":21,"endLine":21,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3290950370,"updated":1723767904786},{"name":"ZipPlus4","fqn":"module::2134780619::ZipPlus4","filepath":"src/types/literals/Shape.ts","startLine":22,"endLine":22,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3953222073,"updated":1723767904786},{"name":"ZipCode","fqn":"module::238184667::ZipCode","filepath":"src/types/literals/Shape.ts","startLine":15,"endLine":15,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3393309137,"updated":1723767904786},{"name":"TimeResolution","fqn":"module::3085509708::TimeResolution","filepath":"src/types/string-literals/DateTime.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":416344263,"updated":1723767904873},{"name":"MilitaryTime","fqn":"module::2132781540::MilitaryTime","filepath":"src/types/literals/Shape.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1206781892,"updated":1723767904787},{"name":"CivilianTime","fqn":"module::2944940530::CivilianTime","filepath":"src/types/literals/Shape.ts","startLine":18,"endLine":18,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3480064153,"updated":1723767904787},{"name":"Ip6Address","fqn":"module::741891914::Ip6Address","filepath":"src/types/literals/Shape.ts","startLine":20,"endLine":20,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":614631245,"updated":1723767904787},{"name":"SimpleToken","fqn":"module::668605161::SimpleToken","filepath":"src/types/runtime-types/SimpleType.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2788085815,"updated":1723767904836},{"name":"StringTokenUtilities","fqn":"module::3735181879::StringTokenUtilities","filepath":"src/types/literals/Shape.ts","startLine":70,"endLine":141,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2202560718::Zip","module::2134780619::ZipPlus4","module::238184667::ZipCode","module::3085509708::TimeResolution","module::2132781540::MilitaryTime","module::2944940530::CivilianTime","module::2631466056::Ip4Address","module::741891914::Ip6Address","ext::2318994541::RegExp","module::668605161::SimpleToken"],"refs":[],"symbolHash":2385913120,"updated":1723767904350},{"name":"ShapeCallback","fqn":"module::1473201238::ShapeCallback","filepath":"src/types/literals/Shape.ts","startLine":364,"endLine":364,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ShapeCallback**\n\nThis is a function signature for a property which you want to use\nthe `SharpApi` with to define types.","tags":[]}],"deps":["module::1643073629::ShapeApi"],"refs":[],"symbolHash":4087628025,"updated":1723767904356},{"name":"WideContainerNames","fqn":"module::1387603245::WideContainerNames","filepath":"src/types/literals/Shape.ts","startLine":30,"endLine":30,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3596922891,"updated":1723767904791},{"name":"WideTokenNames","fqn":"module::4069020921::WideTokenNames","filepath":"src/types/literals/Shape.ts","startLine":30,"endLine":30,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3162183505,"updated":1723767904792},{"name":"DictionaryTypeDefn","fqn":"module::3498155058::DictionaryTypeDefn","filepath":"src/types/literals/Shape.ts","startLine":217,"endLine":217,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["ext::2318994541::Record","module::4119350992::ObjectKey","module::1473201238::ShapeCallback"],"refs":[],"symbolHash":3906247613,"updated":1723767904352},{"name":"RecordKeyWideTokens","fqn":"module::70377396::RecordKeyWideTokens","filepath":"src/types/literals/Shape.ts","startLine":260,"endLine":260,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":145665626,"updated":1723767904353},{"name":"RecordKeyDefn","fqn":"module::3071457955::RecordKeyDefn","filepath":"src/types/literals/Shape.ts","startLine":262,"endLine":262,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::70377396::RecordKeyWideTokens","module::1473201238::ShapeCallback"],"refs":[],"symbolHash":1018811875,"updated":1723767904353},{"name":"HandleDoneFn","fqn":"module::1548065869::HandleDoneFn","filepath":"src/types/literals/Shape.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2393800158,"updated":1723767904790},{"name":"ShapeApi__Scalars","fqn":"module::3244353176::ShapeApi__Scalars","filepath":"src/types/literals/Shape.ts","startLine":144,"endLine":207,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TUnion","type":"TUnion"},{"name":"TExclude","type":"TExclude"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["ext::2318994541::Omit","module::3735181879::StringTokenUtilities","module::2535688849::TupleToUnion","module::1931245833::If","module::4187212716::IsTrue","module::1567416713::IsFalse","module::80185219::IsNever"],"refs":[],"symbolHash":57796944,"updated":1723767904352},{"name":"ShapeApi__Union","fqn":"local::3386471196::ShapeApi__Union","filepath":"src/types/literals/Shape.ts","startLine":213,"endLine":215,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3843385356,"updated":1723767904793},{"name":"ShapeApi__Functions","fqn":"local::3386471196::ShapeApi__Functions","filepath":"src/types/literals/Shape.ts","startLine":241,"endLine":258,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1084068503,"updated":1723767904792},{"name":"ShapeApi__WideContainers","fqn":"local::3386471196::ShapeApi__WideContainers","filepath":"src/types/literals/Shape.ts","startLine":295,"endLine":321,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1598765530,"updated":1723767904792},{"name":"ShapeApi__LiteralContainers","fqn":"local::3386471196::ShapeApi__LiteralContainers","filepath":"src/types/literals/Shape.ts","startLine":325,"endLine":340,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3945525263,"updated":1723767904792},{"name":"ShapeApi","fqn":"module::1643073629::ShapeApi","filepath":"src/types/literals/Shape.ts","startLine":352,"endLine":356,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"The `ShapeApi` is an API surface for defining types which have a runtime aspect\nto them as well.\n\nThis is precisely what the `shape()` runtime utility exposes\nbut any function can add this -- typically by associating a property on a function\n-- with the `ShapeCallback` type which simply gives this API to the caller of\nthe function.","tags":[]}],"deps":["module::3244353176::ShapeApi__Scalars","local::3386471196::ShapeApi__Union","local::3386471196::ShapeApi__Functions","local::3386471196::ShapeApi__WideContainers","local::3386471196::ShapeApi__LiteralContainers"],"refs":[],"symbolHash":2796397753,"updated":1723767904356},{"name":"Narrow","fqn":"module::721758871::Narrow","filepath":"src/types/literals/DoneFnTuple.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1356741025,"updated":1723767904777},{"name":"ChoiceValue","fqn":"module::2167556926::ChoiceValue","filepath":"src/types/literals/Choices.ts","startLine":41,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1626958147::ShapeCallback","module::3252133680::Scalar","module::186693758::Dictionary"],"refs":[],"symbolHash":708791948,"updated":1723767904359},{"name":"Choice","fqn":"module::1532643815::Choice","filepath":"src/types/literals/Choices.ts","startLine":36,"endLine":39,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1472827237,"updated":1723767904358},{"name":"CreateChoice","fqn":"module::4265022712::CreateChoice","filepath":"src/types/literals/Choices.ts","startLine":28,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**createChoice**(name, [value])\n\nCreates a \"choice\" for a Choice API. Values may be:\n\n- any `Scalar` value\n- a callback of the form `s => s.literal(42)`\n- or if left _undefined_ the value will be set to the name","tags":[]}],"deps":["module::2167556926::ChoiceValue","module::1532643815::Choice"],"refs":[],"symbolHash":4185460044,"updated":1723767904358},{"name":"ShapeCallback","fqn":"module::1626958147::ShapeCallback","filepath":"src/types/literals/FromDefn.ts","startLine":17,"endLine":17,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2492912253,"updated":1723767904783},{"name":"ChoiceCallback","fqn":"module::464682951::ChoiceCallback","filepath":"src/types/literals/Choices.ts","startLine":33,"endLine":33,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4265022712::CreateChoice","module::1532643815::Choice"],"refs":[],"symbolHash":2195145619,"updated":1723767904358},{"name":"ProcessChoices","fqn":"local::1388686635::ProcessChoices","filepath":"src/types/literals/Choices.ts","startLine":57,"endLine":67,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":387452478,"updated":1723767904779},{"name":"ChoiceApiOptions","fqn":"module::1657296860::ChoiceApiOptions","filepath":"src/types/literals/Choices.ts","startLine":75,"endLine":85,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2061979885,"updated":1723767904360},{"name":"ChoiceApi","fqn":"module::1836716696::ChoiceApi","filepath":"src/types/literals/Choices.ts","startLine":87,"endLine":90,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"_TChoices","type":"_TChoices"},{"name":"_TOptions","type":"_TOptions"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1532643815::Choice","module::1657296860::ChoiceApiOptions","module::4114441065::EmptyObject"],"refs":[],"symbolHash":2177831121,"updated":1723767904360},{"name":"MultipleChoice","fqn":"module::2889569332::MultipleChoice","filepath":"src/types/literals/Choices.ts","startLine":177,"endLine":204,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TChoices","type":"TChoices"},{"name":"TForceUnique","type":"TForceUnique"},{"name":"TState","type":"TState"},{"name":"TExclude","type":"TExclude"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::186693758::Dictionary","ext::2318994541::Exclude","module::1897058928::AsString","module::1931245833::If","module::4187212716::IsTrue"],"refs":[],"symbolHash":1611217942,"updated":1723767904363},{"name":"MergeKVs","fqn":"local::1388686635::MergeKVs","filepath":"src/types/literals/Choices.ts","startLine":221,"endLine":231,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"},{"name":"TOutput","type":"TOutput"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":799664068,"updated":1723767904782},{"name":"UnionElDefn","fqn":"module::1166273159::UnionElDefn","filepath":"src/types/literals/FromDefn.ts","startLine":18,"endLine":18,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2178253592,"updated":1723767904782},{"name":"IterateUnion","fqn":"local::1570400418::IterateUnion","filepath":"src/types/literals/FromDefn.ts","startLine":51,"endLine":53,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1719447709,"updated":1723767904782},{"name":"ProcessUnion","fqn":"local::1570400418::ProcessUnion","filepath":"src/types/literals/FromDefn.ts","startLine":44,"endLine":50,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3929609547,"updated":1723767904782},{"name":"NarrowableScalar","fqn":"module::1470572020::NarrowableScalar","filepath":"src/types/literals/FromDefn.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":904682945,"updated":1723767904783},{"name":"TypeDefinition","fqn":"module::2095159491::TypeDefinition","filepath":"src/types/literals/FromDefn.ts","startLine":96,"endLine":96,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1470572020::NarrowableScalar","module::1626958147::ShapeCallback"],"refs":[],"symbolHash":4291646204,"updated":1723767904369},{"name":"IterateOverDefinitions","fqn":"local::1570400418::IterateOverDefinitions","filepath":"src/types/literals/FromDefn.ts","startLine":89,"endLine":94,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TElse","type":"TElse"}],"jsDocs":[{"comment":"iterates over tuple definition types to convert into real types","tags":[]}],"deps":[],"refs":[],"symbolHash":2203714745,"updated":1723767904783},{"name":"ToType","fqn":"local::1570400418::ToType","filepath":"src/types/literals/FromDefn.ts","startLine":74,"endLine":84,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TElse","type":"TElse"}],"jsDocs":[{"comment":"converts non-tuple definition types to actual type","tags":[]}],"deps":[],"refs":[],"symbolHash":3952126287,"updated":1723767904783},{"name":"WideTokenNames","fqn":"module::2829112565::WideTokenNames","filepath":"src/types/literals/FromTokenNames.ts","startLine":4,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1316079524,"updated":1723767904370},{"name":"WideContainerNames","fqn":"module::1681984186::WideContainerNames","filepath":"src/types/literals/FromTokenNames.ts","startLine":42,"endLine":46,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1175624791,"updated":1723767904370},{"name":"ConvertWideTokenNames","fqn":"module::4261511665::ConvertWideTokenNames","filepath":"src/types/literals/FromTokenNames.ts","startLine":17,"endLine":39,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2829112565::WideTokenNames"],"refs":[],"symbolHash":1568979914,"updated":1723767904370},{"name":"ConvertWideContainerNames","fqn":"local::1062400672::ConvertWideContainerNames","filepath":"src/types/literals/FromTokenNames.ts","startLine":48,"endLine":58,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4244327700,"updated":1723767904784},{"name":"PreProcess","fqn":"local::1543726490::PreProcess","filepath":"src/types/numeric-literals/Add.ts","startLine":142,"endLine":161,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2448204439,"updated":1723767904798},{"name":"Process","fqn":"local::4092081188::Process","filepath":"src/types/numeric-literals/Abs.ts","startLine":9,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2815801802,"updated":1723767904798},{"name":"StripLeading","fqn":"module::2603245803::StripLeading","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":25340168,"updated":1723767905143},{"name":"ToNumber","fqn":"module::2061136353::ToNumber","filepath":"src/types/numeric-literals/AbsMaybe.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2350285873,"updated":1723767904798},{"name":"ConvertUnion","fqn":"local::1389743953::ConvertUnion","filepath":"src/types/numeric-literals/AsNumberWhenPossible.ts","startLine":16,"endLine":20,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4122115252,"updated":1723767904798},{"name":"ConvertTuple","fqn":"local::1389743953::ConvertTuple","filepath":"src/types/numeric-literals/AsNumberWhenPossible.ts","startLine":9,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":868080202,"updated":1723767904798},{"name":"Convert","fqn":"local::1389743953::Convert","filepath":"src/types/numeric-literals/AsNumberWhenPossible.ts","startLine":4,"endLine":6,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3272559932,"updated":1723767904798},{"name":"Pop","fqn":"local::1576984260::Pop","filepath":"src/types/numeric-literals/Decrement.ts","startLine":3,"endLine":7,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2882038820,"updated":1723767904799},{"name":"Neg","fqn":"local::431028319::Neg","filepath":"src/types/numeric-literals/Digitize.ts","startLine":17,"endLine":20,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"N","type":"N"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":429629052,"updated":1723767904799},{"name":"Pos","fqn":"local::431028319::Pos","filepath":"src/types/numeric-literals/Digitize.ts","startLine":12,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"N","type":"N"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":980920831,"updated":1723767904799},{"name":"Push","fqn":"local::2738291851::Push","filepath":"src/types/numeric-literals/Increment.ts","startLine":8,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":957662901,"updated":1723767904799},{"name":"Calc","fqn":"local::57676528::Calc","filepath":"src/types/numeric-literals/LessThan.ts","startLine":1,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"},{"name":"Count","type":"Count"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3148709620,"updated":1723767904805},{"name":"Calc","fqn":"local::2501721151::Calc","filepath":"src/types/numeric-literals/LessThanOrEqual.ts","startLine":3,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"},{"name":"Count","type":"Count"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":256011412,"updated":1723767904805},{"name":"Process","fqn":"local::1515442192::Process","filepath":"src/types/numeric-literals/NumericRange.ts","startLine":1,"endLine":4,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"L","type":"L"},{"name":"C","type":"C"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1053457863,"updated":1723767904806},{"name":"Process","fqn":"local::3351532202::Process","filepath":"src/types/numeric-literals/Subtract.ts","startLine":61,"endLine":72,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1360941161,"updated":1723767904806},{"name":"ToIntegerOp","fqn":"module::1905651550::ToIntegerOp","filepath":"src/types/numeric-literals/ToInteger.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":776306590,"updated":1723767904376},{"name":"EnsureKind","fqn":"local::2230825727::EnsureKind","filepath":"src/types/numeric-literals/ToInteger.ts","startLine":22,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TVal","type":"TVal"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":530476728,"updated":1723767904806},{"name":"Truncate","fqn":"local::2230825727::Truncate","filepath":"src/types/numeric-literals/ToInteger.ts","startLine":5,"endLine":10,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3791678642,"updated":1723767904806},{"name":"Round","fqn":"local::2230825727::Round","filepath":"src/types/numeric-literals/ToInteger.ts","startLine":12,"endLine":20,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3330183659,"updated":1723767904806},{"name":"_Convert","fqn":"local::2002753161::_Convert","filepath":"src/types/numeric-literals/ToNumericArray.ts","startLine":4,"endLine":10,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3587031088,"updated":1723767904807},{"name":"Process","fqn":"local::1830083322::Process","filepath":"src/types/numeric-literals/CSV.ts","startLine":16,"endLine":34,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Result","type":"Result"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":505530092,"updated":1723767904802},{"name":"ProcessStr","fqn":"local::1830083322::ProcessStr","filepath":"src/types/numeric-literals/CSV.ts","startLine":74,"endLine":88,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Result","type":"Result"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1538209926,"updated":1723767904802},{"name":"ProcessUnion","fqn":"local::1830083322::ProcessUnion","filepath":"src/types/numeric-literals/CSV.ts","startLine":90,"endLine":102,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Result","type":"Result"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":245134169,"updated":1723767904802},{"name":"ProcessUnionStr","fqn":"local::1830083322::ProcessUnionStr","filepath":"src/types/numeric-literals/CSV.ts","startLine":104,"endLine":112,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Result","type":"Result"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2760387980,"updated":1723767904803},{"name":"ProcessJsonTuple","fqn":"local::1830083322::ProcessJsonTuple","filepath":"src/types/numeric-literals/CSV.ts","startLine":36,"endLine":70,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Result","type":"Result"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1866781783,"updated":1723767904803},{"name":"AsNegativeNumber","fqn":"module::19220375::AsNegativeNumber","filepath":"src/types/numeric-literals/InvertNumericSign.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4195047867,"updated":1723767904804},{"name":"Process","fqn":"local::4278797605::Process","filepath":"src/types/numeric-literals/Delta.ts","startLine":15,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1642801435,"updated":1723767904803},{"name":"ParseInt","fqn":"module::938268314::ParseInt","filepath":"src/types/numeric-literals/Delta.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1155703656,"updated":1723767904803},{"name":"ProcessNeg","fqn":"local::4278797605::ProcessNeg","filepath":"src/types/numeric-literals/Delta.ts","startLine":50,"endLine":57,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2217298950,"updated":1723767904804},{"name":"AsLit","fqn":"local::4278797605::AsLit","filepath":"src/types/numeric-literals/Delta.ts","startLine":43,"endLine":47,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":339436259,"updated":1723767904804},{"name":"Zero","fqn":"module::959689088::Zero","filepath":"src/types/numeric-literals/AsNegativeNumber.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3789039492,"updated":1723767904804},{"name":"Process","fqn":"local::4036839051::Process","filepath":"src/types/numeric-literals/AsNegativeNumber.ts","startLine":9,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3716854297,"updated":1723767904804},{"name":"TypeKind","fqn":"module::1635256379::TypeKind","filepath":"src/types/runtime-types/Type.ts","startLine":55,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"A union of all the _types_ of types we have within the `Type` namespace.","tags":[]}],"deps":["module::3314850183::TypeKindLiteral","module::3634550848::TypeKindWide","module::4143067680::TypeKindFalsy","module::2749521974::TypeKindContainer"],"refs":[],"symbolHash":827778434,"updated":1723767904386},{"name":"TypeUnderlying","fqn":"module::2554918762::TypeUnderlying","filepath":"src/types/runtime-types/Type.ts","startLine":161,"endLine":161,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**TypeUnderlying**\n\nUsed in both `Type` and `TypeDefn` structures, it's value is one of\ntwo types:\n\n- `no-underlying` is used when no _underlying_ types are needed to\nspecify the type\n- `readonly unknown[]` is used to host unknown set of values which _combine_\nin some way to determine the **type** of the property\n\nNote: the property `underlying_","tags":[]}],"deps":[],"refs":[],"symbolHash":3898048144,"updated":1723767904387},{"name":"TypeDefaultValue","fqn":"module::270013585::TypeDefaultValue","filepath":"src/types/runtime-types/Type.ts","startLine":177,"endLine":181,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TRequired","type":"TRequired"},{"name":"TUnderlying","type":"TUnderlying"}],"jsDocs":[{"comment":"**TypeDefaultValue**\n\nThe resultant _value_ of the `defaultValue` prop in a `Type` structure\nand one of the generic's used to hold specifics for a `TypeDefn` struct.\n\n- either a Box<T> where T extends the type of the property\n- or, the constant `NoDefaultValue` indicating no default was set\n\nNote: the _generic_ `TWithDefault` in a `Type` is defined as `TypeHasDefaultValue`\nwhich is used to preserve type info but provide developers a \"summarized status.\"","tags":[]}],"deps":["module::1635256379::TypeKind","module::2554918762::TypeUnderlying","module::140145109::Box","local::1916287276::ToType","module::3024876770::NoDefaultValue"],"refs":[],"symbolHash":2942438959,"updated":1723767904388},{"name":"TypeKindContainerNarrow","fqn":"module::1466610925::TypeKindContainerNarrow","filepath":"src/types/runtime-types/Type.ts","startLine":48,"endLine":48,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2535688849::TupleToUnion"],"refs":[],"symbolHash":2741070421,"updated":1723767904385},{"name":"TypeKindContainerWide","fqn":"module::3709909229::TypeKindContainerWide","filepath":"src/types/runtime-types/Type.ts","startLine":49,"endLine":49,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2535688849::TupleToUnion"],"refs":[],"symbolHash":979591392,"updated":1723767904386},{"name":"TypeKindLiteral","fqn":"module::3314850183::TypeKindLiteral","filepath":"src/types/runtime-types/Type.ts","startLine":45,"endLine":45,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2535688849::TupleToUnion"],"refs":[],"symbolHash":2783742674,"updated":1723767904385},{"name":"TypeKindWide","fqn":"module::3634550848::TypeKindWide","filepath":"src/types/runtime-types/Type.ts","startLine":46,"endLine":46,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2535688849::TupleToUnion"],"refs":[],"symbolHash":3053294143,"updated":1723767904385},{"name":"TypeKindFalsy","fqn":"module::4143067680::TypeKindFalsy","filepath":"src/types/runtime-types/Type.ts","startLine":47,"endLine":47,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2535688849::TupleToUnion"],"refs":[],"symbolHash":4087096083,"updated":1723767904385},{"name":"TypeKindContainer","fqn":"module::2749521974::TypeKindContainer","filepath":"src/types/runtime-types/Type.ts","startLine":50,"endLine":50,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1466610925::TypeKindContainerNarrow","module::3709909229::TypeKindContainerWide"],"refs":[],"symbolHash":424664184,"updated":1723767904386},{"name":"IsLiteralKind","fqn":"module::46091115::IsLiteralKind","filepath":"src/types/runtime-types/Type.ts","startLine":65,"endLine":72,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsLiteralKind**`<T>`\n\nType utility which checks whether a given `TypeKind` maps to\na narrow / literal type.","tags":[]}],"deps":["module::1635256379::TypeKind","module::1931245833::If","module::2376902257::Or","module::488874576::Extends","module::3314850183::TypeKindLiteral","module::1466610925::TypeKindContainerNarrow"],"refs":[],"symbolHash":2801865686,"updated":1723767904387},{"name":"Box","fqn":"module::140145109::Box","filepath":"src/types/runtime-types/Type.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3900326841,"updated":1723767904844},{"name":"ToType","fqn":"local::1916287276::ToType","filepath":"src/types/runtime-types/Type.ts","startLine":90,"endLine":100,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TRequired","type":"TRequired"},{"name":"TUnderlying","type":"TUnderlying"}],"jsDocs":[{"comment":"**ToType**\n\nA type utility which takes a runtime type's \"kind\", whether it's\nrequired or not, and any _underlying_ values and produces the\nTypescript type.\n\nNote: because `Type` and `TypeDefn` have slightly different representations\nof TRequired and TUnderlying, we will accept either and convert.","tags":[]}],"deps":[],"refs":[],"symbolHash":2872300665,"updated":1723767904843},{"name":"NoDefaultValue","fqn":"module::3024876770::NoDefaultValue","filepath":"src/types/runtime-types/Type.ts","startLine":21,"endLine":21,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1777747364,"updated":1723767904844},{"name":"TypeDefnValidations","fqn":"module::30611199::TypeDefnValidations","filepath":"src/types/runtime-types/Type.ts","startLine":163,"endLine":163,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4172348918,"updated":1723767904387},{"name":"TypeDefn","fqn":"module::551358879::TypeDefn","filepath":"src/types/runtime-types/Type.ts","startLine":191,"endLine":205,"scope":"module","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TRequired","type":"TRequired"},{"name":"TDesc","type":"TDesc"},{"name":"TUnderlying","type":"TUnderlying"},{"name":"TDefaultVal","type":"TDefaultVal"},{"name":"TValidations","type":"TValidations"}],"jsDocs":[{"comment":"**TypeDefn**`<TKind,TRequired,TDesc,TUnderlying,...>`\n\nRepresents a minimal `Type` definition.\n\nNote: this type is typically then converted to a `Type<...>` type.","tags":[]}],"deps":["module::1635256379::TypeKind","module::2554918762::TypeUnderlying","module::270013585::TypeDefaultValue","module::30611199::TypeDefnValidations"],"refs":[],"symbolHash":167169137,"updated":1723767904389},{"name":"Type","fqn":"module::1796123045::Type","filepath":"src/types/runtime-types/Type.ts","startLine":263,"endLine":372,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TRequired","type":"TRequired"},{"name":"TDesc","type":"TDesc"},{"name":"TUnderlying","type":"TUnderlying"},{"name":"TWithDefault","type":"TWithDefault"},{"name":"TWithValidations","type":"TWithValidations"}],"jsDocs":[{"comment":"A type definition which retains valuable runtime characteristics","tags":[]}],"deps":["module::1635256379::TypeKind","module::405876797::TypeIsRequired","module::2554918762::TypeUnderlying","module::4026404333::TypeHasDefaultValue","module::1035359669::TypeHasValidations","local::1916287276::ToType","module::3314850183::TypeKindLiteral","module::3024876770::NoDefaultValue","module::140145109::Box","module::3224493375::TypeGuard","module::4270626473::ValidationFunction","module::3411198595::NotApplicable"],"refs":[],"symbolHash":1792060062,"updated":1723767904394},{"name":"TypeHasDefaultValue","fqn":"module::4026404333::TypeHasDefaultValue","filepath":"src/types/runtime-types/Type.ts","startLine":250,"endLine":250,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3086867271,"updated":1723767904390},{"name":"TypeHasValidations","fqn":"module::1035359669::TypeHasValidations","filepath":"src/types/runtime-types/Type.ts","startLine":251,"endLine":251,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1162794713,"updated":1723767904390},{"name":"TypeIsRequired","fqn":"module::405876797::TypeIsRequired","filepath":"src/types/runtime-types/Type.ts","startLine":57,"endLine":57,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1087788753,"updated":1723767904386},{"name":"ValidationFunction","fqn":"module::4270626473::ValidationFunction","filepath":"src/types/runtime-types/Type.ts","startLine":258,"endLine":258,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"A function which is provided a value `T` and must either return\n`true` or an `ErrorCondition` which describes the issue.","tags":[]}],"deps":["module::1939532401::ErrorCondition"],"refs":[],"symbolHash":741774181,"updated":1723767904391},{"name":"NotApplicable","fqn":"module::3411198595::NotApplicable","filepath":"src/types/runtime-types/Type.ts","startLine":22,"endLine":22,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3964395889,"updated":1723767904844},{"name":"TypeOf","fqn":"module::1286478530::TypeOf","filepath":"src/types/runtime-types/TypeOf.ts","startLine":19,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**TypeOf**\n\nThe possible _types_ returned by the Javascript `typeof` command.\n\n- most types such as `string`, `number`, `boolean`, `undefined`, etc. have very\nstraight forward \"types\"\n- the `object` type however translates into `null` and any array or object\n- even though `function` _is_ clearly separated from `object` at runtime with **typeof**\nit does allow dictionary properties to be attached along with being a function. This\ncontrasts with Typescript which models an intersection between a function signature\nand an object signature.\n\n**Related:** `TypeOfExtended`","tags":[]}],"deps":["module::2535688849::TupleToUnion"],"refs":[],"symbolHash":4182454323,"updated":1723767904394},{"name":"CSV","fqn":"module::1622830386::CSV","filepath":"src/types/runtime-types/StringLiteralToken.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":834755023,"updated":1723767904836},{"name":"BespokeLiteral","fqn":"module::3287164069::BespokeLiteral","filepath":"src/types/runtime-types/StringLiteralToken.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**BespokeLiteral**\n\nA string literal token which has a discrete literal value","tags":[]}],"deps":[],"refs":[],"symbolHash":1866632778,"updated":1723767904395},{"name":"OptionalOptModifier","fqn":"local::1549236178::OptionalOptModifier","filepath":"src/types/runtime-types/StringLiteralToken.ts","startLine":23,"endLine":23,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":744270547,"updated":1723767904837},{"name":"StringLiteralToken","fqn":"module::887915303::StringLiteralToken","filepath":"src/types/runtime-types/FromLiteralTokens.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3028279015,"updated":1723767904823},{"name":"_Convert","fqn":"local::3744221013::_Convert","filepath":"src/types/runtime-types/FromLiteralTokens.ts","startLine":34,"endLine":46,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Type","type":"Type"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2137431667,"updated":1723767904823},{"name":"_Tokenize","fqn":"local::4232818478::_Tokenize","filepath":"src/types/runtime-types/TokenizeStringLiteral.ts","startLine":13,"endLine":47,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Results","type":"Results"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1041333832,"updated":1723767904837},{"name":"TypeTokenStart","fqn":"module::3849587755::TypeTokenStart","filepath":"src/types/runtime-types/TypeToken.ts","startLine":169,"endLine":169,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"string which indicates the start of a `TypeToken`","tags":[]}],"deps":[],"refs":[],"symbolHash":3842946346,"updated":1723767904401},{"name":"TypeTokenStop","fqn":"module::2400022648::TypeTokenStop","filepath":"src/types/runtime-types/TypeToken.ts","startLine":173,"endLine":173,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"string which indicates the end of a `TypeToken`","tags":[]}],"deps":[],"refs":[],"symbolHash":2353397235,"updated":1723767904401},{"name":"TypeTokenAtomics","fqn":"module::326925864::TypeTokenAtomics","filepath":"src/types/runtime-types/TypeToken.ts","startLine":80,"endLine":80,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"TypeTokenAtomics\n\nThe token names which are considered \"atomic\"","tags":[]}],"deps":[],"refs":[],"symbolHash":4066128431,"updated":1723767904397},{"name":"BaseTypeToken","fqn":"module::4184466961::BaseTypeToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":64,"endLine":64,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**BaseTypeToken**\n\nA very simple structure for `TypeTokens` to fit into.\n\nUse this type if you need to preserve type simplicity, otherwise\nprefer `TypeToken` (or subsets like `AtomicToken`, `SingletonToken`, etc.)","tags":[]}],"deps":["module::3849587755::TypeTokenStart","module::2400022648::TypeTokenStop"],"refs":[],"symbolHash":3167386607,"updated":1723767904397},{"name":"ObjectToken","fqn":"module::1510255690::ObjectToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":110,"endLine":110,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2617993056,"updated":1723767904398},{"name":"TupleToken","fqn":"module::711924518::TupleToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":111,"endLine":111,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4048485047,"updated":1723767904398},{"name":"ArrayToken","fqn":"module::3473353245::ArrayToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":112,"endLine":112,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4184466961::BaseTypeToken"],"refs":[],"symbolHash":3665480960,"updated":1723767904398},{"name":"RecordToken","fqn":"module::3459124306::RecordToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":113,"endLine":113,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4184466961::BaseTypeToken"],"refs":[],"symbolHash":1751289042,"updated":1723767904398},{"name":"SetToken","fqn":"module::3758606698::SetToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":115,"endLine":115,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4184466961::BaseTypeToken"],"refs":[],"symbolHash":4127808528,"updated":1723767904398},{"name":"MapToken","fqn":"module::1096872270::MapToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":116,"endLine":116,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4184466961::BaseTypeToken"],"refs":[],"symbolHash":4292293212,"updated":1723767904399},{"name":"WeakMapToken","fqn":"module::1951883979::WeakMapToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":117,"endLine":117,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4184466961::BaseTypeToken"],"refs":[],"symbolHash":564620406,"updated":1723767904399},{"name":"UnionToken","fqn":"module::510054819::UnionToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":97,"endLine":97,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"_TEls","type":"_TEls"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2398367600,"updated":1723767904398},{"name":"UnionSetToken","fqn":"module::3725271233::UnionSetToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":108,"endLine":108,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**UnionSetToken**\n\n- static `<<union-set::`, then\n- set _name_ `${string}`, then\n- static `::[ `, then\n- set _parameters_ `${string}`, then\n- static ` ]>>`","tags":[]}],"deps":[],"refs":[],"symbolHash":646180495,"updated":1723767904398},{"name":"TypeTokenSingletons","fqn":"module::1329764664::TypeTokenSingletons","filepath":"src/types/runtime-types/TypeToken.ts","startLine":130,"endLine":130,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2891976769,"updated":1723767904400},{"name":"TypeTokenContainers","fqn":"module::1558484280::TypeTokenContainers","filepath":"src/types/runtime-types/TypeToken.ts","startLine":95,"endLine":95,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":109920631,"updated":1723767904398},{"name":"TypeTokenFunctions","fqn":"module::2456627345::TypeTokenFunctions","filepath":"src/types/runtime-types/TypeToken.ts","startLine":129,"endLine":129,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3297686912,"updated":1723767904400},{"name":"TypeTokenSets","fqn":"module::901954543::TypeTokenSets","filepath":"src/types/runtime-types/TypeToken.ts","startLine":149,"endLine":149,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":296495486,"updated":1723767904400},{"name":"TypeTokenKind","fqn":"module::2927843034::TypeTokenKind","filepath":"src/types/runtime-types/TypeToken.ts","startLine":158,"endLine":163,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**TypeTokenKind**\n\nThe full set of _type token_ kinds (aka, the first and\nidentifying part of the string token after the initial\ntoken identifier)","tags":[]}],"deps":["module::326925864::TypeTokenAtomics","module::1558484280::TypeTokenContainers","module::2456627345::TypeTokenFunctions","module::901954543::TypeTokenSets","module::1329764664::TypeTokenSingletons"],"refs":[],"symbolHash":3879699308,"updated":1723767904401},{"name":"TypeToken","fqn":"module::1364917418::TypeToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":182,"endLine":184,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**TypeToken**","tags":[]}],"deps":["module::2927843034::TypeTokenKind","module::3849587755::TypeTokenStart","module::2400022648::TypeTokenStop"],"refs":[],"symbolHash":1957565751,"updated":1723767904401},{"name":"Kind","fqn":"local::1169536605::Kind","filepath":"src/types/runtime-types/TypeToken.ts","startLine":194,"endLine":196,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2896366825,"updated":1723767904851},{"name":"Category","fqn":"local::1169536605::Category","filepath":"src/types/runtime-types/TypeToken.ts","startLine":202,"endLine":210,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3738410797,"updated":1723767904850},{"name":"Data","fqn":"local::1169536605::Data","filepath":"src/types/runtime-types/TypeToken.ts","startLine":198,"endLine":198,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3248594152,"updated":1723767904851},{"name":"TypeHelper","fqn":"local::1169536605::TypeHelper","filepath":"src/types/runtime-types/TypeToken.ts","startLine":271,"endLine":277,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3451998303,"updated":1723767904851},{"name":"Type","fqn":"local::1169536605::Type","filepath":"src/types/runtime-types/TypeToken.ts","startLine":259,"endLine":267,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TCat","type":"TCat"},{"name":"TKind","type":"TKind"},{"name":"TData","type":"TData"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2752374179,"updated":1723767904851},{"name":"ParseToken","fqn":"module::3947928683::ParseToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":297,"endLine":313,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ParseToken**`<T>`\n\nAttempts to parses the passed in string in `T` as a\n`TypeToken` and if successful returns meta characteristics:\n\n- `token` - the raw token in `T`\n- `kind` - the specific _kind_ of token; which uniquely identifies the token\n- `category` - the category of token (e.g., atomic, singleton, etc.)\n- `baseType` - the broad / base type of the token\n- _`literal`_ - where appropriate, the _literal_ type of the token\n\n**Notes:**\n- deeper type analysis must be done at runtime.\n- if `T` is not a valid token then an `ErrorCondition<\"invalid-token\">`\nwill be raised.","tags":[]}],"deps":["module::1364917418::TypeToken","local::1169536605::Kind","local::1169536605::Category","local::1169536605::Data","local::1169536605::TypeHelper","local::1169536605::Type","module::3686363877::Throw"],"refs":[],"symbolHash":1319297371,"updated":1723767904403},{"name":"OptDictProps","fqn":"module::1200569293::OptDictProps","filepath":"src/types/runtime-types/Dict.ts","startLine":28,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::500662101::RemoveMarked","module::3629498205::Constant"],"refs":[],"symbolHash":4215919382,"updated":1723767904405},{"name":"MakeKeysOptional","fqn":"module::67756402::MakeKeysOptional","filepath":"src/types/runtime-types/Dict.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3858988125,"updated":1723767904831},{"name":"SimpleScalarToken","fqn":"module::3020998664::SimpleScalarToken","filepath":"src/types/runtime-types/SimpleType.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":385954411,"updated":1723767904836},{"name":"CsvToStrUnion","fqn":"module::1216378731::CsvToStrUnion","filepath":"src/types/runtime-types/SimpleType.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3981006951,"updated":1723767904834},{"name":"CsvToUnion","fqn":"module::3758113013::CsvToUnion","filepath":"src/types/runtime-types/SimpleType.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4112589581,"updated":1723767904834},{"name":"SimpleUnionToken","fqn":"module::3353193508::SimpleUnionToken","filepath":"src/types/runtime-types/SimpleType.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2443121167,"updated":1723767904836},{"name":"CsvToTuple","fqn":"module::1078535262::CsvToTuple","filepath":"src/types/runtime-types/SimpleType.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":622563501,"updated":1723767904835},{"name":"UnderlyingType","fqn":"module::407330590::UnderlyingType","filepath":"src/types/runtime-types/SimpleType.ts","startLine":15,"endLine":15,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1027147693,"updated":1723767904835},{"name":"SimpleContainerToken","fqn":"module::2041178327::SimpleContainerToken","filepath":"src/types/runtime-types/SimpleType.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3763221532,"updated":1723767904836},{"name":"DictValues","fqn":"local::790434287::DictValues","filepath":"src/types/runtime-types/SimpleType.ts","startLine":22,"endLine":22,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1973284407,"updated":1723767904835},{"name":"SimpleType","fqn":"module::3264302810::SimpleType","filepath":"src/types/runtime-types/SimpleType.ts","startLine":129,"endLine":135,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**SimpleType**`<T>`\n\nA type utility which takes a `SimpleToken` and converts it to\nit's _type_ in the type system.\n\n**Related:** `ToShapeToken`, `StructuredStringType`","tags":[]}],"deps":["module::668605161::SimpleToken","module::3020998664::SimpleScalarToken","module::3191664397::SimpleTypeScalar","module::2041178327::SimpleContainerToken","module::4125943316::SimpleTypeContainer","module::3353193508::SimpleUnionToken","module::3618712560::SimpleTypeUnion"],"refs":[],"symbolHash":700265482,"updated":1723767904409},{"name":"SetTypes","fqn":"local::790434287::SetTypes","filepath":"src/types/runtime-types/SimpleType.ts","startLine":19,"endLine":19,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2309320191,"updated":1723767904835},{"name":"MapKeys","fqn":"local::790434287::MapKeys","filepath":"src/types/runtime-types/SimpleType.ts","startLine":20,"endLine":20,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3955866167,"updated":1723767904836},{"name":"MapValues","fqn":"local::790434287::MapValues","filepath":"src/types/runtime-types/SimpleType.ts","startLine":21,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2076482276,"updated":1723767904836},{"name":"SimpleTypeScalar","fqn":"module::3191664397::SimpleTypeScalar","filepath":"src/types/runtime-types/SimpleType.ts","startLine":29,"endLine":56,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**SimpleTypeScalar**`<T>`\n\nConverts a `SimpleScalarToken` into the _type_ it represents.","tags":[]}],"deps":["module::3020998664::SimpleScalarToken","module::1216378731::CsvToStrUnion","module::3758113013::CsvToUnion","module::116081596::AsNumber"],"refs":[],"symbolHash":3824229697,"updated":1723767904407},{"name":"SimpleTypeContainer","fqn":"module::4125943316::SimpleTypeContainer","filepath":"src/types/runtime-types/SimpleType.ts","startLine":83,"endLine":117,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2041178327::SimpleContainerToken","module::186693758::Dictionary","local::790434287::DictValues","module::3264302810::SimpleType","module::1931245833::If","module::1364134543::IsEqual","module::2994160504::ExpandDictionary","ext::2318994541::Record","ext::2318994541::Set","local::790434287::SetTypes","ext::2318994541::Map","local::790434287::MapKeys","local::790434287::MapValues"],"refs":[],"symbolHash":4068018442,"updated":1723767904409},{"name":"SimpleTypeUnion","fqn":"module::3618712560::SimpleTypeUnion","filepath":"src/types/runtime-types/SimpleType.ts","startLine":64,"endLine":81,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**SimpleTypeUnion**`<T>`\n\nConverts a `SimpleUnionToken` into the _type_ it represents.","tags":[]}],"deps":["module::3353193508::SimpleUnionToken","module::2535688849::TupleToUnion","module::1078535262::CsvToTuple","module::407330590::UnderlyingType"],"refs":[],"symbolHash":2376385225,"updated":1723767904407},{"name":"TypeToken","fqn":"module::1826455347::TypeToken","filepath":"src/types/runtime-types/AsType.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2378817544,"updated":1723767904833},{"name":"Iterate","fqn":"local::681641915::Iterate","filepath":"src/types/runtime-types/AsType.ts","startLine":9,"endLine":25,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3224302540,"updated":1723767904834},{"name":"ProcessSimple","fqn":"local::681641915::ProcessSimple","filepath":"src/types/runtime-types/AsType.ts","startLine":5,"endLine":7,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":157803510,"updated":1723767904834},{"name":"IsNull","fqn":"module::2388225899::IsNull","filepath":"src/types/sets/Intersection.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":679438988,"updated":1723767904855},{"name":"_NoDeref","fqn":"local::3304841468::_NoDeref","filepath":"src/types/sets/Intersection.ts","startLine":16,"endLine":25,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3481158605,"updated":1723767904855},{"name":"HandleDeref","fqn":"local::3304841468::HandleDeref","filepath":"src/types/sets/Intersection.ts","startLine":81,"endLine":112,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"},{"name":"TDeref","type":"TDeref"},{"name":"TReport","type":"TReport"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2373428280,"updated":1723767904855},{"name":"Process","fqn":"local::1547421093::Process","filepath":"src/types/sets/Unique.ts","startLine":31,"endLine":58,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValues","type":"TValues"},{"name":"TDeref","type":"TDeref"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1224059158,"updated":1723767904856},{"name":"UniqueKeys","fqn":"module::1191826886::UniqueKeys","filepath":"src/types/sets/Relate.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1286641761,"updated":1723767904856},{"name":"AsNumberWhenPossible","fqn":"module::427658836::AsNumberWhenPossible","filepath":"src/types/sets/UniqueKeys.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1441232899,"updated":1723767904856},{"name":"Process","fqn":"local::3746938522::Process","filepath":"src/types/string-literals/Concat.ts","startLine":18,"endLine":26,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"Result","type":"Result"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1831744559,"updated":1723767904867},{"name":"OneToOne","fqn":"module::3127397202::OneToOne","filepath":"src/types/string-literals/Cardinality.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":263388120,"updated":1723767904413},{"name":"OneToMany","fqn":"module::2540365964::OneToMany","filepath":"src/types/string-literals/Cardinality.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4163861910,"updated":1723767904413},{"name":"OneToZero","fqn":"module::110626775::OneToZero","filepath":"src/types/string-literals/Cardinality.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2843071388,"updated":1723767904413},{"name":"ZeroToOne","fqn":"module::1794694736::ZeroToOne","filepath":"src/types/string-literals/Cardinality.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1023615024,"updated":1723767904413},{"name":"ZeroToMany","fqn":"module::2430804893::ZeroToMany","filepath":"src/types/string-literals/Cardinality.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4055067281,"updated":1723767904413},{"name":"ZeroToZero","fqn":"module::502261370::ZeroToZero","filepath":"src/types/string-literals/Cardinality.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":930803827,"updated":1723767904413},{"name":"CardinalityFilter0","fqn":"module::993530937::CardinalityFilter0","filepath":"src/types/string-literals/Cardinality.ts","startLine":41,"endLine":47,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Cardinality which expects a singular input -- which is allowed to be\n_undefined_ -- and maps to 0,\n1, or many outputs.","tags":[]}],"deps":["module::1794694736::ZeroToOne","module::2430804893::ZeroToMany","module::3127397202::OneToOne","module::2540365964::OneToMany","module::110626775::OneToZero","module::502261370::ZeroToZero"],"refs":[],"symbolHash":3770361079,"updated":1723767904414},{"name":"CardinalityFilter1","fqn":"module::445640201::CardinalityFilter1","filepath":"src/types/string-literals/Cardinality.ts","startLine":28,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Cardinality which expects a singular input and maps to 0,\n1, or many outputs.","tags":[]}],"deps":["module::3127397202::OneToOne","module::2540365964::OneToMany","module::110626775::OneToZero"],"refs":[],"symbolHash":3839377316,"updated":1723767904414},{"name":"ManyToMany","fqn":"module::3208426553::ManyToMany","filepath":"src/types/string-literals/Cardinality.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3685346251,"updated":1723767904413},{"name":"ManyToOne","fqn":"module::42396894::ManyToOne","filepath":"src/types/string-literals/Cardinality.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3701530302,"updated":1723767904413},{"name":"ManyToZero","fqn":"module::710924510::ManyToZero","filepath":"src/types/string-literals/Cardinality.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1568916726,"updated":1723767904413},{"name":"CardinalityExplicit","fqn":"module::131843072::CardinalityExplicit","filepath":"src/types/string-literals/Cardinality.ts","startLine":49,"endLine":49,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2791941381,"updated":1723767904415},{"name":"Cardinality","fqn":"module::3869517639::Cardinality","filepath":"src/types/string-literals/Cardinality.ts","startLine":54,"endLine":60,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Cardinality of any sort between two types","tags":[]}],"deps":["module::993530937::CardinalityFilter0","module::445640201::CardinalityFilter1","module::3208426553::ManyToMany","module::42396894::ManyToOne","module::710924510::ManyToZero","module::131843072::CardinalityExplicit"],"refs":[],"symbolHash":1664047159,"updated":1723767904415},{"name":"Process","fqn":"local::272241130::Process","filepath":"src/types/string-literals/Chars.ts","startLine":3,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2611123179,"updated":1723767904869},{"name":"NonZeroNumericChar","fqn":"module::2113468514::NonZeroNumericChar","filepath":"src/types/string-literals/Time.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3618084442,"updated":1723767904935},{"name":"ZeroThenDigit","fqn":"local::3615328554::ZeroThenDigit","filepath":"src/types/string-literals/Date.ts","startLine":13,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":881647358,"updated":1723767904870},{"name":"DateSeparator","fqn":"module::2641699687::DateSeparator","filepath":"src/types/string-literals/Date.ts","startLine":44,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3850637037,"updated":1723767904417},{"name":"MonthNumeric","fqn":"module::109749371::MonthNumeric","filepath":"src/types/string-literals/Date.ts","startLine":35,"endLine":35,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MonthNumeric**\n\nThe month of the year represented in a numeric format.","tags":[]}],"deps":["module::2113468514::NonZeroNumericChar"],"refs":[],"symbolHash":1949391679,"updated":1723767904416},{"name":"MonthDay","fqn":"module::4119961824::MonthDay","filepath":"src/types/string-literals/Date.ts","startLine":42,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MonthDay**\n\nThe numeric day in the month.","tags":[]}],"deps":["local::3615328554::ZeroThenDigit","module::1881292962::NumericChar"],"refs":[],"symbolHash":3586207145,"updated":1723767904417},{"name":"MonthAbbr","fqn":"module::2407715061::MonthAbbr","filepath":"src/types/string-literals/Date.ts","startLine":28,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MonthAbbr**\n\nThe month of the year represented in an abbreviated string format.","tags":[]}],"deps":[],"refs":[],"symbolHash":3782317866,"updated":1723767904416},{"name":"Year","fqn":"module::3926647943::Year","filepath":"src/types/string-literals/Date.ts","startLine":7,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1881292962::NumericChar"],"refs":[],"symbolHash":3414609749,"updated":1723767904416},{"name":"MonthName","fqn":"module::2532690095::MonthName","filepath":"src/types/string-literals/Date.ts","startLine":20,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MonthName**\n\nThe month of the year represented as a full string name.","tags":[]}],"deps":[],"refs":[],"symbolHash":4212731226,"updated":1723767904416},{"name":"MonthPostfix","fqn":"module::3886584704::MonthPostfix","filepath":"src/types/string-literals/Date.ts","startLine":74,"endLine":74,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4168143506,"updated":1723767904417},{"name":"YMD","fqn":"module::4189209977::YMD","filepath":"src/types/string-literals/Date.ts","startLine":53,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSep","type":"TSep"}],"jsDocs":[{"comment":"**YMD**`<[TSep]>\nA date format for `YYYY-MM-DD` which is used as a component of the ISO8601 standard.\n\n> Note: you may optionally change the DateSeparator to suit your needs","tags":[]}],"deps":["module::2641699687::DateSeparator","module::109749371::MonthNumeric"],"refs":[],"symbolHash":2605679190,"updated":1723767904417},{"name":"DateThenMonthThenYear","fqn":"module::865837993::DateThenMonthThenYear","filepath":"src/types/string-literals/Date.ts","startLine":71,"endLine":71,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**DateThenMonthThenYear**\n\nThe day of the month followed by an abbreviated string representation\nof the month and finishing with the year (e.g., `4 July 2021`)","tags":[]}],"deps":["module::4119961824::MonthDay","module::2407715061::MonthAbbr","module::3926647943::Year"],"refs":[],"symbolHash":810140833,"updated":1723767904417},{"name":"MonthThenDateThenYear","fqn":"module::155385996::MonthThenDateThenYear","filepath":"src/types/string-literals/Date.ts","startLine":82,"endLine":82,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MonthThenDateThenYear**\n\nThe month's name -- either abbreviate or full -- followed by the\nday in the month (e.g., `July 28, 1970`, or `July 28th, 1970`)","tags":[]}],"deps":["module::2407715061::MonthAbbr","module::2532690095::MonthName","module::4119961824::MonthDay","module::3886584704::MonthPostfix","module::3926647943::Year"],"refs":[],"symbolHash":1243690752,"updated":1723767904418},{"name":"DateThenMonth","fqn":"module::3483155311::DateThenMonth","filepath":"src/types/string-literals/Date.ts","startLine":63,"endLine":63,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**DateThenMonth**\n\nThe day of the month followed by an abbreviated string representation\nof the month (e.g., `4 July`)","tags":[]}],"deps":["module::4119961824::MonthDay","module::2407715061::MonthAbbr"],"refs":[],"symbolHash":2231091452,"updated":1723767904417},{"name":"MonthThenDate","fqn":"module::2065470065::MonthThenDate","filepath":"src/types/string-literals/Date.ts","startLine":90,"endLine":90,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MonthThenDate**\n\nThe month's name -- either abbreviate or full -- followed by the\nday in the month (e.g., `July 28`, `July 28th`)","tags":[]}],"deps":["module::2407715061::MonthAbbr","module::2532690095::MonthName","module::4119961824::MonthDay","module::3886584704::MonthPostfix"],"refs":[],"symbolHash":994186734,"updated":1723767904418},{"name":"DateSeparator","fqn":"module::1367267506::DateSeparator","filepath":"src/types/string-literals/DateTime.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3081206907,"updated":1723767904873},{"name":"YMD","fqn":"module::3482948002::YMD","filepath":"src/types/string-literals/DateTime.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2775983714,"updated":1723767904873},{"name":"HoursMinutes","fqn":"module::1616130627::HoursMinutes","filepath":"src/types/string-literals/DateTime.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2149549018,"updated":1723767904872},{"name":"HoursMinutesSeconds","fqn":"module::2942046855::HoursMinutesSeconds","filepath":"src/types/string-literals/DateTime.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1965647130,"updated":1723767904873},{"name":"TimeNomenclature","fqn":"module::2465508556::TimeNomenclature","filepath":"src/types/string-literals/DateTime.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1356269964,"updated":1723767904873},{"name":"TypeRequired","fqn":"module::424465925::TypeRequired","filepath":"src/types/string-literals/Time.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1660729296,"updated":1723767904935},{"name":"Time","fqn":"module::3330337275::Time","filepath":"src/types/string-literals/DateTime.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1827841694,"updated":1723767904873},{"name":"TZ","fqn":"module::1269323086::TZ","filepath":"src/types/string-literals/DateTime.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2576822344,"updated":1723767904873},{"name":"IterateOver","fqn":"local::1947997719::IterateOver","filepath":"src/types/string-literals/EnsureLeading.ts","startLine":11,"endLine":20,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TLeading","type":"TLeading"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1922598388,"updated":1723767904874},{"name":"WideContent","fqn":"local::1947997719::WideContent","filepath":"src/types/string-literals/EnsureLeading.ts","startLine":22,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TLeading","type":"TLeading"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1782151959,"updated":1723767904874},{"name":"WideLeading","fqn":"local::1947997719::WideLeading","filepath":"src/types/string-literals/EnsureLeading.ts","startLine":29,"endLine":34,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TLeading","type":"TLeading"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2767608791,"updated":1723767904874},{"name":"Process","fqn":"local::1947997719::Process","filepath":"src/types/string-literals/EnsureLeading.ts","startLine":4,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TLeading","type":"TLeading"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4208987065,"updated":1723767904874},{"name":"AsStringUnion","fqn":"module::749589545::AsStringUnion","filepath":"src/types/string-literals/StripSurround.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1928365138,"updated":1723767904933},{"name":"EnsureTrailing","fqn":"module::2557355544::EnsureTrailing","filepath":"src/types/type-conversion/JSON.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4163152601,"updated":1723767904971},{"name":"EnsureLeading","fqn":"module::275936486::EnsureLeading","filepath":"src/types/type-conversion/JSON.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3707272461,"updated":1723767904971},{"name":"EmptyString","fqn":"module::2871354067::EmptyString","filepath":"src/types/string-literals/EmptyStringOr.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":436018595,"updated":1723767904875},{"name":"IsString","fqn":"module::1088008940::IsString","filepath":"src/types/string-literals/EnsureTrailing.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3686601521,"updated":1723767904875},{"name":"P","fqn":"local::1726229997::P","filepath":"src/types/string-literals/EnsureTrailing.ts","startLine":9,"endLine":14,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TTrailing","type":"TTrailing"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2291937153,"updated":1723767904875},{"name":"IterateOver","fqn":"local::1726229997::IterateOver","filepath":"src/types/string-literals/EnsureTrailing.ts","startLine":18,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TTrailing","type":"TTrailing"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1569969537,"updated":1723767904875},{"name":"Iterate","fqn":"local::3721197822::Iterate","filepath":"src/types/string-literals/FirstChar.ts","startLine":5,"endLine":7,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1469539289,"updated":1723767904875},{"name":"Process","fqn":"local::3721197822::Process","filepath":"src/types/string-literals/FirstChar.ts","startLine":3,"endLine":3,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2468073310,"updated":1723767904875},{"name":"Iterate","fqn":"local::463349222::Iterate","filepath":"src/types/string-literals/LastChar.ts","startLine":8,"endLine":10,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1469539289,"updated":1723767904929},{"name":"Process","fqn":"local::463349222::Process","filepath":"src/types/string-literals/LastChar.ts","startLine":6,"endLine":6,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2475090132,"updated":1723767904929},{"name":"Iterate","fqn":"local::1082811800::Iterate","filepath":"src/types/string-literals/AfterFirstChar.ts","startLine":3,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1783774116,"updated":1723767904876},{"name":"Capitalize","fqn":"ext::2318994541::Capitalize","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905086},{"name":"ToStringArray","fqn":"module::559385431::ToStringArray","filepath":"src/types/string-literals/Surround.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2566842310,"updated":1723767904934},{"name":"Process","fqn":"local::1695423808::Process","filepath":"src/types/string-literals/Join.ts","startLine":10,"endLine":26,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTuple","type":"TTuple"},{"name":"TSeparator","type":"TSeparator"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2844388199,"updated":1723767904929},{"name":"Slicer","fqn":"local::1695423808::Slicer","filepath":"src/types/string-literals/Join.ts","startLine":28,"endLine":38,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTuple","type":"TTuple"},{"name":"TMax","type":"TMax"},{"name":"TEllipsis","type":"TEllipsis"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3206314351,"updated":1723767904929},{"name":"Finalize","fqn":"local::2168030475::Finalize","filepath":"src/types/string-literals/PathJoin.ts","startLine":10,"endLine":17,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSegments","type":"TSegments"},{"name":"TPath","type":"TPath"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3738928458,"updated":1723767904929},{"name":"Join","fqn":"module::1764523945::Join","filepath":"src/types/type-conversion/RetainChars.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1205392894,"updated":1723767904974},{"name":"IsException","fqn":"local::2593703517::IsException","filepath":"src/types/string-literals/Pluralize.ts","startLine":17,"endLine":17,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3139012112,"updated":1723767904930},{"name":"PluralException","fqn":"local::2593703517::PluralException","filepath":"src/types/string-literals/Pluralize.ts","startLine":23,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Looks up a singular word `T` as a possible singular exception and converts it\nto the plural equivalent. Will return `never` if `T` is not an exception.","tags":[]}],"deps":[],"refs":[],"symbolHash":3824895154,"updated":1723767904930},{"name":"EndsIn_IS","fqn":"local::2593703517::EndsIn_IS","filepath":"src/types/string-literals/Pluralize.ts","startLine":30,"endLine":30,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"validates that a string literal ends in \"is\"","tags":[]}],"deps":[],"refs":[],"symbolHash":105059601,"updated":1723767904930},{"name":"PluralizeEndingIn_IS","fqn":"local::2593703517::PluralizeEndingIn_IS","filepath":"src/types/string-literals/Pluralize.ts","startLine":44,"endLine":46,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"strings which end in the letters \"is\" should have an \"es\" added to the end","tags":[]}],"deps":[],"refs":[],"symbolHash":2497781458,"updated":1723767904930},{"name":"EndsInSingularNoun","fqn":"local::2593703517::EndsInSingularNoun","filepath":"src/types/string-literals/Pluralize.ts","startLine":33,"endLine":33,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"validates that a string literal is a singular noun","tags":[]}],"deps":[],"refs":[],"symbolHash":1489094326,"updated":1723767904930},{"name":"PluralizeEndingSingularNoun","fqn":"local::2593703517::PluralizeEndingSingularNoun","filepath":"src/types/string-literals/Pluralize.ts","startLine":51,"endLine":53,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"singular nouns should have \"es\" added to the end","tags":[]}],"deps":[],"refs":[],"symbolHash":1090022429,"updated":1723767904930},{"name":"EndsIn_F","fqn":"local::2593703517::EndsIn_F","filepath":"src/types/string-literals/Pluralize.ts","startLine":36,"endLine":36,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"validates that a string literal ends in \"f\" or \"fe\"","tags":[]}],"deps":[],"refs":[],"symbolHash":1148138837,"updated":1723767904930},{"name":"PluralizeEnding_F","fqn":"local::2593703517::PluralizeEnding_F","filepath":"src/types/string-literals/Pluralize.ts","startLine":58,"endLine":60,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"strings which end in the letters \"f\" or \"fe\" should have \"ves\" replace the ending","tags":[]}],"deps":[],"refs":[],"symbolHash":1782374326,"updated":1723767904930},{"name":"EndsIn_Y","fqn":"local::2593703517::EndsIn_Y","filepath":"src/types/string-literals/Pluralize.ts","startLine":39,"endLine":39,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"validates that a string literal ends a consonant followed by \"y\"","tags":[]}],"deps":[],"refs":[],"symbolHash":2433528193,"updated":1723767904930},{"name":"PluralizeEndingIn_Y","fqn":"local::2593703517::PluralizeEndingIn_Y","filepath":"src/types/string-literals/Pluralize.ts","startLine":65,"endLine":67,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"singular nouns should have \"es\" added to the end","tags":[]}],"deps":[],"refs":[],"symbolHash":3887573804,"updated":1723767904930},{"name":"PrependAcc","fqn":"local::4166324004::PrependAcc","filepath":"src/types/string-literals/PrependAll.ts","startLine":3,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TPrepend","type":"TPrepend"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":87377623,"updated":1723767904931},{"name":"Process","fqn":"local::744555623::Process","filepath":"src/types/string-literals/StripLeading.ts","startLine":8,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TStrip","type":"TStrip"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3437861023,"updated":1723767904933},{"name":"Process","fqn":"local::304748723::Process","filepath":"src/types/string-literals/StripSurround.ts","startLine":3,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TSurround","type":"TSurround"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2375161642,"updated":1723767904933},{"name":"ScalarNotSymbol","fqn":"module::736584612::ScalarNotSymbol","filepath":"src/types/string-literals/Suggest.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4280575911,"updated":1723767904934},{"name":"SuggestString","fqn":"local::3682778206::SuggestString","filepath":"src/types/string-literals/Suggest.ts","startLine":10,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2815684028,"updated":1723767904934},{"name":"IfAllLiteral","fqn":"module::3909707430::IfAllLiteral","filepath":"src/types/string-literals/RetainAfter.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1432500334,"updated":1723767904931},{"name":"Process","fqn":"local::324263790::Process","filepath":"src/types/string-literals/StripTrailing.ts","startLine":4,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TStrip","type":"TStrip"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":720791161,"updated":1723767904933},{"name":"UnionPolicy","fqn":"local::3588172585::UnionPolicy","filepath":"src/types/string-literals/Split.ts","startLine":16,"endLine":16,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3445868352,"updated":1723767904932},{"name":"PreProcess","fqn":"local::3588172585::PreProcess","filepath":"src/types/string-literals/Split.ts","startLine":87,"endLine":94,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TSep","type":"TSep"},{"name":"TUnionPolicy","type":"TUnionPolicy"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2313619156,"updated":1723767904932},{"name":"Compute","fqn":"local::4139926233::Compute","filepath":"src/types/string-literals/StrLen.ts","startLine":3,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TLen","type":"TLen"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1443868745,"updated":1723767904934},{"name":"ProcessEach","fqn":"local::3584399716::ProcessEach","filepath":"src/types/string-literals/Surround.ts","startLine":9,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TPrefix","type":"TPrefix"},{"name":"TPostfix","type":"TPostfix"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":414279577,"updated":1723767904934},{"name":"Process","fqn":"local::3584399716::Process","filepath":"src/types/string-literals/Surround.ts","startLine":3,"endLine":7,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TPrefix","type":"TPrefix"},{"name":"TPostfix","type":"TPostfix"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2695442009,"updated":1723767904934},{"name":"CivilianTwoDigitHour","fqn":"local::3730197234::CivilianTwoDigitHour","filepath":"src/types/string-literals/Time.ts","startLine":3,"endLine":3,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1720546896,"updated":1723767904935},{"name":"TypeStrength","fqn":"module::3923554373::TypeStrength","filepath":"src/types/string-literals/Time.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":243444630,"updated":1723767904936},{"name":"AmPmCase","fqn":"module::3863439538::AmPmCase","filepath":"src/types/string-literals/Time.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":874381899,"updated":1723767904429},{"name":"CivilianTimeOptions","fqn":"module::4237661426::CivilianTimeOptions","filepath":"src/types/string-literals/Time.ts","startLine":25,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**CivilianTimeOptions**\n\nThe optional configuration for a civilian \"time\" type.","tags":[]}],"deps":["module::3923554373::TypeStrength","module::424465925::TypeRequired","module::3863439538::AmPmCase"],"refs":[],"symbolHash":716561548,"updated":1723767904430},{"name":"NumericCharZeroToFive","fqn":"module::401252592::NumericCharZeroToFive","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":839653053,"updated":1723767905128},{"name":"PlusMinus","fqn":"module::2320530712::PlusMinus","filepath":"src/types/string-literals/Time.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3198978536,"updated":1723767904937},{"name":"MilitaryTimeOptions","fqn":"module::4059297044::MilitaryTimeOptions","filepath":"src/types/string-literals/Time.ts","startLine":37,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MilitaryTimeOptions**\n\nThe optional configuration for a military \"time\" type.","tags":[]}],"deps":["ext::2318994541::Omit","module::4237661426::CivilianTimeOptions"],"refs":[],"symbolHash":3993791342,"updated":1723767904431},{"name":"Opt","fqn":"local::3730197234::Opt","filepath":"src/types/string-literals/Time.ts","startLine":43,"endLine":48,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"The user's options merged with default values","tags":[]}],"deps":[],"refs":[],"symbolHash":1374272786,"updated":1723767904945},{"name":"MilitaryHours","fqn":"module::2669683772::MilitaryHours","filepath":"src/types/string-literals/Time.ts","startLine":123,"endLine":127,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFixedLengthHours","type":"TFixedLengthHours"}],"jsDocs":[{"comment":"**MilitaryHours**\n\nThe _hours_ component of Time when using military nomenclature.","tags":[]}],"deps":["module::1881292962::NumericChar"],"refs":[],"symbolHash":3307250946,"updated":1723767904432},{"name":"Minutes","fqn":"module::1134079243::Minutes","filepath":"src/types/string-literals/Time.ts","startLine":56,"endLine":58,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"}],"jsDocs":[{"comment":"**Minutes**`<[TStr]>`\n\nProvides a typing for the minutes component of Time (aka, 00 to 59).","tags":[]}],"deps":["module::3923554373::TypeStrength","module::401252592::NumericCharZeroToFive","module::1881292962::NumericChar"],"refs":[],"symbolHash":1637162914,"updated":1723767904431},{"name":"TZ","fqn":"module::2902095630::TZ","filepath":"src/types/string-literals/Time.ts","startLine":98,"endLine":104,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TRequire","type":"TRequire"}],"jsDocs":[{"comment":"**TZ**`<TStrength>`\n\nCreates a type for timezones.\n\n- by default chooses a \"strong\" type but \"simple\" or \"exclude\"\nare other options for the `TStrength` generic.","tags":[]}],"deps":["module::2320530712::PlusMinus"],"refs":[],"symbolHash":2102049880,"updated":1723767904432},{"name":"CivilianHours","fqn":"module::1353272796::CivilianHours","filepath":"src/types/string-literals/Time.ts","startLine":14,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFixedLengthHours","type":"TFixedLengthHours"}],"jsDocs":[{"comment":"**CivilianHours**`<[TFixedLengthHours]>`\n\nThe _hours_ used in the civilian clock (aka, 1-12)","tags":[]}],"deps":["ext::2318994541::Exclude","module::1881292962::NumericChar","local::3730197234::CivilianTwoDigitHour","module::2113468514::NonZeroNumericChar"],"refs":[],"symbolHash":1270138158,"updated":1723767904430},{"name":"AmPm","fqn":"module::2419530536::AmPm","filepath":"src/types/string-literals/Time.ts","startLine":79,"endLine":85,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TCase","type":"TCase"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3863439538::AmPmCase"],"refs":[],"symbolHash":582691565,"updated":1723767904431},{"name":"HoursMinutes","fqn":"module::2871470652::HoursMinutes","filepath":"src/types/string-literals/Time.ts","startLine":140,"endLine":144,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**HoursMinutes**`<[TOpt]>`\n\nTime expressed as just hours and minutes in military time.\n\n- by default the timezone is excluded but this can be modified\nwith the optional `TTimezone` generic.","tags":[]}],"deps":["module::4059297044::MilitaryTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::2669683772::MilitaryHours","module::1134079243::Minutes","module::2902095630::TZ"],"refs":[],"symbolHash":1616068471,"updated":1723767904433},{"name":"Seconds","fqn":"module::2519180221::Seconds","filepath":"src/types/string-literals/Time.ts","startLine":65,"endLine":67,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"}],"jsDocs":[{"comment":"**Seconds**`<[TStr]>`\n\nProvides a typing for the seconds component of Time (aka, 00 to 59).","tags":[]}],"deps":["module::3923554373::TypeStrength","module::401252592::NumericCharZeroToFive","module::1881292962::NumericChar"],"refs":[],"symbolHash":1024807780,"updated":1723767904431},{"name":"TimeNomenclature","fqn":"module::213064381::TimeNomenclature","filepath":"src/types/string-literals/Time.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":426925347,"updated":1723767904429},{"name":"HoursMinutes12","fqn":"module::3527874285::HoursMinutes12","filepath":"src/types/string-literals/Time.ts","startLine":155,"endLine":159,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**HoursMinutes12**`<[TOpt]>`\n\nTime expressed as just hours and minutes using the 12 hour civilian nomenclature\nand requiring that an `AmPm<TCase>` indicator be included at the end of the time.\n\n**Note:** by default the `TCase` generic defaults to _lower_ which means that \"am\" and \"pm\"\nare the expected markers for the 12 hour clock you are in.","tags":[]}],"deps":["module::4237661426::CivilianTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::1353272796::CivilianHours","module::401252592::NumericCharZeroToFive","module::1881292962::NumericChar","module::2419530536::AmPm","module::2902095630::TZ"],"refs":[],"symbolHash":4291130301,"updated":1723767904433},{"name":"HoursMinutesSeconds","fqn":"module::2311575305::HoursMinutesSeconds","filepath":"src/types/string-literals/Time.ts","startLine":167,"endLine":171,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**HoursMinutesSeconds**`<[TOpt]>`\n\nTime expressed in hours, minutes, and seconds in military nomenclature. Timezone is\nexcluded by default but can be enabled with `TTimezone` generic.","tags":[]}],"deps":["module::4059297044::MilitaryTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::2871470652::HoursMinutes","module::2519180221::Seconds","module::2902095630::TZ"],"refs":[],"symbolHash":926609718,"updated":1723767904434},{"name":"HoursMinutesSeconds12","fqn":"module::3745100801::HoursMinutesSeconds12","filepath":"src/types/string-literals/Time.ts","startLine":186,"endLine":190,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**HoursMinutesSeconds12**`<[TTimezone]>`\n\nTime expressed in hours, minutes, and seconds in civilian nomenclature. Timezone is\nexcluded by default but can be enabled with `TTimezone` generic.","tags":[]}],"deps":["module::4237661426::CivilianTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::2871470652::HoursMinutes","module::2519180221::Seconds","module::2419530536::AmPm","module::2902095630::TZ"],"refs":[],"symbolHash":2532821371,"updated":1723767904435},{"name":"HoursMinutesSecondsMilliseconds","fqn":"module::3505775362::HoursMinutesSecondsMilliseconds","filepath":"src/types/string-literals/Time.ts","startLine":174,"endLine":178,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4059297044::MilitaryTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::2871470652::HoursMinutes","module::2519180221::Seconds","module::2902095630::TZ"],"refs":[],"symbolHash":474371014,"updated":1723767904435},{"name":"HoursMinutesSecondsMilliseconds12","fqn":"module::1405946143::HoursMinutesSecondsMilliseconds12","filepath":"src/types/string-literals/Time.ts","startLine":192,"endLine":196,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4237661426::CivilianTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::2871470652::HoursMinutes","module::2519180221::Seconds","module::2419530536::AmPm","module::2902095630::TZ"],"refs":[],"symbolHash":695604990,"updated":1723767904436},{"name":"TimeResolution","fqn":"module::245352994::TimeResolution","filepath":"src/types/string-literals/Time.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":262725599,"updated":1723767904429},{"name":"TimeInMinutes","fqn":"module::4145234592::TimeInMinutes","filepath":"src/types/string-literals/Time.ts","startLine":206,"endLine":213,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TNomenclature","type":"TNomenclature"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**TimeInMinutes**`<TNomenclature,[TOpts]>`\n\nTime expressed with a time resolution of `HH:MM` (e.g., `12:43pm` or `23:15`).\n\nThe nomenclatures of _military_ versus _civilian_ are both allowed\nby default but can be isolated with the use the `TNomenclature` generic.","tags":[]}],"deps":["module::213064381::TimeNomenclature","module::4237661426::CivilianTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::2871470652::HoursMinutes","module::3527874285::HoursMinutes12"],"refs":[],"symbolHash":2137596522,"updated":1723767904436},{"name":"TimeInSeconds","fqn":"module::3822532463::TimeInSeconds","filepath":"src/types/string-literals/Time.ts","startLine":228,"endLine":235,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TNomenclature","type":"TNomenclature"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**TimeInSeconds**`<[TNomenclature],[TOpts]>`\n\nTime expressed in `HH:MM:SS` resolution. \n\nBy default either military or civilian nomenclature is allowed but\nthis can be isolated by using the `TNomenclature` generic.\n\n```ts\nconst ex1: TimeInSeconds = \"9:45:15pm\";\nconst ex2: TimeInSeconds = \"21:45:15\"\n```","tags":[]}],"deps":["module::213064381::TimeNomenclature","module::4237661426::CivilianTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::2311575305::HoursMinutesSeconds","module::3745100801::HoursMinutesSeconds12"],"refs":[],"symbolHash":1011054563,"updated":1723767904437},{"name":"TimeInMilliseconds","fqn":"module::3707014037::TimeInMilliseconds","filepath":"src/types/string-literals/Time.ts","startLine":237,"endLine":244,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TNomenclature","type":"TNomenclature"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::213064381::TimeNomenclature","module::4237661426::CivilianTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::3505775362::HoursMinutesSecondsMilliseconds","module::1405946143::HoursMinutesSecondsMilliseconds12"],"refs":[],"symbolHash":2463026031,"updated":1723767904437},{"name":"StrLen","fqn":"module::490171167::StrLen","filepath":"src/types/string-literals/character-sets/phone/GetPhoneNumberType.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3225294522,"updated":1723767905158},{"name":"_Truncate","fqn":"local::3331860007::_Truncate","filepath":"src/types/string-literals/Truncate.ts","startLine":15,"endLine":21,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TMaxLen","type":"TMaxLen"},{"name":"TEllipsis","type":"TEllipsis"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2667771622,"updated":1723767904946},{"name":"Ellipsis","fqn":"local::3331860007::Ellipsis","filepath":"src/types/string-literals/Truncate.ts","startLine":11,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3693142873,"updated":1723767904946},{"name":"Process","fqn":"local::1544495202::Process","filepath":"src/types/string-literals/RetainUntil.ts","startLine":4,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TChars","type":"TChars"},{"name":"TOp","type":"TOp"},{"name":"TComparator","type":"TComparator"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3365647715,"updated":1723767904932},{"name":"Process","fqn":"local::121573462::Process","filepath":"src/types/string-literals/StripUntil.ts","startLine":4,"endLine":31,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TChars","type":"TChars"},{"name":"TOp","type":"TOp"},{"name":"TComparator","type":"TComparator"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":336340697,"updated":1723767904934},{"name":"Process","fqn":"local::4159841304::Process","filepath":"src/types/string-literals/UnderlyingType.ts","startLine":3,"endLine":9,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2269690543,"updated":1723767904946},{"name":"IfAllExtend","fqn":"module::2630824779::IfAllExtend","filepath":"src/types/string-literals/character-sets/LowerAlpha.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1714062661,"updated":1723767905131},{"name":"AlphaChar","fqn":"module::2392759183::AlphaChar","filepath":"src/types/string-literals/character-sets/SingularNoun.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3886470887,"updated":1723767905136},{"name":"LowerAlphaChar","fqn":"module::3806360013::LowerAlphaChar","filepath":"src/types/string-literals/character-sets/LowerAlpha.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1060418760,"updated":1723767905131},{"name":"Whitespace","fqn":"module::961086858::Whitespace","filepath":"src/types/string-literals/character-sets/NonAlpha.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1683298225,"updated":1723767905131},{"name":"Punctuation","fqn":"module::4124256689::Punctuation","filepath":"src/types/string-literals/character-sets/NonAlpha.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4213151763,"updated":1723767905131},{"name":"Bracket","fqn":"module::3495830455::Bracket","filepath":"src/types/string-literals/character-sets/NonAlpha.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":757748159,"updated":1723767905132},{"name":"SpecialChar","fqn":"module::2771295008::SpecialChar","filepath":"src/types/string-literals/character-sets/NonAlpha.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1203512724,"updated":1723767905132},{"name":"DnsName","fqn":"module::2545922179::DnsName","filepath":"src/types/string-literals/character-sets/DomainName.ts","startLine":28,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**DnsName**\n\nA simple representation of a DNS name.\n\n**Related:** `DomainName`, `UrlsFrom`","tags":[]}],"deps":[],"refs":[],"symbolHash":2215276380,"updated":1723767904444},{"name":"IsDomainName","fqn":"module::3488622281::IsDomainName","filepath":"src/types/string-literals/character-sets/DomainName.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3538827701,"updated":1723767905093},{"name":"Proto","fqn":"local::363308419::Proto","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":29,"endLine":29,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2233454637,"updated":1723767905137},{"name":"RemoveEmpty","fqn":"module::3508112817::RemoveEmpty","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":25,"endLine":25,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1931158569,"updated":1723767905137},{"name":"NetworkProtocol","fqn":"module::1762127496::NetworkProtocol","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":30,"endLine":32,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::13543941::Mutable","module::3974819915::Values","local::363308419::Proto","module::3508112817::RemoveEmpty","module::3529663403::Flatten"],"refs":[],"symbolHash":1856250017,"updated":1723767904445},{"name":"NetworkProtocolPrefix","fqn":"module::696923552::NetworkProtocolPrefix","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":41,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**NetworkProtocolPrefix**\n\nA type which tries to represent the _prefix_ of a URL/URI which\nindicates the network protocol.","tags":[]}],"deps":["module::1762127496::NetworkProtocol"],"refs":[],"symbolHash":1119880674,"updated":1723767904445},{"name":"StripAfter","fqn":"module::580907674::StripAfter","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2478604561,"updated":1723767905140},{"name":"GetUrlProtocol","fqn":"module::691518232::GetUrlProtocol","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":64,"endLine":70,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetUrlProtocol**`<T>`\n\nGets the network protocol used in the URL string passed into `T`.","tags":[]}],"deps":["module::696923552::NetworkProtocolPrefix","module::580907674::StripAfter","module::1364134543::IsEqual"],"refs":[],"symbolHash":4023517356,"updated":1723767904446},{"name":"PortSpecifierOptions","fqn":"module::3018255031::PortSpecifierOptions","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":45,"endLine":57,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2041415610,"updated":1723767904445},{"name":"_Ports","fqn":"local::363308419::_Ports","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":85,"endLine":89,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1705486203,"updated":1723767905138},{"name":"RemoveNetworkProtocol","fqn":"module::4245877116::RemoveNetworkProtocol","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":194,"endLine":199,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TProtocol","type":"TProtocol"}],"jsDocs":[{"comment":"**RemoveNetworkProtocol**`<TContent,[TProtocol]>`\n\nRemoves any _leading_ content which is a network protocol reference.\n\n- an example would be `https://` but so would `ftp://`\n- you can narrow the protocols it's looking to remove by modifying\n`TProtocol`","tags":[]}],"deps":["module::1762127496::NetworkProtocol","module::696923552::NetworkProtocolPrefix"],"refs":[],"symbolHash":3765860249,"updated":1723767904448},{"name":"RetainWhile","fqn":"module::3128425614::RetainWhile","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":19,"endLine":19,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2711322204,"updated":1723767905138},{"name":"GetUrlProtocolPrefix","fqn":"module::1665174636::GetUrlProtocolPrefix","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":78,"endLine":82,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetUrlProtocolPrefix**`<T>`\n\nJust like `GetUrlProtocol` but adds in the `://` so long\nas there's a protocol found.","tags":[]}],"deps":["module::691518232::GetUrlProtocol","module::1762127496::NetworkProtocol","module::696923552::NetworkProtocolPrefix"],"refs":[],"symbolHash":1238055940,"updated":1723767904446},{"name":"StripWhile","fqn":"module::984903483::StripWhile","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":22,"endLine":22,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4762323,"updated":1723767905139},{"name":"UrlPathChars","fqn":"local::363308419::UrlPathChars","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":201,"endLine":201,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":135888158,"updated":1723767905140},{"name":"StripChars","fqn":"module::4075062972::StripChars","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1649624041,"updated":1723767905140},{"name":"DnsName","fqn":"module::3344972288::DnsName","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2530076253,"updated":1723767905140},{"name":"GetUrlSource","fqn":"module::195169549::GetUrlSource","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":236,"endLine":243,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetUrlSource**`<T>`\n\nExtracts out the IP address or Domain Name from a URL-like string literal.\n\n- if _not_ a string literal then just proxies through `string`\n- if not able to find it then it returns the literal ''","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::580907674::StripAfter","module::4245877116::RemoveNetworkProtocol","module::3344972288::DnsName","module::2631466056::Ip4Address"],"refs":[],"symbolHash":1875190917,"updated":1723767904449},{"name":"_GetUrlPath","fqn":"local::363308419::_GetUrlPath","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":262,"endLine":271,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":83030303,"updated":1723767905141},{"name":"RemoveUrlSource","fqn":"module::3030774352::RemoveUrlSource","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":251,"endLine":259,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveUrlSource**`<T>`\n\nRemoves the URL source (aka, domain name or IP address) from a URL string when\nit can be identified.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::195169549::GetUrlSource"],"refs":[],"symbolHash":2615542691,"updated":1723767904449},{"name":"RemoveUrlPort","fqn":"module::2355278319::RemoveUrlPort","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":138,"endLine":146,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveUrlPort**`<T,[TOpt]>`\n\nRemoves a _port specification_ in a URL if found otherwise returns string literal\nas it was.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::4245877116::RemoveNetworkProtocol","module::1665174636::GetUrlProtocolPrefix","module::984903483::StripWhile","module::1881292962::NumericChar"],"refs":[],"symbolHash":3941755148,"updated":1723767904447},{"name":"RelativeStart","fqn":"local::363308419::RelativeStart","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":322,"endLine":322,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":358999005,"updated":1723767905142},{"name":"UrlPath","fqn":"module::3109433725::UrlPath","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":216,"endLine":226,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**UrlPath**`<T>`\n\nA simple type that represents the _shape_ of a UrlPath\nwhen no generics are used (aka, `T` is defaulted to _null_).\n\nThis type is either an empty string `''` or a string starting\nwith a `/` character.\n\nIf you want more detailed type checking of the path you can\npass in a string to `T` and it will be validated and return\n`never` when an invalid character is used.","tags":[]}],"deps":["local::363308419::UrlPathChars","module::172457424::IsStringLiteral","module::4075062972::StripChars"],"refs":[],"symbolHash":515804633,"updated":1723767904448},{"name":"DomainName","fqn":"module::3045542239::DomainName","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":144651312,"updated":1723767905142},{"name":"RelativeUrl","fqn":"module::504683037::RelativeUrl","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":327,"endLine":327,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RelativeUrl**","tags":[]}],"deps":["local::363308419::RelativeStart","module::3109433725::UrlPath"],"refs":[],"symbolHash":3910072098,"updated":1723767904450},{"name":"StripTrailing","fqn":"module::3241023069::StripTrailing","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3723817736,"updated":1723767905143},{"name":"ProtocolOptions","fqn":"module::3970046955::ProtocolOptions","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":148,"endLine":158,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1762127496::NetworkProtocol"],"refs":[],"symbolHash":105491805,"updated":1723767904447},{"name":"UrlOptions","fqn":"module::2312436937::UrlOptions","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":160,"endLine":170,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3229078157,"updated":1723767904448},{"name":"ExpandUnion","fqn":"module::3295405837::ExpandUnion","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":607901905,"updated":1723767905144},{"name":"_UrlsFrom","fqn":"local::363308419::_UrlsFrom","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":381,"endLine":391,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":778208553,"updated":1723767905144},{"name":"GenList","fqn":"local::373156745::GenList","filepath":"src/types/string-literals/character-sets/DotPathFor.ts","startLine":19,"endLine":29,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"IsRoot","type":"IsRoot"},{"name":"K","type":"K"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3662446108,"updated":1723767905101},{"name":"Ip4Octet","fqn":"module::2299757066::Ip4Octet","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":19,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**IPv4Number**\n\nA high resolution typing for a single octet of an **IP version 4** IP address.","tags":[]}],"deps":["module::401252592::NumericCharZeroToFive","module::1881292962::NumericChar"],"refs":[],"symbolHash":3512232088,"updated":1723767904454},{"name":"Ip4Netmask8","fqn":"module::1818161808::Ip4Netmask8","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":40,"endLine":40,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2299757066::Ip4Octet"],"refs":[],"symbolHash":4171301526,"updated":1723767904454},{"name":"Ip4Netmask16","fqn":"module::2490839235::Ip4Netmask16","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":41,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2299757066::Ip4Octet"],"refs":[],"symbolHash":2403424034,"updated":1723767904455},{"name":"Ip4Netmask24","fqn":"module::1401417358::Ip4Netmask24","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":42,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2299757066::Ip4Octet"],"refs":[],"symbolHash":580325279,"updated":1723767904455},{"name":"Ip4Netmask32","fqn":"module::1712897404::Ip4Netmask32","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":43,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3959467561,"updated":1723767904455},{"name":"ReplaceAll","fqn":"module::749227415::ReplaceAll","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1952720684,"updated":1723767905130},{"name":"Ip6Group","fqn":"module::216320004::Ip6Group","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":65,"endLine":65,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3304895550::HexadecimalChar"],"refs":[],"symbolHash":194620029,"updated":1723767904456},{"name":"Ip6SubnetPrefix","fqn":"module::2618884172::Ip6SubnetPrefix","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":122,"endLine":122,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2793079385,"updated":1723767904456},{"name":"AlphaNumericAcc","fqn":"local::2289732328::AlphaNumericAcc","filepath":"src/types/string-literals/character-sets/AlphaNumeric.ts","startLine":9,"endLine":17,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1815999681,"updated":1723767905105},{"name":"HexadecimalChar","fqn":"module::306548031::HexadecimalChar","filepath":"src/types/string-literals/character-sets/Hexadecimal.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Valid hexadecimal character\n\n**Related:** `IsHexadecimal`, `Hexadecimal`, `SuggestHexadecimal`","tags":[]}],"deps":["module::1881292962::NumericChar"],"refs":[],"symbolHash":577948237,"updated":1723767904459},{"name":"SingularNounEnding","fqn":"module::2313685889::SingularNounEnding","filepath":"src/types/string-literals/character-sets/SingularNoun.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SingularNounEnding**\n\nA union of characters which when found at the end of a word are a strong\nindicator that the word is a singular noun.\n\n**Related:** `SingularNoun`, `IsSingularNoun`","tags":[]}],"deps":["module::2535688849::TupleToUnion","module::13543941::Mutable"],"refs":[],"symbolHash":2070383495,"updated":1723767904459},{"name":"IsValidDotPath","fqn":"module::3296243032::IsValidDotPath","filepath":"src/types/string-literals/character-sets/ValueAtDotPath.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3246735925,"updated":1723767905144},{"name":"Process","fqn":"local::4114067823::Process","filepath":"src/types/string-literals/character-sets/ValueAtDotPath.ts","startLine":14,"endLine":41,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TIndexes","type":"TIndexes"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1350476868,"updated":1723767905144},{"name":"Ratio","fqn":"local::391321274::Ratio","filepath":"src/types/string-literals/character-sets/CSS.ts","startLine":3,"endLine":3,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2244943381,"updated":1723767905107},{"name":"One","fqn":"local::391321274::One","filepath":"src/types/string-literals/character-sets/CSS.ts","startLine":4,"endLine":4,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1270587342,"updated":1723767905108},{"name":"Special","fqn":"local::391321274::Special","filepath":"src/types/string-literals/character-sets/CSS.ts","startLine":5,"endLine":5,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3854372398,"updated":1723767905108},{"name":"Auto","fqn":"local::391321274::Auto","filepath":"src/types/string-literals/character-sets/CSS.ts","startLine":6,"endLine":6,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1262491870,"updated":1723767905108},{"name":"UrlsFrom","fqn":"module::1120222348::UrlsFrom","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":907498865,"updated":1723767905147},{"name":"OptionalSpace","fqn":"module::2888796371::OptionalSpace","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1300811725,"updated":1723767905134},{"name":"AlphaNumericChar","fqn":"module::2350035540::AlphaNumericChar","filepath":"src/types/string-literals/character-sets/Variable.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":550971367,"updated":1723767905144},{"name":"GithubLookup","fqn":"local::2596737201::GithubLookup","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":128,"endLine":128,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":811200811,"updated":1723767905135},{"name":"GithubInsightPageType","fqn":"module::894899468::GithubInsightPageType","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":145,"endLine":145,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"GithubInsightPageType\n\nThe sub-pages found under the **Insights** tab of a repo.\n\n**Related:** `GithubInsightsUrl`","tags":[]}],"deps":["module::2535688849::TupleToUnion","module::4102577001::Keys","local::2596737201::GithubLookup"],"refs":[],"symbolHash":1673172327,"updated":1723767904463},{"name":"_GithubInsightUrl","fqn":"local::2596737201::_GithubInsightUrl","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":148,"endLine":157,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2324901109,"updated":1723767905135},{"name":"GhLookup","fqn":"local::2596737201::GhLookup","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":129,"endLine":136,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1512922784,"updated":1723767905136},{"name":"VariableChar","fqn":"module::1675436673::VariableChar","filepath":"src/types/string-literals/character-sets/Variable.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**VariableChar**\n\nCharacters allowed in a variable name.\n\n**Related:** `PropertyChar`","tags":[]}],"deps":["module::2350035540::AlphaNumericChar"],"refs":[],"symbolHash":2937365256,"updated":1723767904464},{"name":"Cascade","fqn":"local::1182992045::Cascade","filepath":"src/types/string-literals/character-sets/Optional.ts","startLine":3,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4177934141,"updated":1723767905133},{"name":"AnyQueryParams","fqn":"module::812936183::AnyQueryParams","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2301826501,"updated":1723767905148},{"name":"YouTubeShareUrl","fqn":"module::4212651546::YouTubeShareUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":66,"endLine":66,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeShareUrl**\n\na URL which comes from YouTube's _URL shortened_ `https://youtu.be` site.","tags":[]}],"deps":["module::1120222348::UrlsFrom"],"refs":[],"symbolHash":3309442188,"updated":1723767904465},{"name":"Optional","fqn":"module::1827247990::Optional","filepath":"src/types/string-literals/character-sets/phone/RawPhoneNumber.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3463908124,"updated":1723767905162},{"name":"YouTubeUsersPlaylistUrl","fqn":"module::2718340716::YouTubeUsersPlaylistUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":158,"endLine":158,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeUsersPlaylistUrl**\n\nThe URL which brings a logged in user to their own playlists.\n\n**Related:** `YouTubePlaylistUrl`","tags":[]}],"deps":["module::812936183::AnyQueryParams"],"refs":[],"symbolHash":3267049077,"updated":1723767904466},{"name":"YouTubeFeedType","fqn":"module::1299579409::YouTubeFeedType","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":45,"endLine":45,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3116659436,"updated":1723767904464},{"name":"FeedMap","fqn":"local::1506538163::FeedMap","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":126,"endLine":132,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Maps the feed type to a URL path","tags":[]}],"deps":[],"refs":[],"symbolHash":3686588939,"updated":1723767905147},{"name":"YouTubeUrl","fqn":"module::3621971459::YouTubeUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":52,"endLine":52,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeUrl**\n\nA type which should match all URL's pointing to YouTube","tags":[]}],"deps":["module::1120222348::UrlsFrom"],"refs":[],"symbolHash":4230337548,"updated":1723767904464},{"name":"YouTubeHome","fqn":"module::894781706::YouTubeHome","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":59,"endLine":59,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeHome**\n\nThe URLs representing the home page of YouTube","tags":[]}],"deps":["module::812936183::AnyQueryParams"],"refs":[],"symbolHash":3061893757,"updated":1723767904465},{"name":"YouTubeVideoUrl","fqn":"module::702316716::YouTubeVideoUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":78,"endLine":80,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeVideo**\n\nType pattern which will match all URL's which relate to\na YouTubeVideo.\n\n**Note:** there can be some _false positives_ when the query parameters\nmay state that this is a video to watch in a list of videos. You can avoid\nthis ambiguity with the `IsYouTubeVideo` and `IsYouTubeList` operators.","tags":[]}],"deps":["module::4212651546::YouTubeShareUrl"],"refs":[],"symbolHash":3981625362,"updated":1723767904465},{"name":"HasQueryParameter","fqn":"module::3985781725::HasQueryParameter","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2076563348,"updated":1723767905148},{"name":"YouTubeCreatorUrl","fqn":"module::1226739402::YouTubeCreatorUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":88,"endLine":91,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeCreatorUrl**\n\nPages associated with a YouTube creator. This can include your own\npages even if you don't consider yourself a full creator (yet).","tags":[]}],"deps":["module::1120222348::UrlsFrom","module::1827247990::Optional"],"refs":[],"symbolHash":618331654,"updated":1723767904465},{"name":"YouTubeFeedUrl","fqn":"module::929252488::YouTubeFeedUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":145,"endLine":149,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**YouTubeFeedUrl**`<[T]>`\n\nA URL pattern which matches all \"feeds\" on YouTube where\n\"feeds\" are pages that organize videos/content for a logged\nin user based on their configuration.\n\nBy default, all feed URLs are matched but you can narrow\nthis matching down by choosing a value for `T` in the\n`YouTubeFeedType` union.","tags":[]}],"deps":["module::1299579409::YouTubeFeedType","module::1897058928::AsString","local::1506538163::FeedMap"],"refs":[],"symbolHash":2049123108,"updated":1723767904466},{"name":"YouTubeVideosInPlaylist","fqn":"module::4263591073::YouTubeVideosInPlaylist","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":173,"endLine":173,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeVideosInPlaylist**\n\nA URL which shows all the videos in a given playlist","tags":[]}],"deps":[],"refs":[],"symbolHash":2017875882,"updated":1723767904466},{"name":"OpeningBracket","fqn":"module::1582777150::OpeningBracket","filepath":"src/types/string-literals/character-sets/brackets/Brackets.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3182829113,"updated":1723767905154},{"name":"ClosingBracket","fqn":"module::2997204280::ClosingBracket","filepath":"src/types/string-literals/character-sets/brackets/Brackets.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":337351396,"updated":1723767905154},{"name":"SingleQuote","fqn":"module::2780001152::SingleQuote","filepath":"src/types/string-literals/character-sets/quotation-marks/OpeningMark.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2970491481,"updated":1723767905168},{"name":"DoubleQuote","fqn":"module::4044303182::DoubleQuote","filepath":"src/types/string-literals/character-sets/quotation-marks/OpeningMark.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1825698671,"updated":1723767905168},{"name":"LeftSingleMark","fqn":"module::3619361615::LeftSingleMark","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3208439528,"updated":1723767905169},{"name":"LeftDoubleMark","fqn":"module::195061700::LeftDoubleMark","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":382174363,"updated":1723767905169},{"name":"LeftReversedDoublePrime","fqn":"module::124669777::LeftReversedDoublePrime","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":548193776,"updated":1723767905170},{"name":"LeftHeavySingleTurned","fqn":"module::3687251758::LeftHeavySingleTurned","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1026249936,"updated":1723767905170},{"name":"LeftHeavyDoubleTurned","fqn":"module::116055513::LeftHeavyDoubleTurned","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3023390682,"updated":1723767905170},{"name":"FullWidthQuotation","fqn":"module::3200871420::FullWidthQuotation","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1455457927,"updated":1723767905170},{"name":"RightSingleMark","fqn":"module::183352828::RightSingleMark","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3873624684,"updated":1723767905169},{"name":"RightDoubleMark","fqn":"module::1833745272::RightDoubleMark","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3612741662,"updated":1723767905169},{"name":"RightReversedDoublePrime","fqn":"module::1882947382::RightReversedDoublePrime","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4096968291,"updated":1723767905170},{"name":"RightHeavySingleTurned","fqn":"module::3571837161::RightHeavySingleTurned","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1476543420,"updated":1723767905170},{"name":"RightHeavyDoubleTurned","fqn":"module::3317995668::RightHeavyDoubleTurned","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":299015711,"updated":1723767905170},{"name":"SmartMark","fqn":"module::3708868106::SmartMark","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SmartMark**\n\nStandard opening and closing smart quotation marks.\n\n**Related:** `StandardMark`, `SmartMarkPlus`, `QuotationMark`,\n`OpeningMark`, `ClosingMark`","tags":[]}],"deps":["module::195061700::LeftDoubleMark","module::1833745272::RightDoubleMark","module::3619361615::LeftSingleMark","module::183352828::RightSingleMark"],"refs":[],"symbolHash":2021072478,"updated":1723767904470},{"name":"SingleQuote","fqn":"module::3438789075::SingleQuote","filepath":"src/types/string-literals/character-sets/quotation-marks/StandardMark.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SingleQuote**\n\nStandard _non_-smart single quote mark.","tags":[]}],"deps":[],"refs":[],"symbolHash":374655951,"updated":1723767904471},{"name":"DoubleQuote","fqn":"module::197467689::DoubleQuote","filepath":"src/types/string-literals/character-sets/quotation-marks/StandardMark.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**DoubleQuote**\n\nStandard _non_-smart double quote mark.","tags":[]}],"deps":[],"refs":[],"symbolHash":3579361097,"updated":1723767904471},{"name":"StandardMark","fqn":"module::2175406749::StandardMark","filepath":"src/types/string-literals/character-sets/quotation-marks/QuotationMark.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3923170975,"updated":1723767905169},{"name":"SmartMark","fqn":"module::3705117984::SmartMark","filepath":"src/types/string-literals/character-sets/quotation-marks/QuotationMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":778117530,"updated":1723767905169},{"name":"SmartMarkPlus","fqn":"module::3729964606::SmartMarkPlus","filepath":"src/types/string-literals/character-sets/quotation-marks/QuotationMark.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":279312140,"updated":1723767905169},{"name":"PhoneNumberDelimiter","fqn":"module::3074325429::PhoneNumberDelimiter","filepath":"src/types/string-literals/character-sets/phone/PhoneNumber.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":763496828,"updated":1723767905161},{"name":"LocalPhoneNumber","fqn":"module::1848123338::LocalPhoneNumber","filepath":"src/types/string-literals/character-sets/phone/PhoneNumber.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2065879032,"updated":1723767905161},{"name":"CountryPhoneNumber","fqn":"module::2452667987::CountryPhoneNumber","filepath":"src/types/string-literals/character-sets/phone/PhoneNumber.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1826052586,"updated":1723767905161},{"name":"InternationalPhoneNumber","fqn":"module::640586418::InternationalPhoneNumber","filepath":"src/types/string-literals/character-sets/phone/PhoneNumber.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1375857003,"updated":1723767905161},{"name":"Process","fqn":"local::1527383258::Process","filepath":"src/types/string-literals/character-sets/phone/PhoneNumber.ts","startLine":66,"endLine":76,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"_TDelimiter","type":"_TDelimiter"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1318537508,"updated":1723767905162},{"name":"OnPass","fqn":"module::3111905076::OnPass","filepath":"src/types/string-literals/character-sets/phone/RawPhoneNumber.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3150034791,"updated":1723767905162},{"name":"_RightChars","fqn":"local::520136407::_RightChars","filepath":"src/types/string-literals/character-sets/phone/RawPhoneNumber.ts","startLine":48,"endLine":53,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3057964072,"updated":1723767905163},{"name":"_RightLength","fqn":"local::520136407::_RightLength","filepath":"src/types/string-literals/character-sets/phone/RawPhoneNumber.ts","startLine":21,"endLine":45,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":828693228,"updated":1723767905163},{"name":"PhoneAreaCode","fqn":"module::2508141861::PhoneAreaCode","filepath":"src/types/string-literals/character-sets/phone/CountryPhoneNumber.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2542872212,"updated":1723767905157},{"name":"StartsWith","fqn":"module::3722295612::StartsWith","filepath":"src/types/string-literals/character-sets/phone/GetPhoneCountryCode.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2291081580,"updated":1723767905157},{"name":"Trim","fqn":"module::2678895335::Trim","filepath":"src/types/string-literals/character-sets/phone/RemovePhoneCountryCode.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3191773204,"updated":1723767905163},{"name":"RetainUntil","fqn":"module::1650675435::RetainUntil","filepath":"src/types/string-literals/character-sets/phone/GetPhoneCountryCode.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":923613461,"updated":1723767905157},{"name":"HasPhoneCountryCode","fqn":"module::2185395147::HasPhoneCountryCode","filepath":"src/types/string-literals/character-sets/phone/GetPhoneNumberType.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":722032771,"updated":1723767905158},{"name":"RetainChars","fqn":"module::1668594894::RetainChars","filepath":"src/types/string-literals/character-sets/phone/GetPhoneNumberType.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":685132135,"updated":1723767905158},{"name":"DialCountryCode","fqn":"module::1457734435::DialCountryCode","filepath":"src/types/string-literals/character-sets/phone/InternationalPhoneNumber.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2290471883,"updated":1723767905161},{"name":"PhoneFormat","fqn":"module::1164321170::PhoneFormat","filepath":"src/types/string-literals/character-sets/phone/ToPhoneFormat.ts","startLine":19,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**PhoneFormat**\n\nA union type of _formats_ used for telephone numbers","tags":[]}],"deps":[],"refs":[],"symbolHash":3236625935,"updated":1723767904475},{"name":"FormatLookup","fqn":"local::755223344::FormatLookup","filepath":"src/types/string-literals/character-sets/phone/ToPhoneFormat.ts","startLine":21,"endLine":34,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2804984375,"updated":1723767905163},{"name":"FirstOfEach","fqn":"module::2892926579::FirstOfEach","filepath":"src/types/string-literals/character-sets/phone/PhoneCountryCode.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3689436250,"updated":1723767905161},{"name":"PhoneCountryLookup","fqn":"module::4074679325::PhoneCountryLookup","filepath":"src/types/string-literals/character-sets/phone/PhoneCountryCode.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::13543941::Mutable"],"refs":[],"symbolHash":127815100,"updated":1723767904476},{"name":"Process","fqn":"local::1289680348::Process","filepath":"src/types/string-literals/casing/AllCaps.ts","startLine":4,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TChars","type":"TChars"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2447278142,"updated":1723767905081},{"name":"LeftWhitespace","fqn":"module::62880555::LeftWhitespace","filepath":"src/types/string-literals/casing/SnakeCase.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1139502810,"updated":1723767905087},{"name":"Uncapitalize","fqn":"ext::2318994541::Uncapitalize","filepath":"../../../../../node_modules/typescript/lib/lib.es5.d.ts","startLine":6,"endLine":6,"scope":"external","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2318994541,"updated":1723767905087},{"name":"RightWhitespace","fqn":"module::1766334850::RightWhitespace","filepath":"src/types/string-literals/casing/SnakeCase.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2806325127,"updated":1723767905087},{"name":"NonAlphaChar","fqn":"module::1136606036::NonAlphaChar","filepath":"src/types/string-literals/casing/CapFirstAlpha.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":157987088,"updated":1723767905081},{"name":"Replace","fqn":"module::3977136121::Replace","filepath":"src/types/string-literals/casing/KebabCase.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1583917896,"updated":1723767905085},{"name":"StripLeftNonAlpha","fqn":"module::4109795294::StripLeftNonAlpha","filepath":"src/types/string-literals/casing/CapFirstAlpha.ts","startLine":6,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"Strips the non-alpha characters that lead a string","tags":[]}],"deps":["module::1136606036::NonAlphaChar"],"refs":[],"symbolHash":3128125325,"updated":1723767904478},{"name":"LeadingNonAlpha","fqn":"module::4005579088::LeadingNonAlpha","filepath":"src/types/string-literals/casing/CapFirstAlpha.ts","startLine":15,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"identifies the leading characters which are _not_ alphabetical","tags":[]}],"deps":["module::3977136121::Replace","module::4109795294::StripLeftNonAlpha"],"refs":[],"symbolHash":215378955,"updated":1723767904478},{"name":"HasUppercase","fqn":"module::1391074445::HasUppercase","filepath":"src/types/string-literals/casing/DashUppercase.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":456306038,"updated":1723767905082},{"name":"_DU","fqn":"local::2129135063::_DU","filepath":"src/types/string-literals/casing/DashUppercase.ts","startLine":3,"endLine":3,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1538910930,"updated":1723767905082},{"name":"DashUppercase","fqn":"module::3144135218::DashUppercase","filepath":"src/types/string-literals/casing/SnakeCase.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":246763385,"updated":1723767905087},{"name":"LowerAllCaps","fqn":"module::3521220041::LowerAllCaps","filepath":"src/types/string-literals/casing/SnakeCase.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4115100893,"updated":1723767905087},{"name":"IsAllCaps","fqn":"module::2922514109::IsAllCaps","filepath":"src/types/string-literals/casing/LowerAllCaps.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3505744449,"updated":1723767905086},{"name":"DashDelim","fqn":"local::894490003::DashDelim","filepath":"src/types/string-literals/casing/PascalCase.ts","startLine":8,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"convert all delimiters to dashes","tags":[]}],"deps":[],"refs":[],"symbolHash":2348730259,"updated":1723767905086},{"name":"Delimiter","fqn":"local::894490003::Delimiter","filepath":"src/types/string-literals/casing/PascalCase.ts","startLine":5,"endLine":5,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1767355671,"updated":1723767905086},{"name":"SpaceToDash","fqn":"local::2588076885::SpaceToDash","filepath":"src/types/string-literals/casing/SnakeCase.ts","startLine":14,"endLine":16,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"convert space to dash","tags":[]}],"deps":[],"refs":[],"symbolHash":1718391164,"updated":1723767905087},{"name":"DropSequence","fqn":"local::2880122274::DropSequence","filepath":"src/types/string-literals/options/DropChars.ts","startLine":14,"endLine":22,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TDrop","type":"TDrop"}],"jsDocs":[{"comment":"Handles dropping a non-union type which can be a single\ncharacter OR a sequence of characters","tags":[]}],"deps":[],"refs":[],"symbolHash":3333136293,"updated":1723767905153},{"name":"_UsStateAbbrev","fqn":"local::2897937848::_UsStateAbbrev","filepath":"src/types/string-literals/geo/state.ts","startLine":9,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1939997635,"updated":1723767905151},{"name":"_UsProvinceAbbrev","fqn":"local::2897937848::_UsProvinceAbbrev","filepath":"src/types/string-literals/geo/state.ts","startLine":15,"endLine":19,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1327840207,"updated":1723767905151},{"name":"_UsStateName","fqn":"local::2897937848::_UsStateName","filepath":"src/types/string-literals/geo/state.ts","startLine":36,"endLine":42,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1024419895,"updated":1723767905151},{"name":"_UsProvinceName","fqn":"local::2897937848::_UsProvinceName","filepath":"src/types/string-literals/geo/state.ts","startLine":44,"endLine":48,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3129320394,"updated":1723767905151},{"name":"Z2S","fqn":"local::3087429248::Z2S","filepath":"src/types/string-literals/geo/zip.ts","startLine":13,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3597268905,"updated":1723767905152},{"name":"Zip","fqn":"module::1796929940::Zip","filepath":"src/types/string-literals/geo/zip.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Zip5**\n\nA five digit zip code.\n\n**Related:** `ZipPlus4`, `ZipCode`","tags":[]}],"deps":["module::1881292962::NumericChar"],"refs":[],"symbolHash":3680659368,"updated":1723767904483},{"name":"ZipPlus4","fqn":"module::487351903::ZipPlus4","filepath":"src/types/string-literals/geo/zip.ts","startLine":27,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1796929940::Zip","module::1881292962::NumericChar"],"refs":[],"symbolHash":4117109980,"updated":1723767904483},{"name":"DictArrayKv","fqn":"module::2342626942::DictArrayKv","filepath":"src/types/tuples/DictArray.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"T","type":"T"}],"jsDocs":[{"comment":"An element in a `DictArray` shaped as a two element tuple: `[key, kv]`.","tags":[]}],"deps":["ext::2318994541::Pick"],"refs":[],"symbolHash":3074482712,"updated":1723767904484},{"name":"FirstKey","fqn":"module::3234968973::FirstKey","filepath":"src/types/tuples/FirstKeyValue.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2242691468,"updated":1723767904949},{"name":"Process","fqn":"local::3853108191::Process","filepath":"src/types/tuples/FixedLengthArray.ts","startLine":13,"endLine":18,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"N","type":"N"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2048401089,"updated":1723767904950},{"name":"ParseInt","fqn":"module::2701837276::ParseInt","filepath":"src/types/type-conversion/AsNumber.ts","startLine":8,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ParseInt**`<T>`\n\nConverts a known string literal representation of a number\nto an actual number.","tags":[]}],"deps":[],"refs":[],"symbolHash":933359005,"updated":1723767904487},{"name":"InvalidCast","fqn":"local::3401370074::InvalidCast","filepath":"src/types/type-conversion/AsNonNull.ts","startLine":7,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3198678286,"updated":1723767904954},{"name":"Filter","fqn":"module::3949993701::Filter","filepath":"src/types/type-conversion/IntersectWithAll.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3373947270,"updated":1723767904970},{"name":"ConvertUnion","fqn":"local::3295654126::ConvertUnion","filepath":"src/types/type-conversion/AsStringUnion.ts","startLine":3,"endLine":16,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"THandle","type":"THandle"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3294962270,"updated":1723767904956},{"name":"ToNumericArray","fqn":"module::1647154577::ToNumericArray","filepath":"src/types/type-conversion/ToNumber.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":215801424,"updated":1723767904977},{"name":"IsFalsy","fqn":"module::3092812128::IsFalsy","filepath":"src/types/type-conversion/WithDefault.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3254538166,"updated":1723767904984},{"name":"IsLength","fqn":"module::3475651727::IsLength","filepath":"src/types/type-conversion/ToBoolean.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3539088670,"updated":1723767904976},{"name":"UnionToIntersection","fqn":"local::4046639112::UnionToIntersection","filepath":"src/types/type-conversion/UnionToTuple.ts","startLine":7,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"}],"jsDocs":[{"comment":"UnionToIntersection<{ foo: string } | { bar: string }> =\n { foo: string } & { bar: string }.","tags":[]}],"deps":[],"refs":[],"symbolHash":3073385768,"updated":1723767904980},{"name":"LastInUnion","fqn":"module::2952607005::LastInUnion","filepath":"src/types/type-conversion/UnionToTuple.ts","startLine":16,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"}],"jsDocs":[{"comment":"LastInUnion<1 | 2> = 2.","tags":[]}],"deps":["local::4046639112::UnionToIntersection"],"refs":[],"symbolHash":495111712,"updated":1723767904492},{"name":"LastInUnion","fqn":"module::2319218199::LastInUnion","filepath":"src/types/type-conversion/UnionShift.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3096016746,"updated":1723767904979},{"name":"Process","fqn":"local::2314486362::Process","filepath":"src/types/type-conversion/UnionShift.ts","startLine":4,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"},{"name":"Last","type":"Last"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1135028396,"updated":1723767904979},{"name":"Reduce","fqn":"local::1855138854::Reduce","filepath":"src/types/type-conversion/UnionFilter.ts","startLine":4,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1435691646,"updated":1723767904979},{"name":"Isolate","fqn":"local::1855138854::Isolate","filepath":"src/types/type-conversion/UnionFilter.ts","startLine":15,"endLine":24,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1007797890,"updated":1723767904979},{"name":"WidenLiteral","fqn":"module::3337523684::WidenLiteral","filepath":"src/types/type-conversion/Widen.ts","startLine":129,"endLine":139,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3252133680::Scalar","module::2078215867::WidenScalar","module::3393438424::IsUnion","module::976554854::WidenUnion","module::372852805::WidenTuple","module::186693758::Dictionary","local::1616076766::WidenObj","module::4102577001::Keys"],"refs":[],"symbolHash":3768678452,"updated":1723767904494},{"name":"Process","fqn":"local::1616076766::Process","filepath":"src/types/type-conversion/Widen.ts","startLine":64,"endLine":76,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":103945450,"updated":1723767904983},{"name":"WidenTuple","fqn":"module::372852805::WidenTuple","filepath":"src/types/type-conversion/Widen.ts","startLine":104,"endLine":110,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2707240268::IsLiteral","module::3337523684::WidenLiteral","local::1616076766::Process"],"refs":[],"symbolHash":1390672800,"updated":1723767904493},{"name":"WidenScalar","fqn":"module::2078215867::WidenScalar","filepath":"src/types/type-conversion/Widen.ts","startLine":51,"endLine":61,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**WidenScalar**`<T>`\n\nWidens any _scalar_ type `T`.","tags":[]}],"deps":["module::3252133680::Scalar"],"refs":[],"symbolHash":4232762354,"updated":1723767904493},{"name":"WidenUnion","fqn":"module::976554854::WidenUnion","filepath":"src/types/type-conversion/Widen.ts","startLine":127,"endLine":127,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**WidenUnion**<T>\n\nWidens all the elements in the union type.","tags":[]}],"deps":["module::2535688849::TupleToUnion","module::372852805::WidenTuple","module::458105997::UnionToTuple"],"refs":[],"symbolHash":2180444544,"updated":1723767904494},{"name":"WidenObj","fqn":"local::1616076766::WidenObj","filepath":"src/types/type-conversion/Widen.ts","startLine":79,"endLine":102,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TKeys","type":"TKeys"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3998584242,"updated":1723767904983},{"name":"WidenFn","fqn":"local::1616076766::WidenFn","filepath":"src/types/type-conversion/Widen.ts","startLine":160,"endLine":181,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TNarrowing","type":"TNarrowing"},{"name":"TParams","type":"TParams"},{"name":"TReturn","type":"TReturn"},{"name":"TProps","type":"TProps"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":845189910,"updated":1723767904982},{"name":"Widen","fqn":"module::3306889924::Widen","filepath":"src/types/type-conversion/Widen.ts","startLine":233,"endLine":242,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TForce","type":"TForce"}],"jsDocs":[{"comment":"**Widen**`<T, [TForce]>`\n\nConverts a literal type to a _wider_ type.\n\n- for _scalar values_ `T` will just become wide variant (e.g., `5` → `number`)\n- for _union types_ all elements of the union will be made wide\n- for _container values_ it will widen the items inside the container\n\n**Note:** should you want the container values to be fully widened you\ncan set `TForce` to true.","tags":[]}],"deps":["module::3393438424::IsUnion","module::976554854::WidenUnion","module::2872591658::Container","module::3008333592::WidenContainer","module::3252133680::Scalar","module::2078215867::WidenScalar","local::1616076766::Process"],"refs":[],"symbolHash":3963647460,"updated":1723767904497},{"name":"AsObject","fqn":"module::1245164793::AsObject","filepath":"src/types/type-conversion/Widen.ts","startLine":22,"endLine":22,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2921105283,"updated":1723767904983},{"name":"WidenContainer","fqn":"module::3008333592::WidenContainer","filepath":"src/types/type-conversion/Widen.ts","startLine":184,"endLine":219,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TForce","type":"TForce"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2872591658::Container","module::2666698309::Tuple","module::186693758::Dictionary","ext::2318994541::Map","ext::2318994541::Set","ext::2318994541::WeakMap","module::3580587573::AnyFunction","module::540585742::TypedFunction","local::1616076766::WidenFn","module::3096040080::IsNarrowingFn","ext::2318994541::Parameters","ext::2318994541::ReturnType","module::2994160504::ExpandDictionary","module::2594163080::FnProps","ext::2318994541::Function","module::2943445649::IsObjectLiteral","module::4102577001::Keys","module::13543941::Mutable","module::3435872486::ExpandRecursively","local::1616076766::WidenObj","module::4114441065::EmptyObject","module::372852805::WidenTuple","module::3306889924::Widen","module::1245164793::AsObject"],"refs":[],"symbolHash":4125426858,"updated":1723767904496},{"name":"ProcessArr","fqn":"local::682893832::ProcessArr","filepath":"src/types/type-conversion/WidenValues.ts","startLine":4,"endLine":8,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2707431723,"updated":1723767904983},{"name":"ProcessObj","fqn":"local::682893832::ProcessObj","filepath":"src/types/type-conversion/WidenValues.ts","startLine":10,"endLine":20,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":58415852,"updated":1723767904984},{"name":"MutableArray","fqn":"local::4165892048::MutableArray","filepath":"src/types/type-conversion/Mutable.ts","startLine":15,"endLine":18,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2164209956,"updated":1723767904972},{"name":"MutableObject","fqn":"local::4165892048::MutableObject","filepath":"src/types/type-conversion/Mutable.ts","startLine":3,"endLine":13,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3261182672,"updated":1723767904973},{"name":"Process","fqn":"local::3892338325::Process","filepath":"src/types/type-conversion/MergeObjects.ts","startLine":16,"endLine":38,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKeys","type":"TKeys"},{"name":"TDef","type":"TDef"},{"name":"TOverride","type":"TOverride"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":108701578,"updated":1723767904972},{"name":"CombinedKeys","fqn":"module::1478282086::CombinedKeys","filepath":"src/types/type-conversion/MergeObjects.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1007351423,"updated":1723767904972},{"name":"IsNothing","fqn":"module::3086588767::IsNothing","filepath":"src/types/type-conversion/MergeObjects.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":758138160,"updated":1723767904972},{"name":"MergeTuplesAcc","fqn":"local::1370833687::MergeTuplesAcc","filepath":"src/types/type-conversion/Merge.ts","startLine":47,"endLine":58,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDefault","type":"TDefault"},{"name":"TOverride","type":"TOverride"},{"name":"TKey","type":"TKey"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1593469150,"updated":1723767904971},{"name":"AreSameType","fqn":"module::3900322140::AreSameType","filepath":"src/types/type-conversion/Merge.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":198232528,"updated":1723767904971},{"name":"Process","fqn":"local::1370833687::Process","filepath":"src/types/type-conversion/Merge.ts","startLine":75,"endLine":92,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDefault","type":"TDefault"},{"name":"TOverride","type":"TOverride"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":276073358,"updated":1723767904971},{"name":"TrimLeft","fqn":"module::3763876751::TrimLeft","filepath":"src/types/type-conversion/LeftWhitespace.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3256855182,"updated":1723767904971},{"name":"Iterate","fqn":"local::1571166098::Iterate","filepath":"src/types/type-conversion/ReplaceAll.ts","startLine":17,"endLine":27,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TText","type":"TText"},{"name":"TFind","type":"TFind"},{"name":"TReplace","type":"TReplace"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":26579830,"updated":1723767904974},{"name":"Process","fqn":"local::1571166098::Process","filepath":"src/types/type-conversion/ReplaceAll.ts","startLine":5,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TText","type":"TText"},{"name":"TFind","type":"TFind"},{"name":"TReplace","type":"TReplace"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3809940194,"updated":1723767904974},{"name":"TrimRight","fqn":"module::1129016037::TrimRight","filepath":"src/types/type-conversion/RightWhitespace.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3190795428,"updated":1723767904975},{"name":"Process","fqn":"local::3465726652::Process","filepath":"src/types/type-conversion/Trim.ts","startLine":3,"endLine":11,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1710713768,"updated":1723767904978},{"name":"AnyArray","fqn":"module::14236863::AnyArray","filepath":"src/types/type-conversion/ToContainer.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":213628026,"updated":1723767904976},{"name":"AsJsonArray","fqn":"local::1867752411::AsJsonArray","filepath":"src/types/type-conversion/ToJsonValue.ts","startLine":9,"endLine":15,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4146753829,"updated":1723767904977},{"name":"Process","fqn":"local::3954699033::Process","filepath":"src/types/type-conversion/ValueOrReturnValue.ts","startLine":4,"endLine":10,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":357470367,"updated":1723767904980},{"name":"ProcessTuple","fqn":"local::11596306::ProcessTuple","filepath":"src/types/type-conversion/ReturnValues.ts","startLine":4,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TArray","type":"TArray"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3373061846,"updated":1723767904974},{"name":"Process","fqn":"local::4100301865::Process","filepath":"src/types/type-conversion/StripChars.ts","startLine":21,"endLine":24,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TChars","type":"TChars"},{"name":"TStrip","type":"TStrip"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2991331795,"updated":1723767904975},{"name":"Process","fqn":"local::1222869557::Process","filepath":"src/types/type-conversion/RetainChars.ts","startLine":10,"endLine":17,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TChars","type":"TChars"},{"name":"TRetain","type":"TRetain"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2195250768,"updated":1723767904974},{"name":"ProcessTuple","fqn":"local::3766767126::ProcessTuple","filepath":"src/types/type-conversion/ReduceValues.ts","startLine":4,"endLine":12,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TArray","type":"TArray"},{"name":"TResults","type":"TResults"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1925391891,"updated":1723767904973},{"name":"JsonValue","fqn":"module::1292212274::JsonValue","filepath":"src/types/type-conversion/JSON.ts","startLine":16,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**JsonValue**`<T>`\n\nConverts a string value to the appropriate JSON type\n\n**Related:** `JsonValues`","tags":[]}],"deps":["module::3330042255::NumberLike","module::116081596::AsNumber","module::1931245833::If","module::1364134543::IsEqual","module::275936486::EnsureLeading","module::1897058928::AsString","module::2557355544::EnsureTrailing"],"refs":[],"symbolHash":2114440180,"updated":1723767904507},{"name":"LitString","fqn":"local::2614486391::LitString","filepath":"src/types/type-conversion/StringLiteralFromTuple.ts","startLine":3,"endLine":19,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TItems","type":"TItems"},{"name":"TLiteral","type":"TLiteral"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2020693944,"updated":1723767904975},{"name":"Process","fqn":"local::4012802885::Process","filepath":"src/types/boolean-logic/operators/IsIterable.ts","startLine":4,"endLine":18,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":354513526,"updated":1723767905055},{"name":"YouTubeUrl","fqn":"module::788639442::YouTubeUrl","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":602664996,"updated":1723767905077},{"name":"VideoUrlKind","fqn":"local::2159697161::VideoUrlKind","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":3,"endLine":3,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3654995507,"updated":1723767905077},{"name":"YouTubeVideoUrl","fqn":"module::4083180366::YouTubeVideoUrl","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3953117863,"updated":1723767905078},{"name":"_VideoKind","fqn":"local::2159697161::_VideoKind","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":19,"endLine":28,"scope":"local","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TQueryParams","type":"TQueryParams"},{"name":"TKind","type":"TKind"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2716023175,"updated":1723767905078},{"name":"YouTubePlaylistUrl","fqn":"module::1911915973::YouTubePlaylistUrl","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":337424295,"updated":1723767905078},{"name":"IsAllLowercase","fqn":"module::2655857164::IsAllLowercase","filepath":"src/types/string-literals/casing/RaiseAllLowercase.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","Alias","PropertyExcludes","NamespaceModuleExcludes","AliasExcludes"],"kind":"type-defn","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":230887825,"updated":1723767905086},{"name":"ZipToState","fqn":"module::2087083766::ZipToState","filepath":"src/types/string-literals/geo/zip.ts","startLine":20,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ZipToState**`<T>`\n\nConverts a zip code into a _union type_ of","tags":[]}],"deps":["module::2295046820::First","module::3921923702::Chars","local::3087429248::Z2S","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":3190436552,"updated":1723767904483},{"name":"ZipCode","fqn":"module::2216905968::ZipCode","filepath":"src/types/string-literals/geo/zip.ts","startLine":32,"endLine":32,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"A relatively strong type for Zip5 or Zip5+4 zip codes","tags":[]}],"deps":["module::487351903::ZipPlus4","module::1796929940::Zip"],"refs":[],"symbolHash":4093378281,"updated":1723767904483},{"name":"Zero","fqn":"module::182961461::Zero","filepath":"src/types/numeric-literals/Zero.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Zero**\n\nA representation of **zero**; either as the number zero or\nthe string literal equivalent.","tags":[]}],"deps":[],"refs":[],"symbolHash":2223628395,"updated":1723767904380},{"name":"YouTubeSubscriptionsUrl","fqn":"module::1990536081::YouTubeSubscriptionsUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":188,"endLine":188,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeSubscriptionsUrl**\n\nThe URL which brings a logged in user to their list of subscriptions.","tags":[]}],"deps":["module::812936183::AnyQueryParams"],"refs":[],"symbolHash":4286653489,"updated":1723767904466},{"name":"YouTubePlaylistUrl","fqn":"module::2557939062::YouTubePlaylistUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":108,"endLine":113,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubePlaylistUrl**\n\nA URL pattern which should match all playlist URL's on YouTube.\nThat includes both the logged in user's as well as other peoples.\n\n**Related:** `YouTubeUsersPlaylistUrl`","tags":[]}],"deps":["module::1120222348::UrlsFrom","module::2718340716::YouTubeUsersPlaylistUrl"],"refs":[],"symbolHash":3897477597,"updated":1723767904465},{"name":"YouTubePageType","fqn":"module::1187827541::YouTubePageType","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":24,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubePageType**\n\nA union type enumeration of the _types_ of pages on YouTube.","tags":[]}],"deps":[],"refs":[],"symbolHash":652688202,"updated":1723767904464},{"name":"YouTubeLikedPlaylistUrl","fqn":"module::270513030::YouTubeLikedPlaylistUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":166,"endLine":166,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeLikedPlaylistUrl**\n\nThe URL which brings a logged in user to a playlist of their _liked_\nvideos.","tags":[]}],"deps":[],"refs":[],"symbolHash":896534053,"updated":1723767904466},{"name":"YouTubeHistoryUrl","fqn":"module::1921914955::YouTubeHistoryUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":181,"endLine":181,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**YouTubeHistoryUrl**\n\nThe URL which brings a logged in user to a list of their previously watched\nvideos.","tags":[]}],"deps":["module::812936183::AnyQueryParams"],"refs":[],"symbolHash":1354137066,"updated":1723767904466},{"name":"YouTubeEmbedUrl","fqn":"module::523925260::YouTubeEmbedUrl","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":94,"endLine":97,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVideo","type":"TVideo"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1120222348::UrlsFrom"],"refs":[],"symbolHash":741263624,"updated":1723767904465},{"name":"WrapperFn","fqn":"module::3011813067::WrapperFn","filepath":"src/types/functions/WrapperFn.ts","startLine":24,"endLine":38,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"},{"name":"TTransform","type":"TTransform"},{"name":"TState","type":"TState"}],"jsDocs":[{"comment":"**WrapperFn**`<TFn,TTransform,[TState]>`\n\nA function which consumes a known function `TFn` and exposes the\nsame parameters externally while allowing it to _transform_ the\noriginal functions return value before completing.\n\nOptionally, you can express some amount of _state_ which will be available\nto the `TTransform` function to do it's work.\n\n```ts\ntype Fn = (name: string) => `Hello ${string}`;\n// (name: string) => `Hello ${name}!`;\ntype Wrapped = WrapperFn<Fn, v => `${v}!`>\n```","tags":[]}],"deps":["module::540585742::TypedFunction","ext::2318994541::ReturnType","module::2872591658::Container","module::814973::Unset","module::1931245833::If","module::1436230481::IsUnset","module::2388804063::FnFrom","ext::2318994541::Parameters","module::1189946910::AsNarrowingFn"],"refs":[],"symbolHash":3283025605,"updated":1723767904319},{"name":"WithValue","fqn":"module::2488955353::WithValue","filepath":"src/types/dictionary/WithValue.ts","startLine":38,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TValue","type":"TValue"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"**WithValue**`<TObj,TValue>`\n\nReduces an object's type down to only those key/value pairs where the\nvalue is of type `W`.\n```ts\nconst foo = { a: 1, b: \"hi\", c: () => \"hello\" }\n// { c: () => \"hello\" }\ntype W = WithValue<typeof foo, Function>\n```\n\n**Related:** `WithoutValue`, `WithKeys`, `WithoutKeys`","tags":[]}],"deps":["module::186693758::Dictionary","module::3435872486::ExpandRecursively","local::4085884460::Process"],"refs":[],"symbolHash":1312490568,"updated":1723767904283},{"name":"WithStringKeys","fqn":"module::3014249106::WithStringKeys","filepath":"src/types/dictionary/WithStringKeys.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**WithStringKeys**`<T>`\n\nReduces an object to only the key/value pairs where the key is a\nstring.","tags":[]}],"deps":["module::1903151425::AnyObject","ext::2318994541::Omit","module::2634758165::NonStringKeys"],"refs":[],"symbolHash":4045922219,"updated":1723767904285},{"name":"WithoutValue","fqn":"module::1091936338::WithoutValue","filepath":"src/types/dictionary/WithoutValue.ts","startLine":17,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"**WithoutValue**\n\nReduces an object's type down to only those key/value pairs where the\nvalue is **NOT** of type `W`.\n\n```ts\nconst foo = { a: 1, b: \"hi\", c: () => \"hello\" }\n// { a: 1, b: \"hi\" }\ntype W = WithValue<Function, typeof foo>\n```\n\nYou manually exclude keys as well by setting the optional `E` generic.","tags":[]}],"deps":["module::1903151425::AnyObject","module::3605609985::Narrowable","module::3435872486::ExpandRecursively","ext::2318994541::Pick","module::2803964246::KeysWithoutValue"],"refs":[],"symbolHash":4049795733,"updated":1723767904284},{"name":"WithoutKeys","fqn":"module::122258235::WithoutKeys","filepath":"src/types/dictionary/WithoutKeys.ts","startLine":25,"endLine":38,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"}],"jsDocs":[{"comment":"**WithoutKeys**`<TObj, TKeys>`\n\nRemoves the keys in `TKeys` from an object `TObj`. This is\nfunctionally equivalent to the `Omit<T,U>` built-in but rather than\ntaking a union type it takes an array of keys.","tags":[]}],"deps":["module::186693758::Dictionary","module::4119350992::ObjectKey","local::2987430520::Process","module::2535688849::TupleToUnion","module::2994160504::ExpandDictionary"],"refs":[],"symbolHash":815882362,"updated":1723767904284},{"name":"WithNumericKeys","fqn":"module::1536211031::WithNumericKeys","filepath":"src/types/dictionary/WithNumericKeys.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**WithNumericKeys**`<T>`\n\nReduces an object to only the key/value pairs where the key is numeric.","tags":[]}],"deps":["ext::2318994541::Omit","module::3495790331::NonNumericKeys"],"refs":[],"symbolHash":4173755708,"updated":1723767904284},{"name":"WithKeys","fqn":"module::159485248::WithKeys","filepath":"src/types/dictionary/WithKeys.ts","startLine":28,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"K","type":"K"}],"jsDocs":[{"comment":"**WithKeys**`<T,K>`\n\nThis type utility will ensure that the type `T` will _retain_ the key/value \npairs which extend `K`.\n\nIt is very similar to **Pick** but rather `K` being restricted to\nbeing a string union, wth **WithKeys** you can use the union type\nor a readonly array of strings.\n\n```ts\ntype Test = { foo: 1, bar: number, baz: string };\n// { foo: 1, bar: number }\ntype T1 = WithKeys<Test, \"foo\" | \"bar\">; // Pick syntax\ntype T2 = WithKeys<Test, [\"foo\", \"bar\"]>;\n```","tags":[]}],"deps":["module::1903151425::AnyObject","module::2666698309::Tuple","ext::2318994541::PropertyKey","module::3435872486::ExpandRecursively","module::1904522907::UnionToIntersection","local::2208580797::MakeIntoUnion","local::2208580797::MakeNumericIndex","ext::2318994541::Pick"],"refs":[],"symbolHash":2710216206,"updated":1723767904282},{"name":"WithDefault","fqn":"module::2085122986::WithDefault","filepath":"src/types/type-conversion/WithDefault.ts","startLine":23,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TDef","type":"TDef"},{"name":"TPolicy","type":"TPolicy"}],"jsDocs":[{"comment":"**WithDefault**`<TVal,TDef>`\n\nProvided a type `TVal`, this utility will proxy any value which is\n_not_ `null` or `undefined` through as `TVal`; otherwise it will \nsubstitute in `TDef`.\n\n**Note:** you may optionally set the criteria for using the default\nvalue from `null` or `undefined` to any _falsy_ value.\n\n### Examples\n```ts\n// \"foo\"\ntype T1 = WithDefault<\"foo\",\"bar\">;\n// \"bar\"\ntype T2 = WithDefault<null,\"bar\">;\n// \"bar\"\ntype T3 = WithoutDefault<\"\", \"bar\", \"falsy\">;\n```","tags":[]}],"deps":["module::1931245833::If","module::488874576::Extends","module::761993671::Nothing","module::3092812128::IsFalsy"],"refs":[],"symbolHash":554304106,"updated":1723767904505},{"name":"WideTypeName","fqn":"module::333595958::WideTypeName","filepath":"src/types/literals/Shape.ts","startLine":67,"endLine":67,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":639612029,"updated":1723767904349},{"name":"WidenValues","fqn":"module::2644595401::WidenValues","filepath":"src/types/type-conversion/WidenValues.ts","startLine":29,"endLine":35,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**WidenValues**`<T>`\n\nType utility which _widens_ the values of a container.\n\n**Related:** `Widen`","tags":[]}],"deps":["module::2872591658::Container","local::682893832::ProcessArr","module::186693758::Dictionary","local::682893832::ProcessObj","module::4102577001::Keys"],"refs":[],"symbolHash":658989416,"updated":1723767904497},{"name":"Whitespace","fqn":"module::3756464491::Whitespace","filepath":"src/types/string-literals/character-sets/Whitespace.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Whitespace**\n\nCharacters typically representing \"white space\"","tags":[]}],"deps":["module::2535688849::TupleToUnion","module::13543941::Mutable"],"refs":[],"symbolHash":2851394830,"updated":1723767904457},{"name":"WhereLeft","fqn":"module::2769604609::WhereLeft","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":227,"endLine":250,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TOp","type":"TOp"},{"name":"TLeftRight","type":"TLeftRight"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**WhereLeft**`<TEval,TOp,TLeftRight,[IF],[ELSE]>`\n\nA branching utility which branches based on:\n - some type `TEval` when using some operation `TOp`\n - evaluates to `true` for `TLeftRight[left]`\n\n#### Operations\n- operations are _extends_, _equals_, _includes_, and _contains_\n- _includes_ looks for sub-strings, whereas _contains_ looks for an element of a tuple\n\n#### Defaults\n- the `IF` type defaults to either `TEval` or -- where possible -- a narrowed version based on the intersection of the two types\n- the `ELSE` defaults to `ErrorCondition<\"conditional-failure\">`","tags":[]}],"deps":["module::2894172080::LeftRight__Operations","module::1195775228::LeftRight","local::889785542::left","module::3658915459::AsError","module::2597507937::Concat","module::779948345::LeftExtends","module::3634406013::LeftEquals","module::1029167213::LeftIncludes","module::1777190149::LeftContains"],"refs":[],"symbolHash":2462952581,"updated":1723767904192},{"name":"WhenNever","fqn":"module::1000807991::WhenNever","filepath":"src/types/boolean-logic/branching/WhenNever.ts","startLine":12,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TMapTo","type":"TMapTo"}],"jsDocs":[{"comment":"**WhenNever**`<T, [TMapTo]>`\n\nWhen `T` is _never_ this utility will map it to `TMapTo`; in all\nother cases it just proxies `T` through.\n\n**Note:** if not specified, `TMapTo` will be set to **false**.","tags":[]}],"deps":["module::80185219::IsNever"],"refs":[],"symbolHash":3507958849,"updated":1723767904247},{"name":"WeakMapValueDefn","fqn":"module::194901662::WeakMapValueDefn","filepath":"src/types/literals/Shape.ts","startLine":293,"endLine":293,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1473201238::ShapeCallback","module::4069020921::WideTokenNames"],"refs":[],"symbolHash":4282535326,"updated":1723767904355},{"name":"WeakMapKeyDefn","fqn":"module::3921671536::WeakMapKeyDefn","filepath":"src/types/literals/Shape.ts","startLine":292,"endLine":292,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1387603245::WideContainerNames","module::1473201238::ShapeCallback"],"refs":[],"symbolHash":3779189455,"updated":1723767904355},{"name":"VueRef","fqn":"module::1212884312::VueRef","filepath":"src/types/literals/VueRef.ts","startLine":19,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**VueRef**`<T>`\n\nIntended to be the same type as VueJS's `Ref<T>` but without the need\nto include any of the VueJS framework in deps.\n\n**Notes:**\n\n - a real `Ref<T>` has both the `value` property and a _private_ symbol\nexposed to the runtime as a type (but the type is intentionally not exported).\n - whenever using this type, please use it with `IsRef()`,`isRef()` utils\n\n**Related:**\n\n- `IsRef<T>`, `isRef()`, `VueComputedRef<T>`","tags":[]}],"deps":[],"refs":[],"symbolHash":766586876,"updated":1723767904345},{"name":"Values","fqn":"module::2648236852::Values","filepath":"src/types/dictionary/Values.ts","startLine":32,"endLine":46,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Values**`<T>`\n\nProduces a tuple of all the _values_ of a container.\n- for **objects** this would translate to the key values\n- for **tuples** this is just a _proxy_ of the type\n- for _wide_ types like `string[]`","tags":[]}],"deps":["module::2872591658::Container","module::2666698309::Tuple","module::186693758::Dictionary","local::2487391577::Process","module::4102577001::Keys","module::4119350992::ObjectKey","module::540585742::TypedFunction"],"refs":[],"symbolHash":2951258628,"updated":1723767904258},{"name":"ValueOrReturnValue","fqn":"module::3230233472::ValueOrReturnValue","filepath":"src/types/type-conversion/ValueOrReturnValue.ts","startLine":25,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"}],"jsDocs":[{"comment":"**ValueOrReturnValue**`<TEval>`\n\nTakes a value or a tuple of values in `TEval` and evaluates what\nthe item's _return type_ is when an element is a function; otherwise it just proxies\nthe element's type forward.\n\n### Example\n```ts\n// [true, \"foo\", \"bar\"]\ntype T = ValueOrReturns<[true, \"foo\", () => \"bar\"]>;\n```","tags":[]}],"deps":["local::3954699033::Process"],"refs":[],"symbolHash":3311427197,"updated":1723767904504},{"name":"ValueCallback","fqn":"module::858332724::ValueCallback","filepath":"src/types/api/api.ts","startLine":38,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TReturn","type":"TReturn"}],"jsDocs":[{"comment":"**ValueCallback**`<TVal, TReturn>`\n\nA type utility to build a simple \"value callback\".\n\n```ts\n// <V extends string>(v: V) => `hi ${string}`;\ntype T = ValueCallback<string, `hi ${string}`>;\n```","tags":[]}],"deps":[],"refs":[],"symbolHash":23786324,"updated":1723767904124},{"name":"ValueAtDotPath","fqn":"module::4159071237::ValueAtDotPath","filepath":"src/types/string-literals/character-sets/ValueAtDotPath.ts","startLine":44,"endLine":58,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TPath","type":"TPath"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2872591658::Container","module::3296243032::IsValidDotPath","module::2707240268::IsLiteral","module::172457424::IsStringLiteral","module::3471304285::Split","local::4114067823::Process"],"refs":[],"symbolHash":1996952545,"updated":1723767904460},{"name":"ValidKey","fqn":"module::1849150266::ValidKey","filepath":"src/types/dictionary/ValidKey.ts","startLine":12,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**ValidKey**<TContainer>\n\nSimilar to the `Keys<T>` utility but returns a union of values\nwhich are considered valid for the container.\n\n**Related**: `Keys`","tags":[]}],"deps":["module::2872591658::Container","module::2535688849::TupleToUnion","module::4284904442::AsArray","module::4102577001::Keys"],"refs":[],"symbolHash":3651966232,"updated":1723767904285},{"name":"Validate","fqn":"module::3998051684::Validate","filepath":"src/types/boolean-logic/operators/Validate.ts","startLine":37,"endLine":54,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TErr","type":"TErr"}],"jsDocs":[{"comment":"**Validate**`<T,[E]>`\n\nBranching utility which proxies through the value of `T` when it is\n**not** `false` or _returns_ false, otherwise it passes along `E`.\n\n- `E` by default is _never_\n- if `T` is a wide boolean type an `ErrorCondition<\"wide-boolean-not-allowed\">`\nwill be returned\n\n```ts\nconst fn = <T extends string>(dp: T & Validate<IsDotPath<T>>) => {}\n```","tags":[]}],"deps":["module::4187212716::IsTrue","module::1567416713::IsFalse","module::996394587::IsBoolean","local::4149157720::WideBooleanNotAllowed","module::2984222131::LogicFunction","ext::2318994541::ReturnType","module::391074403::IsWideType","local::4149157720::WideReturnNotAllowed"],"refs":[],"symbolHash":208538145,"updated":1723767904223},{"name":"UsStateName","fqn":"module::563715702::UsStateName","filepath":"src/types/string-literals/geo/state.ts","startLine":58,"endLine":60,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStrict","type":"TStrict"}],"jsDocs":[{"comment":"**UsStateName**`<TStrict>`\n\nA union type which includes all US state names (and provinces with state codes)\nfully spelled out. If you want _only_ US states set the `TStrict` generic to `true`.\n\n**Related:** `UsStateAbbrev`","tags":[]}],"deps":["module::4187212716::IsTrue","ext::2318994541::Exclude","local::2897937848::_UsStateName","local::2897937848::_UsProvinceName"],"refs":[],"symbolHash":2670322395,"updated":1723767904483},{"name":"UsStateAbbrev","fqn":"module::2338731295::UsStateAbbrev","filepath":"src/types/string-literals/geo/state.ts","startLine":32,"endLine":34,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStrict","type":"TStrict"}],"jsDocs":[{"comment":"**UsStateAbbrev**`<TStrict>`\n\nA union type which includes all state abbreviations.\n\nBy default it will also include all US provinces and territories which have\na state abbreviation. If you prefer to just use the strict state list then\nset `TStrict` to **true**.\n\n**Related:** `UsStateAbbrev`","tags":[]}],"deps":["module::4187212716::IsTrue","ext::2318994541::Exclude","local::2897937848::_UsStateAbbrev","local::2897937848::_UsProvinceAbbrev"],"refs":[],"symbolHash":4045167252,"updated":1723767904482},{"name":"UrlsFrom","fqn":"module::2731538471::UrlsFrom","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":405,"endLine":418,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**UrlsFrom**`<T, [TOpt]>`\n\nUtility which generates a type for all valid URLs in the given\npartial URL.\n\n- you can configure whether the protocol should be _optional_\nand whether _insecure_ URL's should be allowed with `TOpt`\n- you can also switch the protocol between `http`,`ws`, or `both`\n- the default protocol is `http`","tags":[]}],"deps":["module::3970046955::ProtocolOptions","module::3018255031::PortSpecifierOptions","module::2312436937::UrlOptions","module::4114441065::EmptyObject","module::3295405837::ExpandUnion","local::363308419::_UrlsFrom","module::2535688849::TupleToUnion","module::172457424::IsStringLiteral","module::1897058928::AsString"],"refs":[],"symbolHash":1783696603,"updated":1723767904453},{"name":"UrlPort","fqn":"module::3045974454::UrlPort","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":103,"endLine":109,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**UrlPort**`<TOpt>`\n\nProduces a string literal for the _port_ designation of\nmany protocols. Basically just a `:${number}` and\nthen possibly a space.\n\n- `TOpt` allows you to state whether the port should be:\n  - `optional`\n  - `required`\n  - or `not-allowed`","tags":[]}],"deps":["module::3018255031::PortSpecifierOptions","local::363308419::_Ports"],"refs":[],"symbolHash":2929937736,"updated":1723767904446},{"name":"UrlBuilder","fqn":"module::370738562::UrlBuilder","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":336,"endLine":342,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1762127496::NetworkProtocol","module::3045542239::DomainName","module::504683037::RelativeUrl"],"refs":[],"symbolHash":1968470841,"updated":1723767904451},{"name":"Uri","fqn":"module::3785389781::Uri","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":349,"endLine":351,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Uri**\n\nA simple type to allow for any HTTP, File, or Websocket based URI.","tags":[]}],"deps":["module::1762127496::NetworkProtocol"],"refs":[],"symbolHash":2072912586,"updated":1723767904451},{"name":"UpsertKeyValue","fqn":"module::3469750716::UpsertKeyValue","filepath":"src/types/dictionary/UpsertKeyValue.ts","startLine":25,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"K","type":"K"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"**UpsertKeyValue**`<TObj,TKey,TVal>`\n\nUpdates the object `TObj` with the provided KV when keys overlap,\notherwise just adds the KV to `TObj`.\n\n**Related:** `AddKeyValue`","tags":[]}],"deps":["module::1903151425::AnyObject","module::4119350992::ObjectKey","module::3435872486::ExpandRecursively","local::3450365745::Process"],"refs":[],"symbolHash":3465735209,"updated":1723767904286},{"name":"UpperAlphaChar","fqn":"module::3299406721::UpperAlphaChar","filepath":"src/types/string-literals/character-sets/UpperAlphaChar.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**UpperAlphaChar**\n\nUppercase alphabetic character.\n\n**Related:** `AlphaChar`, `LowerAlphaChar`, `UpperAlpha`","tags":[]}],"deps":[],"refs":[],"symbolHash":1274323600,"updated":1723767904444},{"name":"Unset","fqn":"module::2809922592::Unset","filepath":"src/types/literals/Unset.ts","startLine":12,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Unset**\n\nThe **Unset** type allows you to specify a _parameter_ which\nhas **not** been set yet but then allows a user to choose any\nvalue they like.\n\n**Related:** `unset()`","tags":[]}],"deps":[],"refs":[],"symbolHash":1572434209,"updated":1723767904371},{"name":"UniqueKv","fqn":"module::3107967974::UniqueKv","filepath":"src/types/sets/UniqueKv.ts","startLine":14,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"L","type":"L"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"**UniqueKv**`<L,R>`\n\nReturns a `LeftRight` tuple containing the unique KV pairs found in `L` and `R`. Both `L` and `R` are expect to be an\nobject type of some sort.\n\n- this means that if _both_ `L` and `R` have a shared property but the values\nare different then they are considered \"unique\" for each list.\n\n**Related:** `Unique`, `UniqueKeys`","tags":[]}],"deps":["module::1903151425::AnyObject","module::1190632890::LeftRight","ext::2318994541::Exclude"],"refs":[],"symbolHash":3789927451,"updated":1723767904412},{"name":"UniqueKeysUnion","fqn":"module::457968497::UniqueKeysUnion","filepath":"src/types/sets/UniqueKeysUnion.ts","startLine":21,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"L","type":"L"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"**UniqueKeysUnion**`<L,R>`\n\nProvides a **LeftRight** tuple which articulates the \n_unique_ keys to each container's keys. \n\nThe keys for each sides unique values are represented\nas a union type.\n\n```ts\ntype Foo = { foo: 1; bar: 2 };\ntype Baz = { bar: 5; baz: 42, extra: \"why not?\" };\n// [ \"foo\", \"baz\" | \"extra\" ]\ntype U = UniqueKeys<Foo,Baz>;\n```\n\n**Related:** `UniqueKeys`","tags":[]}],"deps":["module::2872591658::Container","module::1190632890::LeftRight","ext::2318994541::Exclude"],"refs":[],"symbolHash":3126195930,"updated":1723767904413},{"name":"UniqueKeys","fqn":"module::1549420262::UniqueKeys","filepath":"src/types/sets/UniqueKeys.ts","startLine":30,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"L","type":"L"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"**UniqueKeys**`<L,R>`\n\nProvides a **LeftRight** tuple which articulates the \n_unique_ keys to each container's keys. \n\nThe keys for each sides unique values are represented\na tuple of values.\n\n```ts\ntype Foo = { foo: 1; bar: 2 };\ntype Baz = { bar: 5; baz: 42, extra: \"why not?\" };\n// LeftRight<[\"foo\"], [\"baz\", \"extra\"]>\ntype U = UniqueKeys<Foo,Baz>;\n```\n- the example above with an _object_ container is the primary use case\nbut it can be used with array's too but please note it is primarily used\nin this case to identify how the \"longer\" array has additional keys:\n```ts\ntype Short = [1,2]; // length 2\ntype Long = [3,4,5,6,7,8,9,10]; // length 8\n// LeftRight<[], [2,3,4,5,6,7]>\ntype U = UniqueKeys<Short,Long>;\n```\n\n**Related:** `UniqueKeysUnion`","tags":[]}],"deps":["module::2872591658::Container","module::1190632890::LeftRight","module::427658836::AsNumberWhenPossible","module::458105997::UnionToTuple","ext::2318994541::Exclude"],"refs":[],"symbolHash":1063747091,"updated":1723767904412},{"name":"Unique","fqn":"module::3371863236::Unique","filepath":"src/types/sets/Unique.ts","startLine":76,"endLine":87,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TDeref","type":"TDeref"}],"jsDocs":[{"comment":"**Unique**`<TList, [TDeref]>`\n\nGiven a tuple of values, this utility will reduce the tuple to\n_unique_ values in the set.\n\n- If the values are containers themselves, you can provide a `TDeref`\nto point to a property which represents the \"identity\" of that container\n- If you're comparing containers _without_ a `TDeref` property\nthen the full type signature will be used in deduplication\n\n```ts\n// [\"foo\", \"bar\"]\ntype FooBar = Unique<[\"foo\",\"foo\",\"bar\"]>;\n```","tags":[]}],"deps":["module::1715223530::IfNever","module::458105997::UnionToTuple","module::2535688849::TupleToUnion","local::1547421093::Process"],"refs":[],"symbolHash":4170278897,"updated":1723767904411},{"name":"UnionWithAll","fqn":"module::541952778::UnionWithAll","filepath":"src/types/type-conversion/UnionWithAll.ts","startLine":13,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TUnion","type":"TUnion"}],"jsDocs":[{"comment":"**UnionWithAll**`<TList,TUnion>`\n\nType utility which iterates through each element of `TList` and creates a \na union between the current value and `TUnion`.\n```ts\ntype Arr = [1,2,\"foo\"];\n// [1,2, \"foo\" | number]\ntype Num = UnionWithAll<Arr, number>;\n```","tags":[]}],"deps":[],"refs":[],"symbolHash":1110457436,"updated":1723767904503},{"name":"UnionToTuple","fqn":"module::3309640982::UnionToTuple","filepath":"src/types/type-conversion/UnionToTuple.ts","startLine":25,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"},{"name":"Last","type":"Last"}],"jsDocs":[{"comment":"UnionToTuple<1 | 2> = [1, 2].","tags":[]}],"deps":["module::2952607005::LastInUnion","ext::2318994541::Exclude"],"refs":[],"symbolHash":1298397519,"updated":1723767904492},{"name":"UnionToIntersection","fqn":"module::94684753::UnionToIntersection","filepath":"src/types/type-conversion/UnionToIntersection.ts","startLine":6,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"}],"jsDocs":[{"comment":"**UnionToIntersection**`<U>`\n\nType utility which converts a union type to an intersection","tags":[]}],"deps":[],"refs":[],"symbolHash":1476942086,"updated":1723767904489},{"name":"UnionShift","fqn":"module::1254680975::UnionShift","filepath":"src/types/type-conversion/UnionShift.ts","startLine":27,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"},{"name":"Last","type":"Last"}],"jsDocs":[{"comment":"**ShiftUnion**`<U>`\n\nTakes a type `U` and returns a tuple of the form:\n```ts\n[shifted, remaining]\n```\n\nWhere `shifted` is the union segment which has been _removed_\nand the `remaining` value is the value with that segment removed.\n\n**Note:**\n- you should not presume any explicit _ordering_ for removing elements\nfrom the union\n- when calling `ShiftUnion`<U>` where `U` is _not_ a union you will\nget the tuple `[never, U]`","tags":[]}],"deps":["module::2319218199::LastInUnion","local::2314486362::Process","module::3393438424::IsUnion","ext::2318994541::Exclude"],"refs":[],"symbolHash":1399076988,"updated":1723767904492},{"name":"UnionRetain","fqn":"module::3525770227::UnionRetain","filepath":"src/types/type-conversion/UnionFilter.ts","startLine":50,"endLine":56,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"**UnionRetain**`<U, E>`\n\nA type utility which receives a union type `U` and then eliminates\nall elements of the union which _do not extend_ `E`.\n\n**Related:** `UnionFilter`","tags":[]}],"deps":["module::3393438424::IsUnion","local::1855138854::Isolate","module::458105997::UnionToTuple"],"refs":[],"symbolHash":797931262,"updated":1723767904493},{"name":"UnionHasArray","fqn":"module::3052078812::UnionHasArray","filepath":"src/types/boolean-logic/operators/UnionHasArray.ts","startLine":20,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**UnionHasArray**`<T>`\n\nA boolean operator which tests whether T is:\n\n- indeed a _union_ type\n- and that one of the elements of the union is an array\nof some sort.","tags":[]}],"deps":["module::3393438424::IsUnion","local::2529771705::Process","module::458105997::UnionToTuple"],"refs":[],"symbolHash":3526857665,"updated":1723767904235},{"name":"UnionFromProp","fqn":"module::2052680083::UnionFromProp","filepath":"src/types/lists/UnionFromProp.ts","startLine":23,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"P","type":"P"}],"jsDocs":[{"comment":"**UnionFromProp**\n\nGiven an array of objects `<T>` and a property value `<P>`, this utility will\nreturn a _union type_ of all the potential values of the objects which have\na keyof `P`.\n\nIf an object in the array _explicitly_ doesn't have the prop in it's definition then it\nis ignored, if it is shaped to be an optional property then `undefined` will be included\nin the union.\n\n```ts\nconst data = [\n   { id: 123, color: \"blue\" },\n   { id: 456, color: \"red\" },\n ] as const;\n// 123 | 456\ntype U = UnionFromProp<typeof data, \"id\">;\n```","tags":[]}],"deps":["ext::2318994541::Record","module::3605609985::Narrowable","ext::2318994541::Readonly","module::4189225722::Get"],"refs":[],"symbolHash":370035729,"updated":1723767904325},{"name":"UnionFilter","fqn":"module::1967201372::UnionFilter","filepath":"src/types/type-conversion/UnionFilter.ts","startLine":34,"endLine":40,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"U","type":"U"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"**UnionFilter**`<U, E>`\n\nA type utility which receives a union type `U` and then eliminates\nall elements of the union which _extend_ `E`.\n\n**Related:** `UnionRetain`","tags":[]}],"deps":["module::3393438424::IsUnion","local::1855138854::Reduce","module::458105997::UnionToTuple"],"refs":[],"symbolHash":1863104287,"updated":1723767904493},{"name":"UnionElDefn","fqn":"module::635526284::UnionElDefn","filepath":"src/types/literals/Shape.ts","startLine":211,"endLine":211,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1473201238::ShapeCallback","module::2666698309::Tuple"],"refs":[],"symbolHash":2497812448,"updated":1723767904352},{"name":"UnderlyingType","fqn":"module::1015318850::UnderlyingType","filepath":"src/types/string-literals/UnderlyingType.ts","startLine":23,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**UnderlyingType**`<T>`\n\nIf `T` is a string literal which is `NumberLike` or `BooleanLike`\nthen it converts it to the appropriate numeric or boolean type.\n\nIf `T` is a tuple then it will apply this logic to all elements\nin the tuple.\n\nIn all other cases it simply proxies the type of `T` through.","tags":[]}],"deps":["local::4159841304::Process"],"refs":[],"symbolHash":932258361,"updated":1723767904442},{"name":"TzHourOffset","fqn":"module::396203007::TzHourOffset","filepath":"src/types/string-literals/Time.ts","startLine":88,"endLine":88,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1881292962::NumericChar"],"refs":[],"symbolHash":3309656800,"updated":1723767904432},{"name":"TypeTuple","fqn":"module::2027416958::TypeTuple","filepath":"src/types/runtime-types/TypeTuple.ts","startLine":15,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TType","type":"TType"},{"name":"TDesc","type":"TDesc"}],"jsDocs":[{"comment":"**TypeTuple**`<TType>`\n\nThe Tuple containing:\n - a type _representation_\n - a type guard to validate\n - (optionally) a textual description of the type\n\nThis provides a simple shorthand way of defining a type in a way\nwhich can be used in the tooling for `Type` and `TypeDefn` but does\nnot represent a full-fledged `Type<T>`.","tags":[]}],"deps":["module::3605609985::Narrowable","module::3224493375::TypeGuard"],"refs":[],"symbolHash":2153760166,"updated":1723767904404},{"name":"TypeTokenSeparator","fqn":"module::628948997::TypeTokenSeparator","filepath":"src/types/runtime-types/TypeToken.ts","startLine":175,"endLine":175,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1061926462,"updated":1723767904401},{"name":"TypeStrength","fqn":"module::1630003635::TypeStrength","filepath":"src/types/string-literals/options/TypeStrength.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**TypeStrength**\n\nSome types provide a generic which allows users to choose\nbetween a \"strong but complex\" versus a \"simpler but effective\"\ntyping.","tags":[]}],"deps":[],"refs":[],"symbolHash":2384397241,"updated":1723767904482},{"name":"TypeRequired","fqn":"module::544481950::TypeRequired","filepath":"src/types/string-literals/options/TypeRequired.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**TypeRequired**\n\nSome types provide a generic which indicate whether the type should be\nconsidered _optional_, _required_, or just fully _excluded_.","tags":[]}],"deps":[],"refs":[],"symbolHash":1306371432,"updated":1723767904482},{"name":"TypeOptions","fqn":"module::2149091033::TypeOptions","filepath":"src/types/runtime-types/Type.ts","startLine":27,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TRequired","type":"TRequired"},{"name":"TDesc","type":"TDesc"},{"name":"TUnderlying","type":"TUnderlying"},{"name":"TDefaultValue","type":"TDefaultValue"},{"name":"TValidations","type":"TValidations"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1635256379::TypeKind","module::2554918762::TypeUnderlying","module::270013585::TypeDefaultValue"],"refs":[],"symbolHash":1806548359,"updated":1723767904384},{"name":"TypeOfExtended","fqn":"module::899876299::TypeOfExtended","filepath":"src/types/runtime-types/TypeOf.ts","startLine":32,"endLine":32,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**TypeOfExtended**\n\nThe base data structures we tend think of in Javascript including some\nlike `null` and `array` which are not reported by the **typeof** operator.\n\nThis set of operators, while not natively supported by **typeof** is supported\nby type and runtime utilities in this library.\n\n**Related:** `TypeOf`, `TypeTokens`","tags":[]}],"deps":["module::1286478530::TypeOf"],"refs":[],"symbolHash":2949513250,"updated":1723767904394},{"name":"TypeHasUnderlying","fqn":"module::1225060585::TypeHasUnderlying","filepath":"src/types/runtime-types/Type.ts","startLine":252,"endLine":252,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":389985590,"updated":1723767904390},{"name":"TypeGuard","fqn":"module::341341488::TypeGuard","filepath":"src/types/functions/TypeGuard.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"U","type":"U"}],"jsDocs":[{"comment":"**TypeGuard**\n\na typing for a **TS** type-guard which evaluates an _unknown_ input\nand determines if it is of type `T`.","tags":[]}],"deps":["module::3605609985::Narrowable"],"refs":[],"symbolHash":1324832587,"updated":1723767904309},{"name":"TypedFunction","fqn":"module::3956015773::TypedFunction","filepath":"src/types/base-types/fns/TypedFunction.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"R","type":"R"}],"jsDocs":[{"comment":"**TypedFunction**\n\nA function which has basic typing information.\n\n**Related:** `AnyFunction`","tags":[]}],"deps":[],"refs":[],"symbolHash":787495943,"updated":1723767904183},{"name":"TupleToUnion","fqn":"module::518357806::TupleToUnion","filepath":"src/types/type-conversion/TupleToUnion.ts","startLine":14,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Converts a Tuple type into a _union_ of the tuple elements\n\n```ts\nconst arr = [1, 3, 5] as const;\n// 1 | 3 | 5\ntype U = TupleToUnion<typeof arr>;\n```\n\n**Note:** an empty array will be converted to a `string` type.","tags":[]}],"deps":["module::4102577001::Keys"],"refs":[],"symbolHash":245214840,"updated":1723767904489},{"name":"TupleDefn","fqn":"module::502479472::TupleDefn","filepath":"src/types/literals/Shape.ts","startLine":323,"endLine":323,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4069020921::WideTokenNames","module::1473201238::ShapeCallback"],"refs":[],"symbolHash":1284691616,"updated":1723767904355},{"name":"Tuple","fqn":"module::4184139410::Tuple","filepath":"src/types/base-types/Tuple.ts","startLine":21,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TType","type":"TType"},{"name":"TLength","type":"TLength"}],"jsDocs":[{"comment":"**Tuple**`<TType,TLength>`\n\nAs a default, a **Tuple** is represented as a readonly array of _unknown_ properties.\n\n- by expressing `TType` you can state either a constant type _or_ a list of types\n- by expressing `TLength` it will make the tuple a fixed length (assuming that `TType`\nis set to a constant value rather than as a list)\n```ts\n// readonly unknown[]\ntype T1 = Tuple;\n// readonly [string, string, string, string]\ntype T2 = Tuple<string, 4>;\n```","tags":[]}],"deps":["module::80663867::TupleRange","ext::2318994541::Readonly","module::1695495442::FixedLengthArray"],"refs":[],"symbolHash":177863459,"updated":1723767904152},{"name":"TruthyReturns","fqn":"module::4095590744::TruthyReturns","filepath":"src/types/lists/TruthyReturns.ts","startLine":18,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**TruthyReturns**`<T>`\n\nGiven a known Tuple, this utility will return a _union_ type\nthat represents the _[truthiness](https://frontend.turing.edu/lessons/module-1/js-truthy-falsy-expressions.html)_\nof each element; where:\n\n- functions are evaluated by their _return type_\n- non-functions are evaluated directly\n\n**Note:** `true` and `false` will be returned where possible but in cases where\na type can't be evaluated at design time then `boolean` will be returned.\n\n**See Also**: `ReturnTypes` and `LogicalReturns`","tags":[]}],"deps":["module::2535688849::TupleToUnion","module::540585742::TypedFunction","module::1931245833::If","module::672944827::IsTruthy","ext::2318994541::ReturnType"],"refs":[],"symbolHash":3450216646,"updated":1723767904331},{"name":"Truncate","fqn":"module::2384343606::Truncate","filepath":"src/types/string-literals/Truncate.ts","startLine":35,"endLine":57,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TMaxLen","type":"TMaxLen"},{"name":"TEllipsis","type":"TEllipsis"}],"jsDocs":[{"comment":"**Truncate**`<TStr,TMaxLen,[TEllipsis]>`\n\nType utility which ensures that strings and/or tuples beyond the length\nof `TMaxLen` are truncated at this length.\n\n- if the optional `TEllipsis` is set to **true** three\nperiod characters will be added after the truncation\nin cases where text was actually truncated.\n- if you want to create your own terminal ellipsis representation you can\nadd a string literal value to the `TEllipsis` property","tags":[]}],"deps":["module::1931245833::If","module::1364134543::IsEqual","module::3252841211::IsGreaterThan","module::490171167::StrLen","local::3331860007::_Truncate","module::3921923702::Chars","local::3331860007::Ellipsis"],"refs":[],"symbolHash":1851256693,"updated":1723767904441},{"name":"TrimRight","fqn":"module::2598167931::TrimRight","filepath":"src/types/type-conversion/TrimRight.ts","startLine":12,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"Trims off whitespace on left of string\n```ts\n// \"\\n foobar\"\ntype T = TrimRight<\"\\n foobar \\t\">;\n// string\ntype T = TrimRight<string>;\n```","tags":[]}],"deps":["module::961086858::Whitespace"],"refs":[],"symbolHash":3018694900,"updated":1723767904502},{"name":"TrimLeft","fqn":"module::697724497::TrimLeft","filepath":"src/types/type-conversion/TrimLeft.ts","startLine":12,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"Trims off whitespace on left of string\n```ts\n// \"foobar \"\ntype T = TrimLeft<\"\\n\\t  foobar \">;\n// string\ntype T = TrimLeft<string>;\n```","tags":[]}],"deps":["module::961086858::Whitespace"],"refs":[],"symbolHash":1953473142,"updated":1723767904502},{"name":"Trim","fqn":"module::4005631693::Trim","filepath":"src/types/type-conversion/Trim.ts","startLine":23,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"Trims off blank spaces, `\\n` and `\\t` characters from both sides of a _string literal_.\n```ts\n// \"foobar\"\ntype T = Trim<\"\\n\\t  foobar \">;\n// string\ntype T = Trim<string>;\n```","tags":[]}],"deps":["local::3465726652::Process"],"refs":[],"symbolHash":4186390787,"updated":1723767904502},{"name":"ToUnion","fqn":"module::3853368406::ToUnion","filepath":"src/types/type-conversion/ToUnion.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ToUnion**`<T>`\n\nConverts `T` -- which must be an array of something -- to \na Union type.\n\n**Related:** `TupleToUnion`","tags":[]}],"deps":[],"refs":[],"symbolHash":1664145938,"updated":1723767904490},{"name":"ToStringLiteral","fqn":"module::877767350::ToStringLiteral","filepath":"src/types/boolean-logic/operators/Contains.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":160586252,"updated":1723767904194},{"name":"ToStringArray","fqn":"module::3017335244::ToStringArray","filepath":"src/types/type-conversion/ToStringArray.ts","startLine":11,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ToStringArray**`<T>`\n\nReceives a tuple of values and converts each item\ninto a _string_ value using the `ToString<T>` utility.","tags":[]}],"deps":["module::2666698309::Tuple","module::577891714::ToString"],"refs":[],"symbolHash":4237016319,"updated":1723767904504},{"name":"ToString","fqn":"module::1625637843::ToString","filepath":"src/types/type-conversion/ToString.ts","startLine":23,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ToString**\n\nConverts _any_ type into a string representation.\nThis utility works as advertised but is in early stages\nso expect it to be refined over time.\n\n**Related:** `AsString`","tags":[]}],"deps":["module::1931245833::If","module::82688423::IsNumericLiteral","module::1272639998::IsBooleanLiteral","module::1274869242::IsUndefined","module::1903151425::AnyObject","module::1228063573::IsVueRef","module::2597507937::Concat","module::3605609985::Narrowable","module::3580587573::AnyFunction"],"refs":[],"symbolHash":389310630,"updated":1723767904490},{"name":"ToPhoneFormat","fqn":"module::2825658979::ToPhoneFormat","filepath":"src/types/string-literals/character-sets/phone/ToPhoneFormat.ts","startLine":36,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TPhone","type":"TPhone"},{"name":"TFormat","type":"TFormat"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1164321170::PhoneFormat","module::172457424::IsStringLiteral","module::3537681521::PhoneNumber","local::755223344::FormatLookup","module::1939532401::ErrorCondition"],"refs":[],"symbolHash":2083014404,"updated":1723767904475},{"name":"ToNumericArray","fqn":"module::171396876::ToNumericArray","filepath":"src/types/numeric-literals/ToNumericArray.ts","startLine":22,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"**ToNumericArray**`<TList>`\n\nUtility which accepts an array of numeric values _or_ a numeric\nstring literal and ensures that each element is made into a numeric value.\n\n- wide `number` types are fine and will be preserved as such\n- numeric string literals will be converted to a narrow numeric type if\npossible","tags":[]}],"deps":["module::2666698309::Tuple","module::2747467799::IsReadonlyArray","ext::2318994541::Readonly","local::2002753161::_Convert"],"refs":[],"symbolHash":3269974241,"updated":1723767904377},{"name":"ToNumber","fqn":"module::3625294363::ToNumber","filepath":"src/types/type-conversion/ToNumber.ts","startLine":23,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"**ToNumber**`<T>`\n\n- Converts `T` into a numeric type:\n   - if `T` is a Scalar/Object it's converted to a number where possible\n   - if `T` is an array then each element will be converted to a number where possible\n   - any non-numeric content which can not be converted to a number will be convert to `never`\n   - a number or a numeric array will be proxied through \"as is\"","tags":[]}],"deps":["module::4041511888::IsTuple","module::1647154577::ToNumericArray","module::3686363877::Throw","module::1931245833::If","module::2376902257::Or","module::4187212716::IsTrue","module::1364134543::IsEqual","module::1567416713::IsFalse","module::1412066075::IsArray"],"refs":[],"symbolHash":446632505,"updated":1723767904491},{"name":"TokenLiteralType","fqn":"module::3211012081::TokenLiteralType","filepath":"src/types/runtime-types/TypeToken.ts","startLine":330,"endLine":332,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1364917418::TypeToken","module::3947928683::ParseToken"],"refs":[],"symbolHash":468898140,"updated":1723767904404},{"name":"TokenKind","fqn":"module::1004143402::TokenKind","filepath":"src/types/runtime-types/TypeToken.ts","startLine":320,"endLine":320,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**TokenKind**`<T>`\n\nReveals the _kind_ of a given `TypeToken`","tags":[]}],"deps":["module::1364917418::TypeToken","local::1169536605::Kind"],"refs":[],"symbolHash":2789700366,"updated":1723767904403},{"name":"TokenizeStringLiteral","fqn":"module::2977895504::TokenizeStringLiteral","filepath":"src/types/runtime-types/TokenizeStringLiteral.ts","startLine":63,"endLine":65,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**TokenizeStringLiteral**`<T>`\n\nType utility which receives a list of _tokens_ which are intended\nto represent the underlying type of a string literal. This utility\nwill ensure that known tokens -- those delimited by `<` and `>` symbols\nare maintained but that any _string literals_ are prefixed with \"literal:\".\n\n- a wide _number_ or _boolean_ type will be converted to `${number}` and `${boolean}`\n- literal values for number and boolean will be converted to a string using `ToString<T>`\n\n**Related:** `ToStringLiteral<T>`","tags":[]}],"deps":["local::4232818478::_Tokenize"],"refs":[],"symbolHash":201686809,"updated":1723767904396},{"name":"TokenBaseType","fqn":"module::2024192752::TokenBaseType","filepath":"src/types/runtime-types/TypeToken.ts","startLine":327,"endLine":327,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**TokenBaseType**`<T>`\n\nReveals the _base_ type of a given `TypeToken`","tags":[]}],"deps":["module::1364917418::TypeToken","module::3947928683::ParseToken"],"refs":[],"symbolHash":463191357,"updated":1723767904403},{"name":"ToJsonValue","fqn":"module::4026436149::ToJsonValue","filepath":"src/types/type-conversion/ToJsonValue.ts","startLine":60,"endLine":74,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2666698309::Tuple","local::1867752411::AsJsonArray","module::3860303104::As"],"refs":[],"symbolHash":269427073,"updated":1723767904504},{"name":"ToInteger","fqn":"module::3440121666::ToInteger","filepath":"src/types/numeric-literals/ToInteger.ts","startLine":39,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"**ToInteger**`<T>`\n\nType utility which converts a _number_ (or numeric string \nliteral) to an _integer_ value.\n\n- the optional `TOp` generic provides methods for converting\na float to integer but the default is just to remove the\ndecimal value from the number (aka, \"truncate\").","tags":[]}],"deps":["module::1905651550::ToIntegerOp","local::2230825727::EnsureKind","local::2230825727::Truncate","local::2230825727::Round"],"refs":[],"symbolHash":4278895876,"updated":1723767904377},{"name":"ToFn","fqn":"module::2526616058::ToFn","filepath":"src/types/functions/ToFn.ts","startLine":16,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ToFn**`<T>`\n\nEnsures that resultant type is a function, where the mapping is:\n\n - `AnyFunction` - function signature maintained\n - `FnMeta` - is converted to a precise function type\n - `never` _or_ `ErrorCondition` - returned \"as is\"\n \nAll other values will return a function of the form `() => T`\n\n**Related:** `AsFn`","tags":[]}],"deps":["module::3580587573::AnyFunction","module::1086143214::FnMeta","module::80185219::IsNever"],"refs":[],"symbolHash":2291690433,"updated":1723767904311},{"name":"ToCSV","fqn":"module::4002112322::ToCSV","filepath":"src/types/lists/ToCSV.ts","startLine":26,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTuple","type":"TTuple"},{"name":"TReplace","type":"TReplace"}],"jsDocs":[{"comment":"**ToCSV**`<TTuple,[TReplace]>`\n\nConverts a tuple into a CSV string. For any elements\nin the tuple which are strings the `,` character will\nbe replaced with the value of `TReplace` (which defaults\nto `<comma>`).","tags":[]}],"deps":["module::2666698309::Tuple","local::2893570918::Process"],"refs":[],"symbolHash":2998415933,"updated":1723767904339},{"name":"ToContainer","fqn":"module::3055054145::ToContainer","filepath":"src/types/type-conversion/ToContainer.ts","startLine":27,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ToContainer**`<T>`\n\nProvides a narrowing feature for union types which _include_ the\noption to be a `Container` but might also be a Scalar value or \na function.\n\nHowever, unlike a simple intersection with `readonly any[] | AnyObject`,\nthis type will detect where there is no overlap and instead of returning\na `never` value it will just convert to `AnyObject | AnyArray`:\n\nIf the union of `T` with `Exclude<T, Scalar| undefined | AnyFunction>`\n- is a _container_ than we're done we simply apply the Exclude and return the type\n- is a **Scalar** value or _undefined_ we just convert to the generic `AnyObject | AnyArray`\n- if we resolve to `unknown` or `any` then all we can logically do is wrap it into a readonly array (e.g. `[unknown]` or `[any]` respectively).","tags":[]}],"deps":["module::1715223530::IfNever","ext::2318994541::Exclude","module::3252133680::Scalar","module::3580587573::AnyFunction","module::1903151425::AnyObject","module::14236863::AnyArray","module::4258457119::IfEqual"],"refs":[],"symbolHash":1813922912,"updated":1723767904503},{"name":"ToChoices","fqn":"module::3406810293::ToChoices","filepath":"src/types/literals/Choices.ts","startLine":69,"endLine":73,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3252133680::Scalar","module::1532643815::Choice","module::464682951::ChoiceCallback","local::1388686635::ProcessChoices"],"refs":[],"symbolHash":471019827,"updated":1723767904360},{"name":"ToBoolean","fqn":"module::3260446929::ToBoolean","filepath":"src/types/type-conversion/ToBoolean.ts","startLine":27,"endLine":47,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ToBoolean**`<T>`\n\nType utility which converts `T` into a boolean type regardless of\n`T`'s underlying type.\n\n- _boolean_ values are proxied through\n- _scalar_ values are tested with the JS Truthy test to return a true/false value\n- _containers_ with no keys evaluate to false, with keys to true\n- _never_, _null_, and _undefined_ map to false\n- all other values return the wide \"boolean\" type","tags":[]}],"deps":["module::1931245833::If","module::80185219::IsNever","module::3252133680::Scalar","module::672944827::IsTruthy","module::3092812128::IsFalsy","module::3475651727::IsLength","module::4102577001::Keys","module::1903151425::AnyObject","module::4076869199::AsRecord","module::488874576::Extends"],"refs":[],"symbolHash":3165527711,"updated":1723767904492},{"name":"TLD","fqn":"module::3747514117::TLD","filepath":"src/types/string-literals/character-sets/DomainName.ts","startLine":17,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**TLD**\n\nA union type of all of the common top-level domains along with many\nothers which are starting to be used. This is _not_ meant to be\ncomprehensive.","tags":[]}],"deps":["module::13543941::Mutable","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":739904985,"updated":1723767904444},{"name":"TimeLike","fqn":"module::1012401248::TimeLike","filepath":"src/types/string-literals/Time.ts","startLine":115,"endLine":115,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**TimeLike**\n\nA representation of _time_ values which aims to keep the typing\nopen to as many formats as possible but at the cost being somewhat\nless detailed in it's typing. \n\n**Related:** `Time`, `MilitaryTime`, `CivilianTime`","tags":[]}],"deps":["module::2320530712::PlusMinus"],"refs":[],"symbolHash":3189235625,"updated":1723767904432},{"name":"Time","fqn":"module::143692903::Time","filepath":"src/types/string-literals/Time.ts","startLine":316,"endLine":333,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TResolution","type":"TResolution"},{"name":"TNomenclature","type":"TNomenclature"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**Time**`<TResolution,[TNomenclature], [TOpts]>`\n\nA _simplified_ type for Time which accepts military and civilian\nnomenclature as well as `HH:MM` and `HH:MM:SS` resolutions. \n\nYou can use the `TNomenclature` and `TResolution` generics to constrain\nwhat is allowed (and further simplify the type).\n\n**Related:** `MilitaryTime`, `CivilianTime`, `TimeLike`","tags":[]}],"deps":["module::245352994::TimeResolution","module::213064381::TimeNomenclature","module::4237661426::CivilianTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::4145234592::TimeInMinutes","module::3822532463::TimeInSeconds","module::3707014037::TimeInMilliseconds"],"refs":[],"symbolHash":2276896863,"updated":1723767904440},{"name":"Throw","fqn":"module::1689591575::Throw","filepath":"src/types/errors/Throw.ts","startLine":46,"endLine":58,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TMessage","type":"TMessage"},{"name":"TUtility","type":"TUtility"},{"name":"TRest","type":"TRest"},{"name":"TStack","type":"TStack"}],"jsDocs":[{"comment":"**Throw**`<TKind,[TMessage],[TUtility],[TRest]>`\n\nAllows a user to conveniently create a well formed `ErrorCondition`\nwhich prioritizes:\n\n- `TKind` - is **required** and gives the error a dasherized name\nwhich a caller can respond to. It provides a critical \"grouping\" feature.\n- `TMessage` - provides a user friendly message about the error\n- `TUtility` - the name of the _type utility_ in which this condition\nis being raised.\n\nThe final parameter is `TRest` which provides a key/value dictionary --\ndefined by `TypeErrorInfo` -- which can further describe the error.","tags":[]}],"deps":["module::3926596428::TypeErrorInfo","module::4114441065::EmptyObject","local::2438819323::HandleStack","module::1939532401::ErrorCondition"],"refs":[],"symbolHash":3814367861,"updated":1723767904297},{"name":"TakeProp","fqn":"module::836769301::TakeProp","filepath":"src/types/dictionary/TakeProp.ts","startLine":9,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TProp","type":"TProp"},{"name":"TElse","type":"TElse"}],"jsDocs":[{"comment":"**TakeProp**`<TTest,TProp,[TElse]>`\n\nTakes the property `TTest` and determines if `TProp` is a key of\nof `TTest`. If it is it will return `TTest[TProp]` otherwise `TElse`\n(which is defaulted to _undefined_).","tags":[]}],"deps":["ext::2318994541::PropertyKey"],"refs":[],"symbolHash":1128537755,"updated":1723767904288},{"name":"TakeLast","fqn":"module::1662823699::TakeLast","filepath":"src/types/lists/TakeLast.ts","startLine":23,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TLen","type":"TLen"},{"name":"THandle","type":"THandle"}],"jsDocs":[{"comment":"**TakeLast**`<TContent,TLen,[THandle]>`\n\nTakes the last `TLen` items from `TContent` and discards the rest.\n\nNote:\n- by default if `TLen` is larger than the size of `TContent` this\nis fine and instead of getting precisely `TLen` elements you'll get\n`TLen` element when available otherwise just the full tuple length\nof `TContent`\n- if you want a precise length, then set `THandle` to \"throw\" and\nan error will be thrown.","tags":[]}],"deps":["module::71757441::TakeFirst","module::3335621540::Reverse"],"refs":[],"symbolHash":2249425644,"updated":1723767904340},{"name":"TakeFirst","fqn":"module::2468372940::TakeFirst","filepath":"src/types/lists/TakeFirst.ts","startLine":50,"endLine":67,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TLen","type":"TLen"},{"name":"THandle","type":"THandle"}],"jsDocs":[{"comment":"**TakeFirst**`<TContent,TLen,[THandle]>`\n\nTakes the first `TLen` items from `TContent` and discards the rest.\n\nNote:\n- by default if `TLen` is larger than the size of `TContent` this\nis fine and instead of getting precisely `TLen` elements you'll get\n`TLen` element when available otherwise just the full tuple length\nof `TContent`\n- if you want a precise length, then set `THandle` to \"throw\" and\nan error will be thrown.","tags":[]}],"deps":["module::1931245833::If","module::3252841211::IsGreaterThan","module::3686363877::Throw","module::1364134543::IsEqual","local::3682292868::Process"],"refs":[],"symbolHash":1132378716,"updated":1723767904340},{"name":"SymbolKind","fqn":"module::2540984194::SymbolKind","filepath":"src/types/errors/StackTrace.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2292101148,"updated":1723767904294},{"name":"Surround","fqn":"module::4077570079::Surround","filepath":"src/types/string-literals/Surround.ts","startLine":30,"endLine":48,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TPrefix","type":"TPrefix"},{"name":"TPostfix","type":"TPostfix"}],"jsDocs":[{"comment":"**Surround**`<TContent,TPrefix,TPostfix>`\n\nReceives content -- either a string or an array of strings -- and then\nproceeds to _surround_ the content with the prefix and postfix content.\n\n```ts\n// \"(hi)\"\ntype T1 = Surround<\"hi\", \"(\", \")\">;\n// [ \"<one>\", \"<two>\" ]\ntype T2 = Surround<[\"one\",\"two\"], \"<\",\">\">;\n```","tags":[]}],"deps":["local::3584399716::ProcessEach","module::559385431::ToStringArray","local::3584399716::Process"],"refs":[],"symbolHash":3739410751,"updated":1723767904429},{"name":"SuggestNumeric","fqn":"module::4085531412::SuggestNumeric","filepath":"src/types/string-literals/Suggest.ts","startLine":51,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**SuggestNumeric**`<T>`\n\nType utility that helps to build a enumerated set\nof numeric literals which _could_ be the value for\na number based property but _allows_ a number that\nis not part of the suggestion to be typed in too.","tags":[]}],"deps":[],"refs":[],"symbolHash":2670954013,"updated":1723767904427},{"name":"SuggestIpAddress","fqn":"module::1539229430::SuggestIpAddress","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":161,"endLine":161,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SuggestIpAddress**\n\nSome simple examples of IP addresses which can be given as a\nsuggested set of string where people need to enter an **IPv4**\naddress.","tags":[]}],"deps":["module::3356276222::Suggest"],"refs":[],"symbolHash":1559730086,"updated":1723767904457},{"name":"SuggestHexadecimal","fqn":"module::1538774173::SuggestHexadecimal","filepath":"src/types/string-literals/character-sets/Hexadecimal.ts","startLine":27,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"A string suggestion for hexadecimal types","tags":[]}],"deps":["module::3356276222::Suggest"],"refs":[],"symbolHash":820650057,"updated":1723767904459},{"name":"Suggest","fqn":"module::3711941922::Suggest","filepath":"src/types/string-literals/Suggest.ts","startLine":37,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Suggest**`<T>`\n\nType utility that helps to build a enumerated set\nof string literals which _could_ be the value for\na string based property but _allows_ a string that\nis not part of the suggestion to be typed in too.\n\n- `T` can be a _union_ of string literals or an\n_array_ of string literals.\n- If T is a wide string then we must return\njust a wide string as no suggestions are possible","tags":[]}],"deps":["module::736584612::ScalarNotSymbol","local::3682778206::SuggestString"],"refs":[],"symbolHash":2305553801,"updated":1723767904427},{"name":"Subtract","fqn":"module::1791297026::Subtract","filepath":"src/types/numeric-literals/Subtract.ts","startLine":79,"endLine":84,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**Subtract**`<A,B>`\n\nSubtracts the value of `B` _from_ `A`.","tags":[]}],"deps":["module::3330042255::NumberLike","module::2376902257::Or","module::391074403::IsWideType","local::3351532202::Process"],"refs":[],"symbolHash":3646061903,"updated":1723767904376},{"name":"StructuredStringType","fqn":"module::216083355::StructuredStringType","filepath":"src/types/runtime-types/SimpleType.ts","startLine":137,"endLine":137,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":964064177,"updated":1723767904409},{"name":"StrongMapTransformer","fqn":"module::323608228::StrongMapTransformer","filepath":"src/types/lists/ConvertAndMap.ts","startLine":116,"endLine":138,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"M","type":"M"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::398229324::StrongMap","module::3813498580::StrongMapTypes","module::3560705549::MapCoverage","ext::2318994541::ReturnType","ext::2318994541::Record"],"refs":[],"symbolHash":1497612974,"updated":1723767904336},{"name":"StrLen","fqn":"module::2218146725::StrLen","filepath":"src/types/string-literals/StrLen.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**StrLen**`<T>`\n\nProvides the length of a string if T is a string literal,\notherwise just returns `number` type.","tags":[]}],"deps":["local::4139926233::Compute"],"refs":[],"symbolHash":4194220382,"updated":1723767904429},{"name":"StripWhile","fqn":"module::2559694582::StripWhile","filepath":"src/types/string-literals/StripUntil.ts","startLine":53,"endLine":56,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**StripWhile**`<TContent,TComparator>`\n\nStrip characters from the start of `TContent` _while_ those\ncharacters extend `TComparator`.","tags":[]}],"deps":["local::121573462::Process","module::3921923702::Chars"],"refs":[],"symbolHash":2820446471,"updated":1723767904442},{"name":"StripUntil","fqn":"module::221857003::StripUntil","filepath":"src/types/string-literals/StripUntil.ts","startLine":40,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**StripUntil**`<TContent,TComparator>`\n\nStrip characters from the start of `TContent` _until_ a\ncharacter extends `TComparator`.","tags":[]}],"deps":["local::121573462::Process","module::3921923702::Chars"],"refs":[],"symbolHash":3586411352,"updated":1723767904442},{"name":"StripTrailing","fqn":"module::1636757781::StripTrailing","filepath":"src/types/string-literals/StripTrailing.ts","startLine":26,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TStrip","type":"TStrip"}],"jsDocs":[{"comment":"**StripEnding**`<TContent, TStrip>`\n\nWill strip off `TStrip` from the ending of `TContent` when\nit is found.\n\n```ts\ntype T = \"Hello World\";\ntype U = \" World\";\n// \"Hello\"re\ntype R = StripEnding<T,U>;\n```","tags":[]}],"deps":["module::116081596::AsNumber","local::324263790::Process"],"refs":[],"symbolHash":310471755,"updated":1723767904428},{"name":"StripSurround","fqn":"module::1446699620::StripSurround","filepath":"src/types/string-literals/StripSurround.ts","startLine":25,"endLine":34,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TSurround","type":"TSurround"}],"jsDocs":[{"comment":"**StripSurround**`<TContent, TSurround>`\n\nStrips the content found in `TSurround` from the leading or trailing\nedge of the content passed in as `TContent`.\n\n```ts\n// \"Hi there\"\ntype Hello = StripSurround<\"(Hi there)\", \"(\" | \")\">;\n```","tags":[]}],"deps":["module::391074403::IsWideType","local::304748723::Process","module::749589545::AsStringUnion","module::116081596::AsNumber"],"refs":[],"symbolHash":2307656174,"updated":1723767904427},{"name":"StripLeading","fqn":"module::2623995943::StripLeading","filepath":"src/types/string-literals/StripLeading.ts","startLine":33,"endLine":48,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TStrip","type":"TStrip"}],"jsDocs":[{"comment":"**StripLeading**`<T, U>`\n\nWill strip off of `T` the starting string defined by `U` when\nboth are string literals.\n```ts\ntype T = \"Hello World\";\ntype U = \"Hello \";\n// \"World\"\ntype R = StripLeading<T,U>;\n```\n\nNote:\n  - if `T` is a non-string type then no transformation will be done\n  - same applies to `U`","tags":[]}],"deps":["module::116081596::AsNumber","local::744555623::Process","module::749589545::AsStringUnion"],"refs":[],"symbolHash":1954462112,"updated":1723767904427},{"name":"StripChars","fqn":"module::253762136::StripChars","filepath":"src/types/type-conversion/StripChars.ts","startLine":37,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TStrip","type":"TStrip"}],"jsDocs":[{"comment":"**StripChars**`<TContent,TStrip>`\n\nConverts a string `TContent` into a string with all\nof the characters in `TStrip` removed.\n\n- `TStrip` must be a single character or a union\nof single characters or this will throw\n`ErrorCondition<\"invalid-strip-char\">`","tags":[]}],"deps":["module::2376902257::Or","module::391074403::IsWideType","module::2597507937::Concat","local::4100301865::Process","module::3921923702::Chars"],"refs":[],"symbolHash":1925681334,"updated":1723767904505},{"name":"StripBefore","fqn":"module::3635823190::StripBefore","filepath":"src/types/string-literals/StripBefore.ts","startLine":15,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TBreak","type":"TBreak"}],"jsDocs":[{"comment":"**StripBefore**`<TStr, TBreak>`\n\nReceives a string `TStr` and truncates all characters in\nthe first occurrence of `TBreak` and all remaining chars.\n\n### Example\n```ts\n// \"world\"\ntype T = StripBefore<\"hello world\", \" \">;\n```","tags":[]}],"deps":["module::172457424::IsStringLiteral"],"refs":[],"symbolHash":3624615071,"updated":1723767904428},{"name":"StripAfter","fqn":"module::2216780185::StripAfter","filepath":"src/types/string-literals/StripAfter.ts","startLine":15,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TBreak","type":"TBreak"}],"jsDocs":[{"comment":"**StripAfter**`<TStr, TBreak>`\n\nReceives a string `TStr` and truncates all characters in\nthe first occurrence of `TBreak` and all remaining chars.\n\n### Example\n```ts\n// \"hello\"\ntype T = StripAfter<\"hello world\", \" \">;\n```","tags":[]}],"deps":["module::172457424::IsStringLiteral"],"refs":[],"symbolHash":2077175541,"updated":1723767904428},{"name":"StringLiteralToken","fqn":"module::3871430796::StringLiteralToken","filepath":"src/types/runtime-types/StringLiteralToken.ts","startLine":43,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**StringLiteralToken**\n\nTokens are broken up into three types:\n\n1. **bespoke** literal values can also be specified by prefixing with\n`literal:` and then the literal value.\n2. **union** literal values can be expressed as `union:[CSV]`\n3. **known** literals are surrounded by `<` and `>` characters and\nrepresent a known type definition which is valid for a string\nliteral.\n\n   - within known literals there are three char \"scopes\":\n       - `<string>` effectively allows any number and type of chars\n       - `<number>` and `<boolean>` allow for as many characters as is required for completing the type\n       - all others -- like `<digit>`, `<letter>`, etc. -- are just a single character\n   - known literals can add the `| opt` modifier to become intersected with `| \"\"` which makes them an optional condition. Note that only `<string>` does _not_ allow this as this optionality provides no additional optionality.","tags":[]}],"deps":["module::3287164069::BespokeLiteral","local::1549236178::OptionalOptModifier"],"refs":[],"symbolHash":3666136353,"updated":1723767904396},{"name":"StringLiteralFromTuple","fqn":"module::4125151651::StringLiteralFromTuple","filepath":"src/types/type-conversion/StringLiteralFromTuple.ts","startLine":35,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**StringLiteralFromTuple**`<T>`\n\nReceives a tuple and creates a string literal type based\non the sequence of elements in the tuple.\n\n```ts\n// `${string}(${number})${string}`\ntype Lit=StringLiteralFromTuple<[\n string, \"(\", number, \")\", string\n]>;\n```","tags":[]}],"deps":["local::2614486391::LitString"],"refs":[],"symbolHash":1866203421,"updated":1723767904507},{"name":"StringLength","fqn":"module::2805781396::StringLength","filepath":"src/types/type-conversion/StringLength.ts","startLine":10,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"Type utility that provides the _length_ of a given string type in a way which\nis _not_ limited to TS's recursive string length of roughly 48.\n\n```ts\n// 3\ntype Three = StringLength<\"foo\">;\n```","tags":[]}],"deps":[],"refs":[],"symbolHash":504382998,"updated":1723767904502},{"name":"StringKeys","fqn":"module::3247064067::StringKeys","filepath":"src/types/dictionary/StringKeys.ts","startLine":6,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**StringKeys**`<T>`\n\nCreates a union type of all the _string_ keys in `T`.","tags":[]}],"deps":["ext::2318994541::Readonly"],"refs":[],"symbolHash":1326421599,"updated":1723767904259},{"name":"StringDelimiter","fqn":"module::2580920437::StringDelimiter","filepath":"src/types/string-literals/character-sets/StringDelimiter.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Characters which typically are used to separate words (but not including a space)","tags":[]}],"deps":[],"refs":[],"symbolHash":4071375184,"updated":1723767904457},{"name":"StartsWith","fqn":"module::2162509370::StartsWith","filepath":"src/types/boolean-logic/operators/StartsWith.ts","startLine":43,"endLine":52,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**StartsWith**<TValue, TComparator>\n\nA type utility which checks whether `TValue` _starts with_ the\nvalue of `TComparator`.\n\n- numeric values for `TValue` will be converted into string literals\nprior to comparison\n- a tuple value in `TComparator` is allowed and will test whether\n_any_ of the patterns start `TValue`\n- a union type for `TComparator` is allowed so long as it's only for a single character\n   - this can be much more type efficient for unions with lots of characters\n   - if you need larger pattern matches then use a Tuple for `TComparator`","tags":[]}],"deps":["module::391074403::IsWideType","module::1364134543::IsEqual","local::1038600572::Process","module::1897058928::AsString"],"refs":[],"symbolHash":1483972180,"updated":1723767904200},{"name":"StandardMark","fqn":"module::3780488492::StandardMark","filepath":"src/types/string-literals/character-sets/quotation-marks/StandardMark.ts","startLine":22,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**StandardMark**\n\nEither a single or double _non_-smart quotation mark\n\n**Related:** `SmartMark`, `QuotationMark`","tags":[]}],"deps":["module::3438789075::SingleQuote","module::197467689::DoubleQuote"],"refs":[],"symbolHash":3028785187,"updated":1723767904471},{"name":"StackTrace","fqn":"module::4104539031::StackTrace","filepath":"src/types/errors/StackTrace.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2740749792::StackFrame"],"refs":[],"symbolHash":1237195566,"updated":1723767904294},{"name":"Split","fqn":"module::3148264071::Split","filepath":"src/types/string-literals/Split.ts","startLine":107,"endLine":113,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TSep","type":"TSep"},{"name":"TPolicy","type":"TPolicy"}],"jsDocs":[{"comment":"**Split**`<TContent,TSep,[TPolicy]>`\n\nType conversion utility which receives a string `TContent`,\nand _splits_ it into multiple string elements based on `TSep`.\n\n- `TSep` can be a _string_, a _union_ of string literals, or a tuple of strings\n- typically you want to have the `TSep` _omitted_ from the result elements\nbut you can opt to include them by changing `TPolicy` to \"include\"","tags":[]}],"deps":["local::3588172585::UnionPolicy","module::172457424::IsStringLiteral","module::3860303104::As","local::3588172585::PreProcess"],"refs":[],"symbolHash":291345154,"updated":1723767904429},{"name":"SpecialChar","fqn":"module::830405000::SpecialChar","filepath":"src/types/string-literals/character-sets/SpecialChar.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SpecialChar**","tags":[]}],"deps":[],"refs":[],"symbolHash":1920117709,"updated":1723767904458},{"name":"Something","fqn":"module::1529452982::Something","filepath":"src/types/base-types/Something.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Something**\n\nThis type represents **any** type _other than_ `null` or `undefined`  (aka, the `Nothing` types).\n\n**Note:** _this is equivalent to the `{}` type (which is often a surprise to many)_","tags":[]}],"deps":[],"refs":[],"symbolHash":921465675,"updated":1723767904148},{"name":"SomeExtend","fqn":"module::625871668::SomeExtend","filepath":"src/types/boolean-logic/operators/SomeExtend.ts","startLine":23,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TExtend","type":"TExtend"}],"jsDocs":[{"comment":"**SomeExtend**`<TList, TExtend>`\n\nBoolean util which checks whether **some** of the elements\nin `TList` _extend_ `TExtend`.","tags":[]}],"deps":["local::39876281::SomeAcc"],"refs":[],"symbolHash":3845052796,"updated":1723767904197},{"name":"SomeEqual","fqn":"module::1700436965::SomeEqual","filepath":"src/types/boolean-logic/operators/SomeEqual.ts","startLine":12,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TVal","type":"TVal"}],"jsDocs":[{"comment":"**SomeEqual**`<TVal, TList>`\n\nA type utility which tests whether `TVal` is exactly equal to an array of values\nstored in `TList`. Possible results are `true`, `false`. A wide `boolean` type\nis not possible as equality operator can always be evaluated at design time.\n\n**See Also:** `SomeExtend` and `IfSomeEqual`","tags":[]}],"deps":["module::4258457119::IfEqual","module::2295046820::First","module::798798449::AfterFirst"],"refs":[],"symbolHash":1694498667,"updated":1723767904197},{"name":"Some","fqn":"module::1443239612::Some","filepath":"src/types/boolean-logic/combinators/Some.ts","startLine":30,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TOp","type":"TOp"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2872591658::Container","module::2376902257::Or","module::1364134543::IsEqual","module::3330042255::NumberLike","local::3944463141::Process","module::186693758::Dictionary","module::3974819915::Values"],"refs":[],"symbolHash":1472097593,"updated":1723767904240},{"name":"SnakeCase","fqn":"module::3367517597::SnakeCase","filepath":"src/types/string-literals/casing/SnakeCase.ts","startLine":29,"endLine":59,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"},{"name":"TPreserve","type":"TPreserve"}],"jsDocs":[{"comment":"**SnakeCase**`<TString,TPreserve>`\n\nConverts a string literal type to _snake_case_ and optionally preserves\nsurrounding whitespace.\n```ts\n// \"foo_bar\"\ntype T = SnakeCase<\"fooBar\">;\ntype T = SnakeCase<\"\\n foo bar \\t\">;\n```","tags":[]}],"deps":["module::1931245833::If","module::4187212716::IsTrue","module::3144135218::DashUppercase","ext::2318994541::Uncapitalize","local::2588076885::SpaceToDash","module::2678895335::Trim","module::3521220041::LowerAllCaps","module::2597507937::Concat","module::62880555::LeftWhitespace","ext::2318994541::Lowercase","module::1766334850::RightWhitespace"],"refs":[],"symbolHash":2789748576,"updated":1723767904482},{"name":"SmartMarkPlus","fqn":"module::981840220::SmartMarkPlus","filepath":"src/types/string-literals/character-sets/quotation-marks/SmartMark.ts","startLine":28,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SmartMarkPlus**\n\nIncludes **all** \"smart\" quotation marks for both opening and\nclosing quotations.\n\n```md\ncommon: “” | ‘’\nspecialized: 〝〞| ❛❜ | ❝❞ | 〟＂\n---\n```\n\n**Related:** `SmartMark`, `StandardMark`, `QuotationMark`,\n`OpeningMark`, `ClosingMark`","tags":[]}],"deps":["module::3708868106::SmartMark","module::124669777::LeftReversedDoublePrime","module::1882947382::RightReversedDoublePrime","module::3687251758::LeftHeavySingleTurned","module::3571837161::RightHeavySingleTurned","module::116055513::LeftHeavyDoubleTurned","module::3317995668::RightHeavyDoubleTurned","module::3200871420::FullWidthQuotation"],"refs":[],"symbolHash":1411327080,"updated":1723767904471},{"name":"Slice","fqn":"module::1844909609::Slice","filepath":"src/types/lists/Slice.ts","startLine":121,"endLine":131,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TStart","type":"TStart"},{"name":"TLen","type":"TLen"}],"jsDocs":[{"comment":"**Slice**`<TList, TStart, TLen>`\n\nProvides a slice of a tuple or a string.\n\n- negative indexes for `TEnd` can be used\n- `TStart` defaults to 0\n- `TLen` defaults to the all the remaining elements\nbut can be any amount; if you use negative values this\nwill drop that many values off the end of the tuple","tags":[]}],"deps":["module::2597507937::Concat","module::3860303104::As","local::3319298851::PreProcess","module::3921923702::Chars"],"refs":[],"symbolHash":2490706244,"updated":1723767904330},{"name":"SingularNoun","fqn":"module::1810180561::SingularNoun","filepath":"src/types/string-literals/character-sets/SingularNoun.ts","startLine":31,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**SingularNoun**`<T>`\n\nType utility which provides an _identity_ mapping to `T` for singular nouns but maps\nto _never_ in all other cases.\n\nSingular nouns are words which contain only `Alpha` characters and end in one of the\ncharacter sequences specified in `SingularNounEnding`.\n\n```ts\n// never\ntype T1 = SingularNoun<\"foobar\">;\n// rush\ntype T2 = SingularNoun<\"rush\">;\n```\n\n**Related:** `IsSingularNoun`","tags":[]}],"deps":["module::2313685889::SingularNounEnding","module::1931245833::If","module::2109379844::AllExtend","module::3921923702::Chars","module::2392759183::AlphaChar"],"refs":[],"symbolHash":1424480632,"updated":1723767904460},{"name":"SingletonToken","fqn":"module::3279724076::SingletonToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":141,"endLine":146,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SingletonToken**\n\nShapes:\n- Wide: `<<string>>` or `<<number>>`\n- Literal: `<<string::{string}>` or `<number::{number}>`\n- Union Literal: `<<string::{UnionToken}>>`\n- Sets: `<<string-set::[set]::[...params]>`","tags":[]}],"deps":["module::1329764664::TypeTokenSingletons","module::510054819::UnionToken"],"refs":[],"symbolHash":3985193084,"updated":1723767904400},{"name":"SimplifyObject","fqn":"module::3018566867::SimplifyObject","filepath":"src/types/dictionary/SimplifyObject.ts","startLine":9,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Often when mutating the shape of an object you will end up with the union of a number of\n`Record<string, x>` and `Record<string, y>` which is messy to look at and take away meaning.\n\nThis type utility will cleanup an object and return a simple dictionary definition for it.","tags":[]}],"deps":["module::3435872486::ExpandRecursively","module::1904522907::UnionToIntersection"],"refs":[],"symbolHash":4124643865,"updated":1723767904255},{"name":"SimpleUnionToken","fqn":"module::4226237053::SimpleUnionToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":54,"endLine":54,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SimpleUnionToken**\n\nA subset of `SimpleToken` which represents union types.","tags":[]}],"deps":[],"refs":[],"symbolHash":235691232,"updated":1723767904397},{"name":"SimpleToken","fqn":"module::1444123379::SimpleToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":39,"endLine":39,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SimpleToken**\n\nAn enumeration of string values which point to _types_ in the\nthe type system.\n\n**Related:**\n- `SimpleScalarToken`, `SimpleContainerToken`, `SimpleUnionToken`,\n- `TypeToken`","tags":[]}],"deps":[],"refs":[],"symbolHash":2073543213,"updated":1723767904396},{"name":"SimpleScalarToken","fqn":"module::1007728054::SimpleScalarToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":47,"endLine":47,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SimpleScalarToken**\n\nA subset of the `SimpleToken` which may be more useful for building\nsimple string literal values.","tags":[]}],"deps":[],"refs":[],"symbolHash":222748238,"updated":1723767904397},{"name":"SimpleContainerToken","fqn":"module::3331597256::SimpleContainerToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":72,"endLine":72,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SimpleContainerToken**\n\nA subset of `SimpleToken` which provides shortcut's for expressing\n_container_ types via a simple token.","tags":[]}],"deps":[],"refs":[],"symbolHash":3150603058,"updated":1723767904397},{"name":"ShortDate","fqn":"module::3642295985::ShortDate","filepath":"src/types/string-literals/Date.ts","startLine":147,"endLine":147,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ShortDate**\n\nRepresent the month and day of month in one of two structural formats:\n\n1. `13 Jun`\n2. `Jun 13` or `Jun 13th` or `June 13th`\n\n**Note:** the year is _not_ representable using this type","tags":[]}],"deps":["module::3483155311::DateThenMonth","module::2065470065::MonthThenDate"],"refs":[],"symbolHash":3246832355,"updated":1723767904419},{"name":"Shift","fqn":"module::3044406054::Shift","filepath":"src/types/lists/Shift.ts","startLine":38,"endLine":50,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Shift**`<T>`\n\nRemoves the first element of a list, returning the rest.\n```ts\n// [2,3]\ntype T = Shift<[1,2,3]>;\n```\n\n- to provide additional utility, you can also pass\nin a string literal and get back the literal with the first\ncharacter removed.\n- if there is nothing left in Tuple or an empty string is passed in as input\nthen the output will _undefined_.","tags":[]}],"deps":["module::2666698309::Tuple","module::1274869242::IsUndefined","local::3151652387::_Shift","module::4284904442::AsArray","module::1931245833::If","module::172457424::IsStringLiteral","module::3921923702::Chars","module::1897058928::AsString","module::2597507937::Concat"],"refs":[],"symbolHash":4195238238,"updated":1723767904337},{"name":"SharedKeys","fqn":"module::2220256370::SharedKeys","filepath":"src/types/dictionary/SharedKeys.ts","startLine":18,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**SharedKeys**`<A,B>`\n\nGiven two objects `A` and `B`, this type utility will provide the \n_keys_ which both objects contain.\n```ts\ntype O1 = { foo: 1; bar: 2; baz: 88 };\ntype O2 = { bar: 5; baz: 3; nada: true };\n//  [\"bar\", \"baz\"]\ntype X = SharedKeys<O1,O2>;\n```\n\n**Note:** this is now just an alias to `IntersectingKeys`","tags":[]}],"deps":["ext::2318994541::Record","module::4119350992::ObjectKey","module::2167685608::IntersectingKeys"],"refs":[],"symbolHash":2922094774,"updated":1723767904283},{"name":"ShapeTupleOrUnion","fqn":"module::1522078536::ShapeTupleOrUnion","filepath":"src/types/literals/Shape.ts","startLine":53,"endLine":65,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTuple","type":"TTuple"},{"name":"TMakeUnion","type":"TMakeUnion"}],"jsDocs":[{"comment":"**ShapeAddOrDone**`<TTuple, TMakeUnion>`\n\nThe structure of endpoints on the `ShapeApi` which return\na tuple or union.","tags":[]}],"deps":["local::3386471196::Narrow","module::1931245833::If","module::4187212716::IsTrue","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":1001623522,"updated":1723767904348},{"name":"ShapeSuggest","fqn":"module::3259995840::ShapeSuggest","filepath":"src/types/literals/Shape.ts","startLine":44,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3356276222::Suggest","module::3926965677::TypeTokenKind"],"refs":[],"symbolHash":1083125325,"updated":1723767904348},{"name":"Shape","fqn":"module::3132551429::Shape","filepath":"src/types/literals/Shape.ts","startLine":42,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Shape**\n\nThis is a union type that captures all signatures of **shapes** which\nare produced as the runtime representation of a type by utilities\nlike the `ShapeApi` and the `shape()` runtime function.","tags":[]}],"deps":["module::3926965677::TypeTokenKind"],"refs":[],"symbolHash":713012093,"updated":1723767904348},{"name":"SetCandidate","fqn":"module::2576820917::SetCandidate","filepath":"src/types/sets/SetCandidate.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SetCandidate**\n\nA _set candidate_ is the base type for a type which can be converted\ninto a \"set\" (and have set operations applied).","tags":[]}],"deps":["module::3605609985::Narrowable"],"refs":[],"symbolHash":2474924310,"updated":1723767904410},{"name":"SemanticVersion","fqn":"module::1557203019::SemanticVersion","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":52,"endLine":54,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TPrefix","type":"TPrefix"}],"jsDocs":[{"comment":"**SemanticVersion**`<[TAllowPrefix]>`\n\nProvides a type for _sematic versions_.\n\n- by default it not only allows the `${major}.${minor}.${patch}` nomenclature\nbut also _optionally_ allows a prefix of `v`:\n   - `0.10.1` - valid\n   - `v0.10.1` - also valid\n   - `v 0.10.1` - also valid\n- this prefixing can be disabled by setting `TPrefix` to false","tags":[]}],"deps":["module::2888796371::OptionalSpace"],"refs":[],"symbolHash":3235069376,"updated":1723767904462},{"name":"SecondOfEach","fqn":"module::148888109::SecondOfEach","filepath":"src/types/tuples/SecondOfEach.ts","startLine":11,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"For a two-dimensional array, returns a _union type_ which combines the first element of the interior\narray.\n\n```ts\n// 1 | 2\ntype F = SecondOfEach<[ [\"foo\", 1], [\"bar\", 2] ]>;\n```","tags":[]}],"deps":[],"refs":[],"symbolHash":1272311360,"updated":1723767904486},{"name":"Second","fqn":"module::4074588514::Second","filepath":"src/types/lists/Second.ts","startLine":14,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**Second**`<T, [ELSE]>`\n\nReturns the _second_ type in a list. If `TElse` is provided it will set \nthe type to `TElse` when:\n- `T` is a Tuple type\n- `T[1]` is not a valid index of `T`\n- by default `TElse` is set to _never_\n\n**Related:** `First`, `Last`","tags":[]}],"deps":[],"refs":[],"symbolHash":3547711125,"updated":1723767904321},{"name":"ScalarNotSymbol","fqn":"module::2105690042::ScalarNotSymbol","filepath":"src/types/base-types/ScalarNotSymbol.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Scalar**\n\nDefines the types which makeup a \"scalar\" type but excludes `symbol`.","tags":[]}],"deps":[],"refs":[],"symbolHash":1540071258,"updated":1723767904150},{"name":"ScalarCallback","fqn":"module::2392537783::ScalarCallback","filepath":"src/types/literals/Shape.ts","startLine":367,"endLine":367,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3244353176::ShapeApi__Scalars","local::3386471196::ShapeApi__Union"],"refs":[],"symbolHash":3238625523,"updated":1723767904356},{"name":"Scalar","fqn":"module::3615592863::Scalar","filepath":"src/types/base-types/Scalar.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Scalar**\n\nDefines the types which makeup a \"scalar\" type.","tags":[]}],"deps":[],"refs":[],"symbolHash":3548819271,"updated":1723767904150},{"name":"RuntimeUnion","fqn":"module::1916719923::RuntimeUnion","filepath":"src/types/literals/RuntimeUnion.ts","startLine":9,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RuntimeUnion**`<T>`\n\nRepresents a _union type_ at runtime where the `ReturnType` is the\nunion type of the member in the `members` array.","tags":[]}],"deps":["module::2535688849::TupleToUnion"],"refs":[],"symbolHash":4162252335,"updated":1723767904347},{"name":"RightWhitespace","fqn":"module::27732595::RightWhitespace","filepath":"src/types/type-conversion/RightWhitespace.ts","startLine":11,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"Provides the _left_ whitespace of a string\n```ts\n// \"\\n\\t \"\ntype T = LeftWhitespace<\"\\n\\t foobar\">;\n```","tags":[]}],"deps":["module::3977136121::Replace","module::1129016037::TrimRight"],"refs":[],"symbolHash":4017241890,"updated":1723767904501},{"name":"RightSingleMark","fqn":"module::1742710380::RightSingleMark","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":29,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RightSingleMark**\n\nStandard right smart single quote.","tags":[]}],"deps":[],"refs":[],"symbolHash":2632909153,"updated":1723767904468},{"name":"RightReversedDoublePrime","fqn":"module::3254159795::RightReversedDoublePrime","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":44,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RightReversedDoublePrime**\n\nRight smart quote which has glyphs above the tail. Requires a \nunicode character of two bytes.","tags":[]}],"deps":[],"refs":[],"symbolHash":1801464318,"updated":1723767904468},{"name":"RightIncludes","fqn":"module::1286660136::RightIncludes","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":173,"endLine":180,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TLeftRight","type":"TLeftRight"}],"jsDocs":[{"comment":"**RightIncludes**\n\nBoolean utility which validates that at least one of the strings segments\nin `TEval` -- a string or tuple of strings -- is found in the string\nvalue contained in the right side of `TLeftRight`.\n\n**Related:** `RightContains`","tags":[]}],"deps":["module::1195775228::LeftRight","local::889785542::right","module::2698938817::Contains"],"refs":[],"symbolHash":1871589358,"updated":1723767904190},{"name":"RightHeavySingleTurned","fqn":"module::2650460616::RightHeavySingleTurned","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":58,"endLine":58,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RightHeavySingleTurned**\n\nSpecialized single right smart quote.","tags":[]}],"deps":[],"refs":[],"symbolHash":3283599516,"updated":1723767904468},{"name":"RightHeavyDoubleTurned","fqn":"module::249835710::RightHeavyDoubleTurned","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":66,"endLine":66,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RightHeavyDoubleTurned**\n\nSpecialized double right smart quote.","tags":[]}],"deps":[],"refs":[],"symbolHash":1063999356,"updated":1723767904468},{"name":"RightExtends","fqn":"module::1342156504::RightExtends","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":147,"endLine":150,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TLeftRight","type":"TLeftRight"}],"jsDocs":[{"comment":"**LeftExtends**`<TEval,TLeftRight>`\n\nBoolean utility which states whether the value of `TEval` _extends_\nthe _right_ value of `TLeftRight`","tags":[]}],"deps":["module::1195775228::LeftRight","local::889785542::right"],"refs":[],"symbolHash":3594071629,"updated":1723767904189},{"name":"RightEquals","fqn":"module::278025242::RightEquals","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":158,"endLine":161,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TLeftRight","type":"TLeftRight"}],"jsDocs":[{"comment":"**RightEquals**`<TEval,TLeftRight>`\n\nBoolean utility which states whether the value of `TEval` _equals_\nthe _right_ value of `TLeftRight`","tags":[]}],"deps":["module::1195775228::LeftRight","module::4258457119::IfEqual","local::889785542::right"],"refs":[],"symbolHash":3057651008,"updated":1723767904189},{"name":"RightDoubleMark","fqn":"module::1487929306::RightDoubleMark","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RightDoubleMark**\n\nStandard right smart double quote in superscript position and glyph \nabove the tail.","tags":[]}],"deps":[],"refs":[],"symbolHash":2393584435,"updated":1723767904468},{"name":"RightContains","fqn":"module::4077907557::RightContains","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":195,"endLine":203,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TLeftRight","type":"TLeftRight"},{"name":"TExplicitness","type":"TExplicitness"}],"jsDocs":[{"comment":"**RightContains**\n\nBoolean utility which validates that the _right_ value of the `TLeftRight`\nis a tuple and one of the elements _contains_ `TEval`.\n\nThe definition of _contains_ is determined by the optional `TExplicitness` generic:\n- it defaults to `loose` and in turns means that `TEval` must _extend_ an element\n- if set to `tight` then it will perform an explicit equality \ncheck.\n\n**Related:** `RightIncludes`","tags":[]}],"deps":["module::1195775228::LeftRight","local::889785542::Explicitness","local::889785542::left","module::2666698309::Tuple","module::2698938817::Contains","module::3504175184::NarrowlyContains"],"refs":[],"symbolHash":3205313325,"updated":1723767904190},{"name":"Right","fqn":"module::2098518956::Right","filepath":"src/types/functional/Right.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Right**<T>\n\nExtracts the **right** value from a `LeftRight`.","tags":[]}],"deps":["module::1190632890::LeftRight"],"refs":[],"symbolHash":2615453672,"updated":1723767904299},{"name":"RgbColor","fqn":"module::4098173581::RgbColor","filepath":"src/types/literals/Color.ts","startLine":45,"endLine":45,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RgbColor**\n\nType to enforce an `rgb()` color definition","tags":[]}],"deps":[],"refs":[],"symbolHash":3300619486,"updated":1723767904342},{"name":"RgbaColor","fqn":"module::2160834593::RgbaColor","filepath":"src/types/literals/Color.ts","startLine":53,"endLine":53,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RgbaColor**\n\nType to enforce an `rgba()` color definition","tags":[]}],"deps":[],"refs":[],"symbolHash":3043212611,"updated":1723767904342},{"name":"Reverse","fqn":"module::332549786::Reverse","filepath":"src/types/lists/Reverse.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["local::3172967922::RevAcc"],"refs":[],"symbolHash":3734381288,"updated":1723767904326},{"name":"ReturnValues","fqn":"module::3563351704::ReturnValues","filepath":"src/types/type-conversion/ReturnValues.ts","startLine":25,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**ReturnValues**`<TContainer>`\n\nReduces a container's values down to just the return type of the\nfunctions.\n```ts\n// [true, \"blue\"]\ntype T = ReturnValues<[true, false, () => true, () => \"blue\"]\n```\n\n**Related:** `ReduceValues`","tags":[]}],"deps":["module::186693758::Dictionary","local::11596306::ProcessTuple","module::3974819915::Values"],"refs":[],"symbolHash":622550329,"updated":1723767904504},{"name":"ReturnTypes","fqn":"module::1367408785::ReturnTypes","filepath":"src/types/lists/ReturnTypes.ts","startLine":13,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ReturnTypes**`<T>`\n\nGiven any Tuple, this utility will return a _union_ type \nthat represents all the possible _return types_ from functions found\nin the array. Non-function types will be ignored as will functions\nwhich don't return a boolean value.\n\n**See Also**: `LogicalReturns` and `TruthyReturns`","tags":[]}],"deps":["module::540585742::TypedFunction","ext::2318994541::ReturnType"],"refs":[],"symbolHash":3357498690,"updated":1723767904331},{"name":"ReturnsTrue","fqn":"module::3847506027::ReturnsTrue","filepath":"src/types/boolean-logic/operators/ReturnsTrue.ts","startLine":13,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ReturnsTrue**`<T>`\n\nType utility which indicates whether the _return value_ of `T` is \na `true` value. Return value are always either `true` or `false`.\n\nNote: any non-functions passed in as `T` are always a **false** value\nand so is a `boolean` value","tags":[]}],"deps":["module::540585742::TypedFunction","ext::2318994541::ReturnType"],"refs":[],"symbolHash":100042328,"updated":1723767904198},{"name":"ReturnsFalse","fqn":"module::3555700770::ReturnsFalse","filepath":"src/types/boolean-logic/operators/ReturnsFalse.ts","startLine":11,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ReturnsTrue**`<T>`\n\nType utility which indicates whether the _return value_ of `T` is \na `false` value. Possible values are `true`, `false`, or `boolean`.\n\nNote: any non-functions passed in as `T` are removed from the result set","tags":[]}],"deps":["module::540585742::TypedFunction","ext::2318994541::ReturnType","module::1364134543::IsEqual"],"refs":[],"symbolHash":2393824500,"updated":1723767904199},{"name":"Returns","fqn":"module::3564441658::Returns","filepath":"src/types/boolean-logic/operators/Returns.ts","startLine":9,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"},{"name":"TExpected","type":"TExpected"}],"jsDocs":[{"comment":"**Returns**`<TFn,TExpected>`\n\nBoolean type utility which detects whether `TFn` is a function\nand _extends_ `TExpected` in it's return type.","tags":[]}],"deps":["module::540585742::TypedFunction","ext::2318994541::ReturnType"],"refs":[],"symbolHash":1130721214,"updated":1723767904198},{"name":"RetainWideTypes","fqn":"module::2209000628::RetainWideTypes","filepath":"src/types/lists/RetainWideTypes.ts","startLine":27,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RetainWideTypes**`<T>`\n\nReceives a tuple of items and keeps only the \"wide types\"\n(e.g., object literals, tuple literals, string literals, \nnumeric literals, and boolean literals).\n\nAll wide types and elements such as _undefined_ and `null` are removed.\n\n**Related:** `Retain`, `RetainLiterals`, `FilterWideTypes`","tags":[]}],"deps":["local::4013046669::Process"],"refs":[],"symbolHash":4032979306,"updated":1723767904328},{"name":"RetainWhile","fqn":"module::3455491764::RetainWhile","filepath":"src/types/string-literals/RetainUntil.ts","startLine":61,"endLine":64,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**RetainWhile**`<TContent,TComparator>`\n\nProxies the content of `TContent` character-by-character _until_\na character _does not extend_ `TComparator`.\n\n```ts\n// \"1984\"\ntype Num = RetainWhile<\"1984 is a number\", NumericChar>;\n```\n\n**Related:** `RetainUntil`","tags":[]}],"deps":["local::1544495202::Process","module::3921923702::Chars"],"refs":[],"symbolHash":3938038387,"updated":1723767904441},{"name":"RetainUntil","fqn":"module::2157222094::RetainUntil","filepath":"src/types/string-literals/RetainUntil.ts","startLine":42,"endLine":45,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**RetainUntil**`<TContent,TComparator>`\n\nProxies the content of `TContent` character-by-character _until_\na character _extends_ `TComparator`.\n\n```ts\n// \"1984\"\ntype Num = RetainUntil<\"1984 is a number\", WhiteSpace>;\n```\n\n**Related:** `RetainWhile`","tags":[]}],"deps":["local::1544495202::Process","module::3921923702::Chars"],"refs":[],"symbolHash":1365207194,"updated":1723767904441},{"name":"RetainLiterals","fqn":"module::479892592::RetainLiterals","filepath":"src/types/lists/RetainLiterals.ts","startLine":26,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RetainLiterals**`<T>`\n\nReceives a tuple of items and keeps only the literal types\n(e.g., object, number, string, Record<string, string>, boolean, etc.).\n\nAll literal types and elements such as _undefined_ and `null` are removed.\n\n**Related:** `Retain`, `FilterLiterals`, `RetainWideTypes`","tags":[]}],"deps":["local::1435279640::Process"],"refs":[],"symbolHash":2236086481,"updated":1723767904328},{"name":"RetainChars","fqn":"module::1249133940::RetainChars","filepath":"src/types/type-conversion/RetainChars.ts","startLine":27,"endLine":34,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TRetain","type":"TRetain"}],"jsDocs":[{"comment":"**RetainChars**`<TContent,TRetain>`\n\nConverts a string `TContent` into a string with all\nof the characters in `TRetain` _retained_ while all\nother characters are removed.","tags":[]}],"deps":["module::2376902257::Or","module::391074403::IsWideType","local::1222869557::Process","module::3921923702::Chars","module::1764523945::Join"],"refs":[],"symbolHash":3313671574,"updated":1723767904506},{"name":"RetainByProp","fqn":"module::1578277008::RetainByProp","filepath":"src/types/lists/RetainByProp.ts","startLine":77,"endLine":105,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TComparator","type":"TComparator"},{"name":"TProp","type":"TProp"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"**RetainByProp**`<TList, TComparator, TProp, [TOp]>`\n\nAllows a known tuple `TList` to be reduced to a subset with the value `TComparator`\nbeing compared to each element in TList[TProp]; if comparison resolves to a `true`\nvalue then the element `TList[TProp]` is preserved\nbut otherwise removed.\n\n- How the list is _compared_ depends on `TOp` which defaults to \"extends\"\n- other values include \"equals\", \"does-not-extend\", \"does-not-equal\"\n\nBy default `TOp` is set to _extends_ which ensures that those values in the list which\n_extend_ `TValue` are retained but the remaining filtered out.\n\n```ts\ntype T = [1,\"foo\",3];\n// [1,3]\ntype T2 = Filter<T, string>;\n```\n- `TComparator` can be single value or a Tuple of values\n- in the case of a Tuple of values being found in `TComparator`, an \"OR\" operation\nwill be used ... meaning that the elements in `TList` will be kept if an element\nextends _any_ of the `TFilter` entries\n- any non-container based value in `TList` will be discarded\n\n**Related:** `FilterByProp`, `Filter`, `RetainFromList`, `RemoveFromList`","tags":[]}],"deps":["module::3462458201::ComparatorOperation","module::4223968119::IsDotPath","module::3686363877::Throw","module::1715223530::IfNever","module::634500037::RemoveNever","module::1931245833::If","module::1412066075::IsArray","local::839838833::Process","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":1147527251,"updated":1723767904328},{"name":"RetainAfter","fqn":"module::2263520398::RetainAfter","filepath":"src/types/string-literals/RetainAfter.ts","startLine":15,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TBreak","type":"TBreak"}],"jsDocs":[{"comment":"**RetainAfter**`<TStr, TBreak>`\n\nReceives a string `TStr` and truncates all characters in \nthe first occurrence of `TBreak` and all remaining chars.\n\n### Example\n```ts\n// \"world\"\ntype T = RetainAfter<\"hello world\", \" \">;\n```","tags":[]}],"deps":["module::3909707430::IfAllLiteral"],"refs":[],"symbolHash":4252450227,"updated":1723767904428},{"name":"Retain","fqn":"module::3037428688::Retain","filepath":"src/types/lists/Retain.ts","startLine":64,"endLine":81,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TComparator","type":"TComparator"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"**Retain**`<TList, TFilter>`\n\nAllows a known tuple `TList` to be reduced to just those elements which \n_extend_ type `TFilter`.\n\n- `TFilter` can be single value or a array of values\n- when the filter is an array then they are combined in a logical OR operation\n\n**Related:** `Filter`","tags":[]}],"deps":["module::3462458201::ComparatorOperation","local::3352558065::PrepList","local::3352558065::Process","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":1828200828,"updated":1723767904327},{"name":"ResultApi","fqn":"module::2037600357::ResultApi","filepath":"src/types/functional/Result.ts","startLine":269,"endLine":327,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1931856674::ErrInput","module::4215597801::Result","module::4205386834::Ok","module::398563619::Err","module::3224493375::TypeGuard","module::1364134543::IsEqual","module::3605609985::Narrowable","module::1037520660::AsErr","module::1931245833::If","module::1498766630::IsFunction"],"refs":[],"symbolHash":3537834477,"updated":1723767904309},{"name":"RequireProps","fqn":"module::1584679815::RequireProps","filepath":"src/types/dictionary/RequireProps.ts","startLine":13,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"Given a dictionary of type `<T>`, this utility function will\nmake the `<R>` generic property _required_ (use a union to make\nmore than one prop required).\n\n```ts\n// { foo: string, bar?: number }\ntype Example = RequireProps<{foo?: string, bar?: number}, \"foo\">;\n```","tags":[]}],"deps":["module::4114441065::EmptyObject","module::3435872486::ExpandRecursively","ext::2318994541::Required","ext::2318994541::Pick"],"refs":[],"symbolHash":3880807155,"updated":1723767904281},{"name":"RequiredProps","fqn":"module::2985661442::RequiredProps","filepath":"src/types/dictionary/RequiredProps.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RequiredProps**`<T>`\n\nReduces an object `T` to only those key/value pairs where the key is required","tags":[]}],"deps":["module::1903151425::AnyObject","ext::2318994541::Pick","module::3734776969::RequiredKeys"],"refs":[],"symbolHash":4047819512,"updated":1723767904258},{"name":"RequiredKeys","fqn":"module::1123426209::RequiredKeys","filepath":"src/types/dictionary/RequiredKeys.ts","startLine":15,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"**RequiredKeys**`<T,[V]>`\n\nProvides a union type of the _keys_ in `T` which are\n**required** properties.\n\n**Note:** you also may optionally filter further by specifying a value\nby the _value_ of the key and then only keys which are required AND\nwho extend `V` will be included in the union.\n\n**Related:** `OptionalKeys`, `RequiredProps`","tags":[]}],"deps":["module::186693758::Dictionary","module::814973::Unset","module::3860303104::As","module::4114441065::EmptyObject","module::4019558171::IfUnset","module::4119350992::ObjectKey"],"refs":[],"symbolHash":1882329486,"updated":1723767904262},{"name":"RepoUrls","fqn":"module::2878573835::RepoUrls","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":36,"endLine":38,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1120222348::UrlsFrom","module::3529663403::Flatten","module::13543941::Mutable","module::3974819915::Values"],"refs":[],"symbolHash":1648435842,"updated":1723767904462},{"name":"RepoSource","fqn":"module::345331933::RepoSource","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":26,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RepoSources**\n\ncommon sources for source code repositories.","tags":[]}],"deps":["module::2535688849::TupleToUnion","module::13543941::Mutable"],"refs":[],"symbolHash":3654596077,"updated":1723767904461},{"name":"RepoPageType","fqn":"module::1098066149::RepoPageType","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":34,"endLine":34,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**RepoPageType**\n\na union of descriptive page names you'd expect to find in a source\ncode repository.","tags":[]}],"deps":["module::2535688849::TupleToUnion","module::13543941::Mutable"],"refs":[],"symbolHash":1630021930,"updated":1723767904462},{"name":"ReplaceLast","fqn":"module::3474943588::ReplaceLast","filepath":"src/types/lists/ReplaceLast.ts","startLine":9,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TVal","type":"TVal"}],"jsDocs":[{"comment":"**ReplaceLast**`<TList,TVal>`\n\nReplaces the _last_ element of `TList` with the value of `TVal`.","tags":[]}],"deps":["module::4205836599::Pop"],"refs":[],"symbolHash":3285614646,"updated":1723767904338},{"name":"ReplaceAll","fqn":"module::2940983911::ReplaceAll","filepath":"src/types/type-conversion/ReplaceAll.ts","startLine":43,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TText","type":"TText"},{"name":"TFind","type":"TFind"},{"name":"TReplace","type":"TReplace"}],"jsDocs":[{"comment":"**ReplaceAll**`<TText,TFind,TReplace>`\n\nType utility which takes a string `TText` and finds _all_ instances of\n`TFind` and replaces it with `TReplace`.\n\n```ts\nconst fooy = \"fooy\";\n// \"Foo\"\ntype Foo = Replace<typeof fooy, \"y\", \"\">;\n```\n\n**Related:** `Replace`","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::3393438424::IsUnion","module::458105997::UnionToTuple","local::1571166098::Iterate","local::1571166098::Process"],"refs":[],"symbolHash":2136014550,"updated":1723767904500},{"name":"Replace","fqn":"module::2840237285::Replace","filepath":"src/types/type-conversion/Replace.ts","startLine":15,"endLine":25,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TText","type":"TText"},{"name":"TFind","type":"TFind"},{"name":"TReplace","type":"TReplace"}],"jsDocs":[{"comment":"**Replace**`<TText,TFind,TReplace>`\n\nType utility which takes a string `TText` and finds the first instance of\n`TFind` and replaces it with `TReplace`.\n\n```ts\nconst fooy = \"fooy\";\n// \"Foo\"\ntype Foo = Replace<typeof fooy, \"y\", \"\">;\n```\n\n**Related:** `ReplaceAll`","tags":[]}],"deps":[],"refs":[],"symbolHash":3798829284,"updated":1723767904500},{"name":"Repeat","fqn":"module::1816806516::Repeat","filepath":"src/types/string-literals/Repeat.ts","startLine":8,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TCount","type":"TCount"}],"jsDocs":[{"comment":"**Repeat**`<TStr,TCount>`\n\nCreates a string literal by repeating a given string `TStr`, `TCount` times.","tags":[]}],"deps":["module::1640529169::IsNegativeNumber","module::2597507937::Concat","module::1695495442::FixedLengthArray"],"refs":[],"symbolHash":2721053213,"updated":1723767904427},{"name":"RemoveUndefined","fqn":"module::3407362775::RemoveUndefined","filepath":"src/types/containers/RemoveUndefined.ts","startLine":50,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveUndefined**`<T>`\n\nRemoves all the elements from `T` which are typed as _undefined_.","tags":[]}],"deps":["module::2872591658::Container","local::87702380::Process","module::2666698309::Tuple","module::3420625191::NumericKeys","local::87702380::_Keys"],"refs":[],"symbolHash":3225135887,"updated":1723767904252},{"name":"RemovePhoneCountryCode","fqn":"module::383760544::RemovePhoneCountryCode","filepath":"src/types/string-literals/character-sets/phone/RemovePhoneCountryCode.ts","startLine":28,"endLine":38,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveCountryCode**`<T,[TExplicitCountryCode]>`\n\nRemoves the country code -- where present -- to reveal\njust a country-based number.\n\n**Note:** there are two approaches this utility can take toward\nremoval of the country code:\n\n- the default relies on a space delimiter being present between\nthe country code and the remaining phone number; use this if\nthis is a reasonable assumption as it is more type performant.\n- if you might have a string of numbers -- even possibly without\nthe `+` or `00` prefixes -- then you can set `TExplicitCountryCode`\nto `true`\n  - when set to true, it will still be able to extract _real_ country codes\nfrom the string but if an _imagined_ country code has been entered it will\nfail.\n  - if it is an _imagined_ country code which does have a `+` or `00` prefix\nthen the type will be `ErrorCondition<\"invalid-country-code\">`\n  - if no country code prefix then you'll likely get a\n`ErrorCondition<\"too-many-digits\">` error (unless of course your have _other_\nproblems).","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::2524449437::GetPhoneCountryCode","module::2678895335::Trim"],"refs":[],"symbolHash":3986362078,"updated":1723767904475},{"name":"RemoveNever","fqn":"module::1237471243::RemoveNever","filepath":"src/types/containers/RemoveNever.ts","startLine":63,"endLine":69,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveNever**`<T>`\n\nRemoves all of the elements from `T` which are typed as _never_.","tags":[]}],"deps":["module::2872591658::Container","local::1640627676::ProcessTuple","module::3420625191::NumericKeys","module::186693758::Dictionary","local::1640627676::ProcessObj","local::1640627676::_Keys"],"refs":[],"symbolHash":149329254,"updated":1723767904251},{"name":"RemoveMarked","fqn":"module::3303065356::RemoveMarked","filepath":"src/types/containers/RemoveMarked.ts","startLine":48,"endLine":53,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveMarked**`<T>`\n\nRemoves all values in `T` which extends `Constant<\"Marked\">`","tags":[]}],"deps":["module::2872591658::Container","local::3397903486::Process","module::2666698309::Tuple","module::3420625191::NumericKeys","local::3397903486::_Keys"],"refs":[],"symbolHash":1298868745,"updated":1723767904251},{"name":"RemoveIndexKeys","fqn":"module::1778531453::RemoveIndexKeys","filepath":"src/types/dictionary/RemoveIndexKeys.ts","startLine":14,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveIndexKeys**`<T>`\n\nRemoves _index_ keys which permit key/values to be added to an object while\nretaining all explicit key/values defined on an object.\n\n```ts\ntype Obj = { [key: string]: unknown; foo: 42 };\n// { foo: 42 }\ntype Obj2 = RemoveIndexKeys<Obj>;\n```","tags":[]}],"deps":[],"refs":[],"symbolHash":4178065676,"updated":1723767904284},{"name":"RemoveIndex","fqn":"module::926489898::RemoveIndex","filepath":"src/types/type-conversion/RemoveIndex.ts","startLine":17,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveIndex**`<T>`\n\nRemoves an index like below while retaining other key/value pairs.\n```ts\ninterface Foo {\n   foo: string;\n   [key: string]: any;\n}\n// { foo: string }\ntype T = RemoveIndex<Foo>;\n```","tags":[]}],"deps":["ext::2318994541::Record"],"refs":[],"symbolHash":3216018279,"updated":1723767904503},{"name":"RemoveHttpProtocol","fqn":"module::112012335::RemoveHttpProtocol","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":179,"endLine":183,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveHttpProtocol**`<T>`\n\nRemoves both `http://` and `https://` prefixes to a string.\n\n**Related:** `RemoveNetworkProtocol`","tags":[]}],"deps":[],"refs":[],"symbolHash":128212885,"updated":1723767904448},{"name":"RemoveFromStart","fqn":"module::115170099::RemoveFromStart","filepath":"src/types/type-conversion/RemoveFromStart.ts","startLine":9,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TRemove","type":"TRemove"}],"jsDocs":[{"comment":"**RemoveFromStart**`<TContent,TRemove>`\n\nType utility which removes selected text -- `TRemove` -- from the beginning of `TContent`.\n\nNote: if `TRemove` is not found then `TContent is left unchanged","tags":[]}],"deps":[],"refs":[],"symbolHash":730021880,"updated":1723767904502},{"name":"RemoveFromEnd","fqn":"module::603066508::RemoveFromEnd","filepath":"src/types/type-conversion/RemoveFromEnd.ts","startLine":9,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TRemove","type":"TRemove"}],"jsDocs":[{"comment":"**RemoveFromEnd**`<TContent,TRemove>`\n\nType utility which removes selected text -- `TRemove` -- from the end of `TContent`.\n\nNote: if `TRemove` is not found then `TContent is left unchanged","tags":[]}],"deps":[],"refs":[],"symbolHash":3580710611,"updated":1723767904502},{"name":"RemoveFnProps","fqn":"module::1354589216::RemoveFnProps","filepath":"src/types/functions/RemoveFnProps.ts","startLine":9,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveFnProps**`<T>`\n\nTakes a function `T` and returns the function unchanged but without any\nkey/value pairs that may have been added to the function's definition.","tags":[]}],"deps":["module::3580587573::AnyFunction","module::2610106395::AsFnMeta"],"refs":[],"symbolHash":816705013,"updated":1723767904311},{"name":"RemoveEmpty","fqn":"module::4124736372::RemoveEmpty","filepath":"src/types/containers/RemoveEmpty.ts","startLine":72,"endLine":76,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RemoveEmpty**\n\nA _container_ utility looks at all immediate keys of the\ncontainer and removes all which are \"empty\". Being empty means:\n\n- is either `null`, `undefined`, or `never`\n- has an _empty string literal_ of `\"\"`\n- is an empty container\n\nFor any value `T` which is not a container nor a union type, the value\nis just passed through.","tags":[]}],"deps":["module::2666698309::Tuple","module::3860303104::As","module::500662101::RemoveMarked","local::3006455599::ProcessTup","module::186693758::Dictionary","local::3006455599::ProcessObj","module::4102577001::Keys"],"refs":[],"symbolHash":809377821,"updated":1723767904252},{"name":"Relate","fqn":"module::4194641118::Relate","filepath":"src/types/sets/Relate.ts","startLine":12,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"L","type":"L"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"**Relate**`<L,R>`\n\nProvides the relationship between two sets:\n\n- **sameLength**: boolean flag\n- **sharedKeys**: the shared keys between the two sets\n- **uniqueKeys**: the unique keys _per_ list in a `LeftRight` struct.","tags":[]}],"deps":["module::2872591658::Container","module::1190632890::LeftRight","module::1195601881::Length","module::2167685608::IntersectingKeys","module::1191826886::UniqueKeys"],"refs":[],"symbolHash":1213015873,"updated":1723767904412},{"name":"RegularFn","fqn":"module::1262569165::RegularFn","filepath":"src/types/base-types/fns/RegularFn.ts","startLine":8,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TArgs","type":"TArgs"},{"name":"TReturn","type":"TReturn"}],"jsDocs":[{"comment":"**RegularFn**`<[TArgs], [TReturn]>`\n\nA typical function which receives a set of arguments `TArgs`,\nand then returns some type `TReturn`.","tags":[]}],"deps":[],"refs":[],"symbolHash":364506682,"updated":1723767904181},{"name":"ReduceValues","fqn":"module::3524650497::ReduceValues","filepath":"src/types/type-conversion/ReduceValues.ts","startLine":26,"endLine":32,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**ReduceValues**`<TContainer>`\n\nReduces a container to it's _values_ where if it's a function then the\n ReturnType` is returned, if not a function than just it's normal value.\n\n```ts\n// [true, \"blue\"]\ntype T = ReduceValues<[true, false, () => true, () => \"blue\"]\n```\n\n**Related:** `ReturnValues`, `Values`","tags":[]}],"deps":["module::186693758::Dictionary","local::3766767126::ProcessTuple","module::3974819915::Values"],"refs":[],"symbolHash":1731398616,"updated":1723767904506},{"name":"RecordValueTypeDefn","fqn":"module::3909304549::RecordValueTypeDefn","filepath":"src/types/literals/Shape.ts","startLine":287,"endLine":287,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1473201238::ShapeCallback","module::4069020921::WideTokenNames"],"refs":[],"symbolHash":2125723776,"updated":1723767904354},{"name":"RealizedErr","fqn":"module::982682824::RealizedErr","filepath":"src/types/functional/Result.ts","startLine":140,"endLine":142,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1449148835::ResultErr","ext::2318994541::Exclude","module::4194102057::StackTrace"],"refs":[],"symbolHash":39751611,"updated":1723767904303},{"name":"ReadonlyProps","fqn":"module::2522679646::ReadonlyProps","filepath":"src/types/dictionary/ReadonlyProps.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ReadonlyProps**`<T>`\n\nReduces an object down to just the key/value pairs which\nare readonly.","tags":[]}],"deps":["ext::2318994541::Pick","module::2806756356::ReadonlyKeys"],"refs":[],"symbolHash":2745372882,"updated":1723767904282},{"name":"ReadonlyKeys","fqn":"module::3915166583::ReadonlyKeys","filepath":"src/types/dictionary/ReadonlyKeys.ts","startLine":17,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ReadonlyKeys**`<T>`\n\nCreates a union of properties in `T` which are readonly.","tags":[]}],"deps":["local::3416378531::isReadonly"],"refs":[],"symbolHash":182533154,"updated":1723767904281},{"name":"RawPhoneNumber","fqn":"module::3711476300::RawPhoneNumber","filepath":"src/types/string-literals/character-sets/phone/RawPhoneNumber.ts","startLine":74,"endLine":88,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RawPhoneNumber**`<[T]>`\n\nThis is the most compact form of phone number storage as it has no delimiters\nbut still can contain a number representing an international,\ncountry or regional phone number and even a `PhoneShortCode`.\n\n**Generic Use**\n\n- without using the generic, you'll get a very basic shape that can be used as in input\ntype but it will by no means ensure this _is_ a RawPhone number\n- to get real validation that a type is a `RawPhoneNumber` pass it in as `T`\n- valid values are:\n   - numeric only characters with the exception of:\n     - possible start of `+`\n     - possible inclusion of `1-${number}` in country code area\n   - length of 3-7, 10, 12 digits\n   - 14 digits if it leads with `00` or `+`","tags":[]}],"deps":["module::814973::Unset","module::1827247990::Optional","module::1881292962::NumericChar","module::172457424::IsStringLiteral","module::3111905076::OnPass","local::520136407::_RightChars","local::520136407::_RightLength","module::1939532401::ErrorCondition"],"refs":[],"symbolHash":3427920807,"updated":1723767904473},{"name":"QuotationMarkPlus","fqn":"module::2594951768::QuotationMarkPlus","filepath":"src/types/string-literals/character-sets/quotation-marks/QuotationMark.ts","startLine":33,"endLine":33,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**QuotationMarkPlus**\n\nAll quotation marks including:\n```md\nstandard: \" | '\nsmart: “” | ‘’ \nspecialized: 〝〞| ❛❜ | ❝❞ | 〟＂\n---\n```\n\n**Related:** `QuotationMarkPlus`, `StandardMark`, `SmartMark`, \n`OpeningMark`, `ClosingMark`","tags":[]}],"deps":["module::2175406749::StandardMark","module::3729964606::SmartMarkPlus"],"refs":[],"symbolHash":3362984641,"updated":1723767904471},{"name":"QuotationMark","fqn":"module::671545236::QuotationMark","filepath":"src/types/string-literals/character-sets/quotation-marks/QuotationMark.ts","startLine":17,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**QuotationMark**\n\nBoth standard quotation marks along with the most common\nsmart quotation marks:\n```md\nstandard: \" | '\nsmart: “” | ‘’ \n---\n```\n**Related:** `QuotationMarkPlus`, `StandardMark`, `SmartMark`, \n`OpeningMark`, `ClosingMark`","tags":[]}],"deps":["module::2175406749::StandardMark","module::3705117984::SmartMark"],"refs":[],"symbolHash":1017084526,"updated":1723767904471},{"name":"Push","fqn":"module::3702523169::Push","filepath":"src/types/lists/Push.ts","startLine":19,"endLine":25,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TVal","type":"TVal"},{"name":"TCondition","type":"TCondition"}],"jsDocs":[{"comment":"**Push**`<TList,TVal,[TCondition]>`\n\nPushes a value `TVal` onto an existing list `TList`.\n\n- If you want to make the push conditional you can add `TCondition`","tags":[]}],"deps":["module::3860303104::As","local::3268560762::Process"],"refs":[],"symbolHash":3062210390,"updated":1723767904339},{"name":"Punctuation","fqn":"module::882156770::Punctuation","filepath":"src/types/string-literals/character-sets/Punctuation.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Punctuation**\n\nCommon punctuation characters found in prose.\n\n**Related:** `Whitespace`, `Alpha`, `Bracket`, `QuotationMark`","tags":[]}],"deps":[],"refs":[],"symbolHash":2919810095,"updated":1723767904444},{"name":"PublicKeyOf","fqn":"module::1983305353::PublicKeyOf","filepath":"src/types/dictionary/Keys.ts","startLine":153,"endLine":157,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**PublicKeyOf**`<TContainer>`\n\nProvides a **union type** of _public_ keys (aka, keys not starting with\nunderscore character) for the passed in container.\n\n**Related:** `Keys`,`PublicKeys`,`KeyOf`","tags":[]}],"deps":["module::2872591658::Container","module::2535688849::TupleToUnion","module::3526817119::PublicKeys","ext::2318994541::PropertyKey"],"refs":[],"symbolHash":3018804013,"updated":1723767904257},{"name":"ProxyError","fqn":"module::1319749709::ProxyError","filepath":"src/types/errors/ProxyError.ts","startLine":29,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TError","type":"TError"},{"name":"TUtility","type":"TUtility"},{"name":"TGeneric","type":"TGeneric"}],"jsDocs":[{"comment":"**ProxyError**`<TError,TUtility,[TGeneric]>`\n\nAllows a type utility which receives an `ErrorCondition` to\nproxy that through to the caller but with a small amount of additional\ncontext to allow the user to better understand the call chain.\n\n**Notes:**\n- the \"kind\" of error is not modified; if you want that behavior use `MapError`\ninstead.\n- you can improve the error message by stating the generic parameter which\nreceived the error","tags":[]}],"deps":["module::1939532401::ErrorCondition","module::3686363877::Throw","local::1263998295::StackDesc","local::1263998295::Underlying"],"refs":[],"symbolHash":2460441520,"updated":1723767904296},{"name":"PropertyChar","fqn":"module::1560140584::PropertyChar","filepath":"src/types/string-literals/character-sets/Variable.ts","startLine":20,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**VariableChar**\n\nCharacters allowed as an object property name.\n\n**Related:** `VariableChar`","tags":[]}],"deps":["module::1675436673::VariableChar"],"refs":[],"symbolHash":1189990606,"updated":1723767904464},{"name":"PromiseAll","fqn":"module::2048005005::PromiseAll","filepath":"src/types/functions/PromiseAll.ts","startLine":9,"endLine":13,"scope":"module","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"}],"jsDocs":[{"comment":"**PromiseAll**","tags":[]}],"deps":["module::2666698309::Tuple","ext::2318994541::PromiseLike","ext::2318994541::Awaited"],"refs":[],"symbolHash":2591544305,"updated":1723767904313},{"name":"Process","fqn":"module::659262985::Process","filepath":"src/types/lists/Slice.ts","startLine":55,"endLine":85,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TStart","type":"TStart"},{"name":"TLen","type":"TLen"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1656198109::RemoveStart","module::1931245833::If","module::82688423::IsNumericLiteral","module::566869884::TruncateAtLen","module::3860303104::As"],"refs":[],"symbolHash":2759057431,"updated":1723767904330},{"name":"PrivateKeyOf","fqn":"module::3586195671::PrivateKeyOf","filepath":"src/types/dictionary/Keys.ts","startLine":167,"endLine":171,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**PrivateKeyOf**`<TContainer>`\n\nProvides a **union type** of _private_ keys (aka, keys starting with\nunderscore character) for the passed in container.\n\n**Related:** `Keys`,`PrivateKeys`,`KeyOf`","tags":[]}],"deps":["module::2872591658::Container","module::2535688849::TupleToUnion","module::1441699817::PrivateKeys","ext::2318994541::PropertyKey","module::3526817119::PublicKeys"],"refs":[],"symbolHash":3782843305,"updated":1723767904257},{"name":"PrivateKey","fqn":"module::1096696826::PrivateKey","filepath":"src/types/dictionary/Keys.ts","startLine":111,"endLine":111,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**PrivateKey**\n\nA `PrivateKey` is an object key that is preceded with a `_` character to indicate\nthat it is a _private_ property.","tags":[]}],"deps":[],"refs":[],"symbolHash":1017378614,"updated":1723767904256},{"name":"PriorDigit","fqn":"module::119213868::PriorDigit","filepath":"src/types/numeric-literals/PriorDigit.ts","startLine":23,"endLine":35,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**PriorDigit**`<T>`\n\nGiven a numeric digit, this utility provides the next numeric digit in sequence.\n\n- this includes the overflow condition of `0` -> `9`\n- a string literal digit can be passed in as well and the next string literal\ndigit will be returned\n```ts\n// 4\ntype N = PriorDigit<5>;\n// \"4\"\ntype S = PriorDigit<\"5\">;\n```","tags":[]}],"deps":["module::2660456408::Digit","module::1881292962::NumericChar","module::577891714::ToString","module::116081596::AsNumber"],"refs":[],"symbolHash":985908384,"updated":1723767904376},{"name":"PrependAll","fqn":"module::4283525749::PrependAll","filepath":"src/types/string-literals/PrependAll.ts","startLine":15,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TPrepend","type":"TPrepend"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["local::4166324004::PrependAcc","module::577891714::ToString"],"refs":[],"symbolHash":568374022,"updated":1723767904426},{"name":"Prepend","fqn":"module::3494593013::Prepend","filepath":"src/types/string-literals/Prepend.ts","startLine":14,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TPrepend","type":"TPrepend"}],"jsDocs":[{"comment":"**Prepend**`<TStr, TPrepend>`\n\nPrepends the string `TPrepend` prior to existing `TStr` string.\n```ts\n// \"Bob, you're the best\"\ntype T = Prepend<\"you're the best\", \"Bob, \">;\n```\n\n**Related:** `EnsureLeading`","tags":[]}],"deps":["module::577891714::ToString"],"refs":[],"symbolHash":62651239,"updated":1723767904426},{"name":"Pop","fqn":"module::2587447522::Pop","filepath":"src/types/lists/Pop.ts","startLine":22,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"**Pop**`<TList>`\n\nRemoves the last element of a list.\n```ts\n// [1,2]\ntype T = Pop<[1,2,3]>;\n```\n\n- to provide additional utility, you can also pass\nin a string literal and get back the literal with the last\ncharacter removed.","tags":[]}],"deps":["module::2666698309::Tuple","module::391074403::IsWideType","module::172457424::IsStringLiteral","module::3921923702::Chars","module::2597507937::Concat","local::947494186::_Pop","ext::2318994541::Exclude"],"refs":[],"symbolHash":3938885593,"updated":1723767904337},{"name":"PlusMinus","fqn":"module::918484738::PlusMinus","filepath":"src/types/string-literals/character-sets/PlusMinus.ts","startLine":1,"endLine":1,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":831770334,"updated":1723767904461},{"name":"Pluralize","fqn":"module::3967400175::Pluralize","filepath":"src/types/string-literals/Pluralize.ts","startLine":76,"endLine":90,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Pluralize**`<T>`\n\nPluralizes the word `T`, using _language rules_ on pluralization for English as well as\nleveraging many known exceptions to the linguistic rules.","tags":[]}],"deps":["module::172457424::IsStringLiteral","local::2593703517::IsException","local::2593703517::PluralException","local::2593703517::EndsIn_IS","local::2593703517::PluralizeEndingIn_IS","local::2593703517::EndsInSingularNoun","local::2593703517::PluralizeEndingSingularNoun","local::2593703517::EndsIn_F","local::2593703517::PluralizeEnding_F","local::2593703517::EndsIn_Y","local::2593703517::PluralizeEndingIn_Y"],"refs":[],"symbolHash":1002836296,"updated":1723767904426},{"name":"PhoneShortCode","fqn":"module::1796629007::PhoneShortCode","filepath":"src/types/string-literals/character-sets/phone/PhoneShortCode.ts","startLine":24,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**PhoneShortCode**`<[T]>`\n\nA [phone short code](https://en.wikipedia.org/wiki/Short_code) is a short numeric\nphone number typically used for SMS/MMS purposes but can be call based too.\n\nThere are regional variances but typically are always _less_ digits than a regional\nphone number of 7 digits.\n\nThis utility -- when used without a generic `T` -- will just give a basic shape\nfor the short code but not really validate it.\n\nIf you want validation, pass it the value you're testing in as `T`. If `T` is a\nvalid short code then it will be proxied through \"as is\" but if it is not, it\nwill be converted to an `ErrorCondition<\"invalid-short-code\">`","tags":[]}],"deps":["module::1881292962::NumericChar","module::172457424::IsStringLiteral","module::3252841211::IsGreaterThan","module::3686363877::Throw"],"refs":[],"symbolHash":809262250,"updated":1723767904472},{"name":"PhoneNumberType","fqn":"module::4068638049::PhoneNumberType","filepath":"src/types/string-literals/character-sets/phone/GetPhoneNumberType.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2810436228,"updated":1723767904474},{"name":"PhoneNumberDelimiter","fqn":"module::1454845635::PhoneNumberDelimiter","filepath":"src/types/string-literals/character-sets/phone/PhoneNumberDelimiter.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"delimiter characters commonly used to separate digits in phone numbers","tags":[]}],"deps":[],"refs":[],"symbolHash":2591206665,"updated":1723767904476},{"name":"PhoneNumber","fqn":"module::2025901105::PhoneNumber","filepath":"src/types/string-literals/character-sets/phone/PhoneNumber.ts","startLine":97,"endLine":112,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TDelimiter","type":"TDelimiter"}],"jsDocs":[{"comment":"**PhoneNumber**`<[T]>`\n\nWithout use of the generic `T`, provides a basic shape for phone\nnumbers which should keep people on good behavior when\naccepting phone numbers.\n\nWhen passing a string into `T`, this utility will do a lot more\nvalidity checking on the value.\n\n- Only valid characters (numeric, whitespace, `+`, `-`, `.`, and parenthesis)\n- all _leading_ and _trailing_ whitespace removed for remaining comparisons\n- at least 7 numeric characters\n   - 8 if `+` character used as leading character (after whitespace)\n   - 10 if `00` are leading characters\n- leading character (after whitespace) must be numeric, `(` or `+`","tags":[]}],"deps":["module::3074325429::PhoneNumberDelimiter","module::1848123338::LocalPhoneNumber","module::2452667987::CountryPhoneNumber","module::640586418::InternationalPhoneNumber","module::172457424::IsStringLiteral","local::1527383258::Process","module::3860303104::As","module::82688423::IsNumericLiteral","module::1939532401::ErrorCondition"],"refs":[],"symbolHash":1912655853,"updated":1723767904472},{"name":"PhoneCountryCode","fqn":"module::3260677529::PhoneCountryCode","filepath":"src/types/string-literals/character-sets/phone/PhoneCountryCode.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**PhoneCountryCode**\n\nThe official list of _phone_ country codes\n\n**Related:** `DialCountryCode`","tags":[]}],"deps":["module::2892926579::FirstOfEach","module::4074679325::PhoneCountryLookup"],"refs":[],"symbolHash":665822579,"updated":1723767904476},{"name":"PhoneAreaCode","fqn":"module::1528243928::PhoneAreaCode","filepath":"src/types/string-literals/character-sets/phone/PhoneAreaCode.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**PhoneAreaCode**","tags":[]}],"deps":["module::1881292962::NumericChar"],"refs":[],"symbolHash":2542599325,"updated":1723767904476},{"name":"PathJoin","fqn":"module::505155885::PathJoin","filepath":"src/types/string-literals/PathJoin.ts","startLine":32,"endLine":48,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSegments","type":"TSegments"}],"jsDocs":[{"comment":"**PathJoin**`<T,U>`\n\nType utility meant to bring 2 or more \"path\" strings together into\na valid \"path\". Where a \"path\" is represented as nothing more than\nstring characters delimited by a Posix `\\` character.\n\nNote that the first part of the path will retain it's `\\` if present\nand the last one will preserve it's `\\` character if present. You can\ncombine this utility with `EnsureTrailing<T>`, `StripTrailing<T>`,\n`EnsureStarting<T>`, and `StripStarting<T>` to further shape\nthe type.","tags":[]}],"deps":["local::2168030475::Finalize","module::1764523945::Join"],"refs":[],"symbolHash":977385453,"updated":1723767904425},{"name":"Passthrough","fqn":"module::3556578044::Passthrough","filepath":"src/types/boolean-logic/branching/Passthrough.ts","startLine":11,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TPass","type":"TPass"},{"name":"THandle","type":"THandle"},{"name":"TSpecificity","type":"TSpecificity"}],"jsDocs":[{"comment":"**Passthrough**`<TContent,TPass,THandle>`\n\nPasses through content in `TContent` when it _extends_ the type\nof `TPass`, otherwise it changes the type to `THandle`.\n\n**Related:** `THandle`","tags":[]}],"deps":["module::472914021::IfEquals"],"refs":[],"symbolHash":398896224,"updated":1723767904243},{"name":"PascalCase","fqn":"module::1291439369::PascalCase","filepath":"src/types/string-literals/casing/PascalCase.ts","startLine":24,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"Converts a string literal type to a **PascalCase** representation.\n```ts\n// \"FooBar\"\ntype T = PascalCase<\"fooBar\">;\ntype T = PascalCase<\"foo-bar\">;\ntype T = PascalCase<\"foo_bar\">;\ntype T = PascalCase<\"\\n foo_bar \\t\">;\n```","tags":[]}],"deps":["module::2678895335::Trim","local::894490003::DashDelim","module::3521220041::LowerAllCaps","local::894490003::Delimiter","ext::2318994541::Capitalize"],"refs":[],"symbolHash":1965296589,"updated":1723767904481},{"name":"PartialError","fqn":"module::2197771542::PartialError","filepath":"src/types/errors/PartialError.ts","startLine":19,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TConfig","type":"TConfig"}],"jsDocs":[{"comment":"**PartialError**`<[TKind],[TMessage],[]>`\n\nAllows an author to configure part of an `ErrorCondition`\nand then complete it with `CompleteError`.","tags":[]}],"deps":["module::3332347927::PartialErrorDefn","module::3435872486::ExpandRecursively"],"refs":[],"symbolHash":1866339711,"updated":1723767904298},{"name":"Or","fqn":"module::2165452885::Or","filepath":"src/types/boolean-logic/combinators/Or.ts","startLine":43,"endLine":68,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TConditions","type":"TConditions"},{"name":"TEmpty","type":"TEmpty"}],"jsDocs":[{"comment":"**Or**`<TConditions, [TEmpty]>`\n\nAllows an array of conditions (either a boolean value or a \nfunction which evaluates to a boolean value) to be logically OR'd together.\n\n- by default if an empty tuple of conditions is passed in then this utility\nresolves to `false` but this can be changed by modifying `TEmpty`\n\n**Related:** `And`","tags":[]}],"deps":["module::80185219::IsNever","module::3686363877::Throw","module::1364134543::IsEqual","module::2984222131::LogicFunction","module::1149977588::LogicalReturns","local::4282093110::Process","module::3504175184::NarrowlyContains","module::3228905537::IsErrorCondition","local::4282093110::ConditionError"],"refs":[],"symbolHash":165439261,"updated":1723767904237},{"name":"OptRequired","fqn":"module::1213947907::OptRequired","filepath":"src/types/literals/OptRequired.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Expresses whether an option is \"opt\" (optional) or \"req\" (required)","tags":[]}],"deps":[],"refs":[],"symbolHash":4229212691,"updated":1723767904340},{"name":"OptModifier","fqn":"module::1356581616::OptModifier","filepath":"src/types/runtime-types/StringLiteralToken.ts","startLine":3,"endLine":3,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":49586318,"updated":1723767904395},{"name":"OptionalSpace","fqn":"module::3252176269::OptionalSpace","filepath":"src/types/string-literals/character-sets/OptionalSpace.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**OptionalSpace**\n\nAllows for an optional space to be included","tags":[]}],"deps":[],"refs":[],"symbolHash":2476046407,"updated":1723767904457},{"name":"OptionalProps","fqn":"module::4181208679::OptionalProps","filepath":"src/types/dictionary/OptionalProps.ts","startLine":8,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**OptionalProps**\n\nReduces an object to only key/value pairs where the key is optional","tags":[]}],"deps":["module::4114441065::EmptyObject","module::3453304542::RemoveIndexKeys","ext::2318994541::Pick","module::3167061785::OptionalKeys"],"refs":[],"symbolHash":1923823941,"updated":1723767904259},{"name":"OptionalParamFn","fqn":"module::4127758528::OptionalParamFn","filepath":"src/types/base-types/fns/OptionalParamFn.ts","startLine":20,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**OptionalParamFn**\n\nA function which either has _no_ parameters or any parameters it\ndoes have are _optional_ in a way that it is safe to call it without\nany parameters.\n\nTo make the runtime aware of this flexibility, a property `optionalParams`\nmust be set to **true**. To convert a regular function to be this kind of\nfunction you can use the `AsOptionalParamFn` utility.","tags":[]}],"deps":[],"refs":[],"symbolHash":2822433975,"updated":1723767904183},{"name":"OptionalKeys","fqn":"module::2557182093::OptionalKeys","filepath":"src/types/dictionary/OptionalKeys.ts","startLine":29,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"**OptionalKeys**`<T,[V]>`\n\nProvides a union type of the _keys_ in `T` which are\n**optional** properties.\n\n**Note:** you also may optionally filter further by specifying a value\nby the _value_ of the key and then only keys which are required AND\nwho extend `V` will be included in the union.\n\n**Related:** `OptionalKeys`, `RequiredProps` * Provides a union type of the _keys_ in `T` which are\n**required** properties.\n\n**Note:** you also may optionally filter further by specifying a value\nby the _value_ of the key and then only keys which are required AND\nwho extend `V` will be included in the union.\n\n**Related:** `RequiredKeys`, `RequiredProps`","tags":[]}],"deps":["module::1903151425::AnyObject","module::814973::Unset","module::4114441065::EmptyObject","module::1931245833::If","module::1364134543::IsEqual"],"refs":[],"symbolHash":36534952,"updated":1723767904261},{"name":"Optional","fqn":"module::1203900630::Optional","filepath":"src/types/string-literals/character-sets/Optional.ts","startLine":23,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Optional**`<T>`\n\nString literal utility which makes the text `T` either present\nor just an _empty string_ (aka, \"optional\").\n\n- if you send in an array of strings they will build a\nstring literal up left-to-right.","tags":[]}],"deps":["local::1182992045::Cascade"],"refs":[],"symbolHash":3185416578,"updated":1723767904464},{"name":"OpeningMarkPlus","fqn":"module::2722211357::OpeningMarkPlus","filepath":"src/types/string-literals/character-sets/quotation-marks/OpeningMark.ts","startLine":20,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**OpeningMarkPlus**\n\nAll opening marks including both generic single and double quotes, standard smart quotes and more specialized smart quotes.\n\n**Related:** `OpeningMark`,`ClosingMark`","tags":[]}],"deps":["module::2780001152::SingleQuote","module::4044303182::DoubleQuote","module::3619361615::LeftSingleMark","module::195061700::LeftDoubleMark","module::124669777::LeftReversedDoublePrime","module::3687251758::LeftHeavySingleTurned","module::116055513::LeftHeavyDoubleTurned","module::3200871420::FullWidthQuotation"],"refs":[],"symbolHash":33913499,"updated":1723767904469},{"name":"OpeningMark","fqn":"module::2422822833::OpeningMark","filepath":"src/types/string-literals/character-sets/quotation-marks/OpeningMark.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**OpeningMark**\n\nAny standard quote mark along with standard opening \"smart marks\".\n\n**Related:** `OpeningMarkPlus`,`ClosingMark`","tags":[]}],"deps":["module::2780001152::SingleQuote","module::4044303182::DoubleQuote","module::3619361615::LeftSingleMark","module::195061700::LeftDoubleMark"],"refs":[],"symbolHash":2051574719,"updated":1723767904469},{"name":"OpeningBracket","fqn":"module::1564945523::OpeningBracket","filepath":"src/types/string-literals/character-sets/brackets/OpeningBracket.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**OpeningBracket**","tags":[]}],"deps":[],"refs":[],"symbolHash":1116946607,"updated":1723767904468},{"name":"OnPass","fqn":"module::4242880761::OnPass","filepath":"src/types/boolean-logic/branching/OnPass.ts","startLine":93,"endLine":113,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TPass","type":"TPass"},{"name":"TRemap","type":"TRemap"}],"jsDocs":[{"comment":"**OnPass**`<TTest, TPass,[TRemap],[TFalse]>`\n\nBranching utility which evaluates `TTest` for being\n`never`, `false`, or an `ErrorCondition` and\npasses that through when it occurs.\n\nIn all other cases, the type of `TPass` is proxied through\nas the type.\n\n- the `TRemap` allows you to remap error conditions\nas well if needed","tags":[]}],"deps":["ext::2318994541::Partial","module::2403285159::OnPassRemap","module::3629498205::Constant","local::2391662311::Iterate","local::2391662311::Merge","module::4102577001::Keys","local::2391662311::Process"],"refs":[],"symbolHash":2697403930,"updated":1723767904246},{"name":"OkFrom","fqn":"module::2996635681::OkFrom","filepath":"src/types/functional/Result.ts","startLine":196,"endLine":199,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4215597801::Result"],"refs":[],"symbolHash":499106413,"updated":1723767904305},{"name":"ObjKeyDefn","fqn":"module::2626283383::ObjKeyDefn","filepath":"src/types/literals/Shape.ts","startLine":283,"endLine":283,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"An input type for defining an object's \"key\".\n\nNote: use of `FromDefn<T>` will translate this into the actual key value.","tags":[]}],"deps":["module::70377396::RecordKeyWideTokens","module::1473201238::ShapeCallback"],"refs":[],"symbolHash":4056533697,"updated":1723767904354},{"name":"ObjectToKvDict","fqn":"module::3137368657::ObjectToKvDict","filepath":"src/types/type-conversion/ObjectToKvDict.ts","startLine":17,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"}],"jsDocs":[{"comment":"**ObjectToKv**`<TObj>`\n\nType utility to convert an object to an array of object based key-value pairs.\n\nExample:\n```ts\n// readonly [ {key: \"foo\", value: 1} ]\ntype T = ObjectToKv<{ foo: 1 }>\n```","tags":[]}],"deps":["module::1903151425::AnyObject"],"refs":[],"symbolHash":602668639,"updated":1723767904501},{"name":"ObjectKey","fqn":"module::28062370::ObjectKey","filepath":"src/types/base-types/ObjectKey.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ObjectKey**\n\nThe union of `string` and `symbol` represents the valid key types for a\nobject/dictionary type.","tags":[]}],"deps":[],"refs":[],"symbolHash":132013492,"updated":1723767904154},{"name":"NumericSign","fqn":"module::203802629::NumericSign","filepath":"src/types/base-types/NumericSign.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NumericSign**\n\nA `+` or `-` to indicate the numeric sign of a number.","tags":[]}],"deps":[],"refs":[],"symbolHash":194300587,"updated":1723767904152},{"name":"NumericRange","fqn":"module::2835144029::NumericRange","filepath":"src/types/numeric-literals/NumericRange.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TLow","type":"TLow"},{"name":"THigh","type":"THigh"}],"jsDocs":[{"comment":"**NumericRange**`<TLow,THigh>`\n\nCreates a union type of numbers between `TLow` and `THigh`\n\n```ts\n// 2 | 3 | 4 | 5 | 6 | 7\ntype Range = NumericRange<2,7>;\n```","tags":[]}],"deps":["ext::2318994541::Exclude","local::1515442192::Process"],"refs":[],"symbolHash":1016846154,"updated":1723767904375},{"name":"NumericKeys","fqn":"module::622476471::NumericKeys","filepath":"src/types/lists/NumericKeys.ts","startLine":50,"endLine":54,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"**NumericKeys**<`TList`>\n\nWill provide a readonly tuple of numeric keys for \na given literal array and an empty array otherwise.\n\n```ts\ntype Arr = [\"foo\", \"bar\", \"baz\"];\n// readonly [0, 1, 2]\ntype T = NumericKeys<Arr>;\n```\n\n**Related:** `Keys`","tags":[]}],"deps":["module::2666698309::Tuple","local::2581725621::Process"],"refs":[],"symbolHash":770919189,"updated":1723767904332},{"name":"NumericCharZeroToTwo","fqn":"module::585714442::NumericCharZeroToTwo","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":21,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":491209844,"updated":1723767904458},{"name":"NumericCharZeroToThree","fqn":"module::297990847::NumericCharZeroToThree","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":22,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1432241786,"updated":1723767904458},{"name":"NumericCharZeroToOne","fqn":"module::3324267122::NumericCharZeroToOne","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":20,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2327863549,"updated":1723767904458},{"name":"NumericCharZeroToFour","fqn":"module::1065980192::NumericCharZeroToFour","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":23,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":29772112,"updated":1723767904458},{"name":"NumericCharZeroToFive","fqn":"module::1854592055::NumericCharZeroToFive","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":24,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3057166005,"updated":1723767904458},{"name":"NumericCharOneToTwo","fqn":"module::2473483716::NumericCharOneToTwo","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":27,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1642942222,"updated":1723767904458},{"name":"NumericCharOneToThree","fqn":"module::174741645::NumericCharOneToThree","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":28,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":835248494,"updated":1723767904458},{"name":"NumericCharOneToFour","fqn":"module::826505021::NumericCharOneToFour","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":29,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3349489231,"updated":1723767904458},{"name":"NumericCharOneToFive","fqn":"module::113310848::NumericCharOneToFive","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":30,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1915165547,"updated":1723767904458},{"name":"NumericChar","fqn":"module::1461185105::NumericChar","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NumericChar**\n\nNumeric string characters.\n\n**Related:** `NUMERIC_CHAR`, `Digit`","tags":[]}],"deps":[],"refs":[],"symbolHash":1603910675,"updated":1723767904458},{"name":"NumberLike","fqn":"module::517351863::NumberLike","filepath":"src/types/numeric-literals/NumberLike.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NumberLike**\n\nA type which represents a number whether it be a _number_ or\na string literal shaped as a number (aka, `${string}`).","tags":[]}],"deps":[],"refs":[],"symbolHash":2631926499,"updated":1723767904378},{"name":"NotNull","fqn":"module::1719629798::NotNull","filepath":"src/types/base-types/NotNull.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NotNull**\n\nRepresents **every** type except for the **null** value.","tags":[]}],"deps":["module::3396439809::Something"],"refs":[],"symbolHash":3745903450,"updated":1723767904148},{"name":"NotLength","fqn":"module::2301366128::NotLength","filepath":"src/types/boolean-logic/operators/NotLength.ts","startLine":8,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"U","type":"U"}],"jsDocs":[{"comment":"**NotLength**`<T>`\n\nBoolean operator which detects whether `T` is _not_ a certain length.","tags":[]}],"deps":["module::1931245833::If","module::1690887405::IsNotEqual","module::1195601881::Length"],"refs":[],"symbolHash":3817929865,"updated":1723767904221},{"name":"Nothing","fqn":"module::2660372808::Nothing","filepath":"src/types/base-types/Nothing.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Nothing**\n\nThis type represents a type which holds no real value; this\nis a union between `null` and `undefined`.","tags":[]}],"deps":[],"refs":[],"symbolHash":3235983590,"updated":1723767904148},{"name":"NotEqual","fqn":"module::1778292071::NotEqual","filepath":"src/types/boolean-logic/operators/NotEqual.ts","startLine":8,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**NotEqual**`<A,B>`\n\nBoolean utility to determine whether two values are **not** equal.","tags":[]}],"deps":["module::1364134543::IsEqual"],"refs":[],"symbolHash":334697700,"updated":1723767904199},{"name":"Not","fqn":"module::1836810778::Not","filepath":"src/types/boolean-logic/combinators/Not.ts","startLine":57,"endLine":66,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TNotBoolean","type":"TNotBoolean"}],"jsDocs":[{"comment":"**Not**`<T,[TError]>`\n\nA boolean negation that can work on both a single value or an\ntuple of values.\n\n```ts\n// false\ntype Single = Not<true>;\n// [ false, true, boolean ]\ntype Multi = Not<[true,false,boolean]>;\n```","tags":[]}],"deps":["ext::2318994541::Exclude","module::3860303104::As","local::803441450::Negate","module::2984222131::LogicFunction","ext::2318994541::ReturnType","local::803441450::NegateTuple"],"refs":[],"symbolHash":2768577953,"updated":1723767904238},{"name":"NonZeroNumericChar","fqn":"module::3610668586::NonZeroNumericChar","filepath":"src/types/string-literals/character-sets/NumericChar.ts","startLine":17,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NonZeroNumericChar**\n\nNumeric string characters with the exception of \"0\".","tags":[]}],"deps":[],"refs":[],"symbolHash":4107337644,"updated":1723767904458},{"name":"NonStringKeys","fqn":"module::4055056402::NonStringKeys","filepath":"src/types/dictionary/NonStringKeys.ts","startLine":13,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**NonStringKeys**`<T>`\n\nBuilds a union type of the keys of `T` which are _not_\n_string_ keys. This can be useful as _symbols_ can also \nbe seen as valid keys and these keys are often used for\n\"identity\" purposes.\n\n**Related:** `StringKeys`","tags":[]}],"deps":["module::1903151425::AnyObject","ext::2318994541::Readonly"],"refs":[],"symbolHash":404344830,"updated":1723767904259},{"name":"NonNumericKeys","fqn":"module::3481377388::NonNumericKeys","filepath":"src/types/dictionary/NonNumericKeys.ts","startLine":6,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**NonNumericKeys**`<T>`\n\nThe keys in an array/object `T` which are _not_ numeric keys.","tags":[]}],"deps":["ext::2318994541::Readonly"],"refs":[],"symbolHash":190835649,"updated":1723767904281},{"name":"NonArray","fqn":"module::3658738056::NonArray","filepath":"src/types/base-types/NonArray.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NonArray**\n\nA base type which represents any value _other_ than an array or tuple.","tags":[]}],"deps":["module::186693758::Dictionary","ext::2318994541::Map","ext::2318994541::Set","ext::2318994541::WeakMap"],"refs":[],"symbolHash":2416270007,"updated":1723767904155},{"name":"NonAlphaChar","fqn":"module::2663867817::NonAlphaChar","filepath":"src/types/string-literals/character-sets/NonAlpha.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Non-alphabetic characters including whitespace, string numerals, and","tags":[]}],"deps":["module::961086858::Whitespace","module::4124256689::Punctuation","module::1881292962::NumericChar","module::3495830455::Bracket","module::2771295008::SpecialChar"],"refs":[],"symbolHash":2935612812,"updated":1723767904443},{"name":"NextDigit","fqn":"module::239581532::NextDigit","filepath":"src/types/numeric-literals/NextDigit.ts","startLine":23,"endLine":35,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**NextDigit**`<T>`\n\nGiven a numeric digit, this utility provides the next numeric digit in sequence.\n\n- this includes the overflow condition of `9` -> `0`\n- a string literal digit can be passed in as well and the next string literal\ndigit will be returned\n```ts\n// 5\ntype N = NextDigit<4>;\n// \"5\"\ntype S = NextDigit<\"4\">;\n```","tags":[]}],"deps":["module::2660456408::Digit","module::1881292962::NumericChar","module::577891714::ToString","module::116081596::AsNumber"],"refs":[],"symbolHash":2476476348,"updated":1723767904378},{"name":"NegDelta","fqn":"module::3632003452::NegDelta","filepath":"src/types/numeric-literals/Delta.ts","startLine":59,"endLine":70,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3330042255::NumberLike","module::938268314::ParseInt","local::4278797605::ProcessNeg","local::4278797605::AsLit"],"refs":[],"symbolHash":2201059694,"updated":1723767904380},{"name":"Negative","fqn":"module::2433345568::Negative","filepath":"src/types/numeric-literals/Negative.ts","startLine":8,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Negative**`<T>`\n\nEnsures that the number represented by `T` is a _negative_ number.","tags":[]}],"deps":["module::1897058928::AsString","module::116081596::AsNumber","module::1640529169::IsNegativeNumber"],"refs":[],"symbolHash":2829800686,"updated":1723767904375},{"name":"NarrowObject","fqn":"module::1392947473::NarrowObject","filepath":"src/types/base-types/NarrowObject.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"N","type":"N"}],"jsDocs":[{"comment":"**NarrowObject**`<N>`\n\nDefines a `Record` type who's values extends `Narrowable`. This type is most\ncommonly used in runtime settings where a function wants to _extend_ this\ntype to ensure that the received values are as narrow as could be available\nfrom the input source.","tags":[]}],"deps":["module::3605609985::Narrowable","ext::2318994541::Record","module::4119350992::ObjectKey"],"refs":[],"symbolHash":1493043882,"updated":1723767904154},{"name":"NarrowlyContains","fqn":"module::3914280906::NarrowlyContains","filepath":"src/types/boolean-logic/operators/NarrowlyContains.ts","startLine":13,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TContains","type":"TContains"}],"jsDocs":[{"comment":"**NarrowlyContains**`<TList, TContains>`\n\nType utility which checks whether a type `T` exists within an \narray `A`. Result is `true` if `T` _extends_ any element in \n`A` making it match widely against `A`. If you prefer a wider \nmatch you can use `Contains<T,A>` instead.\n\n**Related:** `Contains`, `ContainsAll`, `ContainsSome`","tags":[]}],"deps":["module::1364134543::IsEqual","module::2295046820::First","module::798798449::AfterFirst"],"refs":[],"symbolHash":1038488170,"updated":1723767904198},{"name":"NarrowDictProps","fqn":"module::2654776828::NarrowDictProps","filepath":"src/types/runtime-types/Dict.ts","startLine":38,"endLine":46,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::500662101::RemoveMarked","module::3629498205::Constant"],"refs":[],"symbolHash":2267750195,"updated":1723767904405},{"name":"NarrowableScalar","fqn":"module::2879066229::NarrowableScalar","filepath":"src/types/literals/NarrowableScalar.ts","startLine":7,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NarrowableScalar**\n\nA union of all types which are not \"containers\" (aka, objects and arrays) so that\nproperties like `{}` and `object` causing conflicts.","tags":[]}],"deps":[],"refs":[],"symbolHash":3419036599,"updated":1723767904344},{"name":"NarrowableDefined","fqn":"module::1206543365::NarrowableDefined","filepath":"src/types/literals/NarrowableDefined.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NarrowableDefined**\n\nPrecisely the same as the `Narrowable` type but without _undefined_ as an option\n\n**Related:** `Narrowable`, `NarrowableScalar`","tags":[]}],"deps":["module::4114441065::EmptyObject"],"refs":[],"symbolHash":3827223657,"updated":1723767904344},{"name":"Narrowable","fqn":"module::2854370400::Narrowable","filepath":"src/types/literals/Narrowable.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Narrowable**\n\nA union of types which when used as a generic's base value helps to extract\nthe most narrow definition available.\n\n**Related:** `NarrowableDefined`, `NarrowableScalar`","tags":[]}],"deps":[],"refs":[],"symbolHash":1303512912,"updated":1723767904344},{"name":"Narrow","fqn":"module::554659893::Narrow","filepath":"src/types/literals/Narrow.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Narrow**\n\nJust like the `Narrowable` type, this type is used in the _extends_\nclause during runtime to extract the narrowest types possible. Unlike\nthe `Narrowable` type, **Narrow** _excludes_ **symbols**.","tags":[]}],"deps":["ext::2318994541::Exclude","module::3605609985::Narrowable"],"refs":[],"symbolHash":937763925,"updated":1723767904344},{"name":"NamingConvention","fqn":"module::1121638940::NamingConvention","filepath":"src/types/string-literals/casing/NamingConvention.ts","startLine":10,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NamingConvention**`<[T]>`\n\nA type union between all common naming conventions for\nvariables in programming.\n\n**Related:** `NamingModifier`","tags":[]}],"deps":[],"refs":[],"symbolHash":2073429676,"updated":1723767904480},{"name":"NamedColorMinimal","fqn":"module::3152367782::NamedColorMinimal","filepath":"src/types/literals/Color.ts","startLine":30,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NamedColorMinimal**\n\nA minimal set of _named_ colors recognized by CSS and HTML.","tags":[]}],"deps":[],"refs":[],"symbolHash":424109566,"updated":1723767904342},{"name":"NamedColor","fqn":"module::841632564::NamedColor","filepath":"src/types/literals/Color.ts","startLine":23,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**NamedColor**\n\nMost if not all CSS/HTML _named_ colors","tags":[]}],"deps":["module::1853643450::NamedColor_Gray","module::3258999115::NamedColor_White","module::3010435364::NamedColor_Brown","module::3732084026::NamedColor_Blue","module::3560199473::NamedColor_Cyan","module::3178349798::NamedColor_Green","module::1851902873::NamedColor_Yellow","module::1111808991::NamedColor_Orange","module::2592338049::NamedColor_Red","module::2044115328::NamedColor_Purple","module::1376523986::NamedColor_Pink"],"refs":[],"symbolHash":169778700,"updated":1723767904342},{"name":"MutablePropsExclusive","fqn":"module::2794774486::MutablePropsExclusive","filepath":"src/types/dictionary/MakePropsMutable.ts","startLine":46,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"M","type":"M"}],"jsDocs":[{"comment":"**MutablePropsExclusive**`<T,M>`\n\nGiven a dictionary of type `<T>`, this utility function will\nmake the properties represented by `M` _mutable_ and all others\nimmutable.\n\n```ts\n// { foo: string, readonly bar: number, readonly baz: number }\ntype Example = MutableProps<{\n   readonly foo: string,\n   bar?: number,\n   readonly baz: number\n}, \"foo\">;\n```\n\n**Related:** `MutableProps`","tags":[]}],"deps":["module::1903151425::AnyObject","module::4119350992::ObjectKey","module::3435872486::ExpandRecursively","module::13543941::Mutable","module::6736587::WithKeys","ext::2318994541::Readonly","module::2735667252::WithoutKeys","module::4284904442::AsArray"],"refs":[],"symbolHash":279632678,"updated":1723767904280},{"name":"MutableProps","fqn":"module::217019826::MutableProps","filepath":"src/types/dictionary/MutableProps.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**MutableProps**`<T>`\n\nReduces an object down to just the key/value pairs which\nare mutable.","tags":[]}],"deps":["module::186693758::Dictionary","ext::2318994541::Omit","module::2806756356::ReadonlyKeys"],"refs":[],"symbolHash":1746839525,"updated":1723767904281},{"name":"Mutable","fqn":"module::3904805740::Mutable","filepath":"src/types/type-conversion/Mutable.ts","startLine":27,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Mutable**`<T>`\n\nMakes a readonly value to a mutable value without\nwidening the type.","tags":[]}],"deps":["local::4165892048::MutableArray","module::2943445649::IsObjectLiteral","local::4165892048::MutableObject"],"refs":[],"symbolHash":4195623853,"updated":1723767904498},{"name":"MultiChoiceCallback","fqn":"module::1001616331::MultiChoiceCallback","filepath":"src/types/literals/Choices.ts","startLine":216,"endLine":218,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TApi","type":"TApi"}],"jsDocs":[{"comment":"**MultiChoiceCallback**`<TApi>`\n\nProvides the typing so that you can easily incorporate a \"choice\"\nas a parameter to your functions. \n\nIt is intended to be used with the runtime utility `handleDoneFn()` \nso that if a user doesn't terminate their callback with a call to\n`.done()` then this is done for them.","tags":[]}],"deps":["module::2889569332::MultipleChoice","module::1548065869::HandleDoneFn","ext::2318994541::ReturnType"],"refs":[],"symbolHash":2231088206,"updated":1723767904363},{"name":"MonthThenDate_Simple","fqn":"module::69548409::MonthThenDate_Simple","filepath":"src/types/string-literals/Date.ts","startLine":93,"endLine":93,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3724373849,"updated":1723767904418},{"name":"MonthAbbrThenDateAndYear","fqn":"module::1683400198::MonthAbbrThenDateAndYear","filepath":"src/types/string-literals/Date.ts","startLine":120,"endLine":120,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MonthAbbrThenDateAndYear**\n\nThe month's name -- in abbreviated form -- followed by the\nday in the month and the year.\n\n- you may optionally add a `MonthPostfix` descriptor\n- the year must be preceded by `, `\n\n```ts\nconst date: MonthAbbrThenDateAndYear[] = [\"Jun 6, 2020\", \"Jun 06, 2020\", \"Jun 6th, 2020\"]\n```","tags":[]}],"deps":["module::2407715061::MonthAbbr","module::4119961824::MonthDay","module::3886584704::MonthPostfix","module::3926647943::Year"],"refs":[],"symbolHash":302489654,"updated":1723767904419},{"name":"MonthAbbrThenDate","fqn":"module::1799910383::MonthAbbrThenDate","filepath":"src/types/string-literals/Date.ts","startLine":105,"endLine":105,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**MonthAbbrThenDate**\n\nThe month's name -- in abbreviated form -- followed by the\nday in the month. You may optionally add a `MonthPostfix` descriptor.\n\n```ts\nconst date: MonthAbbrThenDate[] = [\"Jun 6\", \"Jun 06\", \"Jun 6th\"]\n```","tags":[]}],"deps":["module::2407715061::MonthAbbr","module::4119961824::MonthDay","module::3886584704::MonthPostfix"],"refs":[],"symbolHash":136737653,"updated":1723767904418},{"name":"Milliseconds","fqn":"module::848300530::Milliseconds","filepath":"src/types/string-literals/Time.ts","startLine":74,"endLine":76,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"}],"jsDocs":[{"comment":"**Milliseconds**`<[TStr]>`\n\nProvides a typing for the milliseconds component of Time (aka, 000 to 999).","tags":[]}],"deps":["module::3923554373::TypeStrength","module::1881292962::NumericChar"],"refs":[],"symbolHash":2090557260,"updated":1723767904431},{"name":"MilitaryTime","fqn":"module::2680280023::MilitaryTime","filepath":"src/types/string-literals/Time.ts","startLine":257,"endLine":286,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TResolution","type":"TResolution"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**MilitaryTime**\n\nProvides a type for military time.\n\n- by default the resolution is \"all\" but can be modified with `TResolution`\n- when _all_ time resolutions are allowed the strength is always set to \"simple\"\n- in all other cases, `TStr` will specify the strength of the particular time \nresolution","tags":[]}],"deps":["module::245352994::TimeResolution","module::4059297044::MilitaryTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::4145234592::TimeInMinutes","module::3822532463::TimeInSeconds","module::3707014037::TimeInMilliseconds","module::2871470652::HoursMinutes","module::2311575305::HoursMinutesSeconds","module::3505775362::HoursMinutesSecondsMilliseconds"],"refs":[],"symbolHash":1877366487,"updated":1723767904439},{"name":"MergeTuples","fqn":"module::2570116474::MergeTuples","filepath":"src/types/type-conversion/Merge.ts","startLine":68,"endLine":72,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDefault","type":"TDefault"},{"name":"TOverride","type":"TOverride"},{"name":"TKey","type":"TKey"}],"jsDocs":[{"comment":"**MergeTuples**\n\nMerges two tuple arrays by position in the tuple:\n\n- if `TOverride` is longer than `TDefault` then no defaults will be provided\n- if `TDefault` is longer than `TOverride` then `TDefault` will be extended","tags":[]}],"deps":["module::3605609985::Narrowable","local::1370833687::MergeTuplesAcc"],"refs":[],"symbolHash":967175171,"updated":1723767904499},{"name":"MergeScalars","fqn":"module::390127424::MergeScalars","filepath":"src/types/type-conversion/Merge.ts","startLine":36,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDefault","type":"TDefault"},{"name":"TOverride","type":"TOverride"},{"name":"TEmpty","type":"TEmpty"}],"jsDocs":[{"comment":"**MergeScalars**`<TDefault, TOverride, [TEmpty]>`\n\nProvides a `Scalar` value by evaluating whether `TDefault`\nand `TOverride` extends `TEmpty` (which is `null` | `undefined`\nby default).\n\nNote: if both `TDefault` and `TOverride` are _undefined_ then the\nexiting type will be _undefined_ (which isn't strictly a `Scalar` \nvalue).","tags":[]}],"deps":["module::3252133680::Scalar"],"refs":[],"symbolHash":2704283165,"updated":1723767904499},{"name":"MergeObjects","fqn":"module::2897147719::MergeObjects","filepath":"src/types/type-conversion/MergeObjects.ts","startLine":45,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDef","type":"TDef"},{"name":"TOverride","type":"TOverride"}],"jsDocs":[{"comment":"**MergeObjects**`<TDefault,TOverride>`\n\nA type utility that _shallowly merges_ two object types.","tags":[]}],"deps":["module::186693758::Dictionary","module::761993671::Nothing","local::3892338325::Process","module::1478282086::CombinedKeys","module::3860303104::As","module::1931245833::If","module::3086588767::IsNothing","module::4114441065::EmptyObject"],"refs":[],"symbolHash":976097180,"updated":1723767904498},{"name":"MergeKVs","fqn":"module::233030137::MergeKVs","filepath":"src/types/dictionary/MergeKVs.ts","startLine":28,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"}],"jsDocs":[{"comment":"**MergeKVs**`<TKVs>`\n\nReceives an array of `Dictionary` types and merges this to \nsingle dictionary.\n\n**Note:** _if key is repeated in the set, only the first one's value will be retained_","tags":[]}],"deps":["local::341612160::Process"],"refs":[],"symbolHash":1779100506,"updated":1723767904287},{"name":"Merge","fqn":"module::1328072244::Merge","filepath":"src/types/type-conversion/Merge.ts","startLine":102,"endLine":123,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDefault","type":"TDefault"},{"name":"TOverride","type":"TOverride"}],"jsDocs":[{"comment":"**Merge**`<TDefault,TOverride>`\n\nA type utility that will merge any two like values together. \n\n**Related:** `MergeObjects`, `MergeScalars`, `MergeTuples`","tags":[]}],"deps":["module::3900322140::AreSameType","local::1370833687::Process","module::2376902257::Or","module::3086588767::IsNothing","module::83169107::And","module::3686363877::Throw"],"refs":[],"symbolHash":3643960817,"updated":1723767904499},{"name":"MaybeRef","fqn":"module::743406059::MaybeRef","filepath":"src/types/dictionary/MaybeRef.ts","startLine":17,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**MaybeRef**`<T>`\n\nUsed to represent a type which is either of the two:\n\n- `T`\n- `VueRef<T>`\n\n**Related:** `IsRef`, `IfRef`\n```ts\n// number | VueRef<number>\ntype T = MaybeRef<number>;\n```","tags":[]}],"deps":["module::984984219::VueRef"],"refs":[],"symbolHash":3813481468,"updated":1723767904258},{"name":"MaybeError","fqn":"module::3043824::MaybeError","filepath":"src/types/boolean-logic/operators/MaybeError.ts","startLine":28,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**MaybeError**`<T>`\n\nTests whether T is part of a union and if it is then\ntests whether any element of that union is an error, where\nan error is:\n\n- `ErrorCondition`\n- extends JS's `Error` class\n\nMaybeError returns **false** if there _is_ an error; it is\npositive only when it _might_ be an error.\n\n**Related**: `IsError`, `IsErrorCondition`","tags":[]}],"deps":["module::3393438424::IsUnion","local::2692443845::AnyError","module::458105997::UnionToTuple"],"refs":[],"symbolHash":2495803758,"updated":1723767904235},{"name":"MapValueDefn","fqn":"module::1972099859::MapValueDefn","filepath":"src/types/literals/Shape.ts","startLine":290,"endLine":290,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1473201238::ShapeCallback","module::4069020921::WideTokenNames"],"refs":[],"symbolHash":364674309,"updated":1723767904355},{"name":"MapperApi","fqn":"module::3945614117::MapperApi","filepath":"src/types/dictionary/MapTo.ts","startLine":196,"endLine":275,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1999165230::MapConfig","module::3042253816::OptRequired","module::3538219116::MapCardinalityIllustrated","module::161123951::ConfiguredMap","module::2280612438::AsFinalizedConfig","module::3986957099::DefaultOneToManyMapping","local::3073043475::MapCardinalityConfig","module::219196777::DefaultOneToOneMapping","module::216911648::DefaultManyToOneMapping"],"refs":[],"symbolHash":2057349694,"updated":1723767904270},{"name":"MapOutputFrom","fqn":"module::3190109358::MapOutputFrom","filepath":"src/types/dictionary/MapTo.ts","startLine":463,"endLine":463,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**MapOutputFrom**\n\nType utility which extracts the output [`O`] type from a fully configured `Mapper`","tags":[]}],"deps":["module::2390256795::Mapper"],"refs":[],"symbolHash":3992312513,"updated":1723767904278},{"name":"MapKeyDefn","fqn":"module::1622819864::MapKeyDefn","filepath":"src/types/literals/Shape.ts","startLine":289,"endLine":289,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1473201238::ShapeCallback","module::4069020921::WideTokenNames"],"refs":[],"symbolHash":3097806195,"updated":1723767904354},{"name":"MapInputFrom","fqn":"module::27804351::MapInputFrom","filepath":"src/types/dictionary/MapTo.ts","startLine":455,"endLine":455,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**MapInputFrom**\n\nType utility which extracts the `I` type from a fully configured `Mapper`","tags":[]}],"deps":["module::2390256795::Mapper"],"refs":[],"symbolHash":879244384,"updated":1723767904278},{"name":"MapError","fqn":"module::2327730528::MapError","filepath":"src/types/errors/MapError.ts","startLine":13,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TError","type":"TError"},{"name":"TKind","type":"TKind"},{"name":"TUtility","type":"TUtility"},{"name":"TGeneric","type":"TGeneric"}],"jsDocs":[{"comment":"**MapError**`<TError,TUtility,[TGeneric]>`\n\nAllows a type utility which receives an `ErrorCondition` to\nproxy that through while changing the \"type\" of error to \nwhatever is appropriate now in this new scope of execution.\n\n**Related:** `ProxyError`","tags":[]}],"deps":["module::729484003::ErrorConditionShape","module::3686363877::Throw"],"refs":[],"symbolHash":1773946740,"updated":1723767904297},{"name":"MapCardinalityFrom","fqn":"module::2532334683::MapCardinalityFrom","filepath":"src/types/dictionary/MapTo.ts","startLine":471,"endLine":475,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**MapCardinalityFrom**\n\nType utility which extracts _cardinality_ of a `Mapper`'s inputs to outputs","tags":[]}],"deps":["module::2390256795::Mapper","module::4096635909::FinalizedMapConfig","module::3042253816::OptRequired"],"refs":[],"symbolHash":2257702225,"updated":1723767904279},{"name":"MapCardinality","fqn":"module::4088374013::MapCardinality","filepath":"src/types/dictionary/MapTo.ts","startLine":59,"endLine":66,"scope":"module","flags":["None","RegularEnum","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[{"comment":"Expresses relationship between inputs/outputs:","tags":[]}],"deps":[],"refs":[],"symbolHash":217852513,"updated":1723767904263},{"name":"MakePropsMutable","fqn":"module::926732148::MakePropsMutable","filepath":"src/types/dictionary/MakePropsMutable.ts","startLine":22,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TMutProps","type":"TMutProps"}],"jsDocs":[{"comment":"**MakePropsMutable**`<TObj,TMutProps>`\n\nGiven a dictionary of type `<TObj>`, this utility function will\nmake the properties of `TMutProps` _mutable_. `TMutProps` can be\na union type (as shown below) or a union.\n\n```ts\n// { foo: string, bar?: number, readonly baz: number }\ntype Example = MutableProps<{\n   readonly foo: string,\n   bar?: number,\n   readonly baz: number\n}, \"foo\" | \"bar\">;\n```\n\n**Related:** `MutablePropsExclusive`","tags":[]}],"deps":["module::1903151425::AnyObject","module::4119350992::ObjectKey","module::818348575::SimplifyObject","module::13543941::Mutable","module::6736587::WithKeys","module::2735667252::WithoutKeys"],"refs":[],"symbolHash":2292753976,"updated":1723767904280},{"name":"MakeKeysRequired","fqn":"module::876239203::MakeKeysRequired","filepath":"src/types/dictionary/MakeKeysRequired.ts","startLine":13,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"}],"jsDocs":[{"comment":"**MakeKeysRequired**`<TObj, TKeys>`\n\nMakes a set of keys on a known object `TObj` become\n_optional_ parameters while leaving the other properties\n\"as is\".\n\n**Related:** `MakeKeysOptional`","tags":[]}],"deps":["module::186693758::Dictionary","module::4119350992::ObjectKey","module::2994160504::ExpandDictionary","module::2735667252::WithoutKeys","module::6736587::WithKeys"],"refs":[],"symbolHash":711624130,"updated":1723767904289},{"name":"MakeKeysOptional","fqn":"module::2369373132::MakeKeysOptional","filepath":"src/types/dictionary/MakeKeysOptional.ts","startLine":40,"endLine":49,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"}],"jsDocs":[{"comment":"**MakeKeysOptional**`<TObj, TKeys>`\n\nMakes a set of keys on a known object `TObj` become\n_optional_ parameters while leaving the other properties\n\"as is\".\n\n**Related:** `MakeKeysRequired`","tags":[]}],"deps":["module::186693758::Dictionary","module::4119350992::ObjectKey","local::2355838702::ProcessTupleKeys","module::698625611::IsWideUnion","local::2355838702::ProcessUnionKeys"],"refs":[],"symbolHash":3619284344,"updated":1723767904289},{"name":"LowerAlphaChar","fqn":"module::4262255164::LowerAlphaChar","filepath":"src/types/string-literals/character-sets/LowerAlphaChar.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**LowerAlphaChar**\n\nLowercase alphabetic character.\n\n**Related:** `AlphaChar`, `UpperAlphaChar`, `LowerAlpha`","tags":[]}],"deps":[],"refs":[],"symbolHash":1664496190,"updated":1723767904444},{"name":"LowerAllCaps","fqn":"module::2013858880::LowerAllCaps","filepath":"src/types/string-literals/casing/LowerAllCaps.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**LowerAllCaps**`<T>\n\nType utility which will convert an \"all caps\" string to a string where all characters are lowercase; in \nall other cases it will do nothing and simply return `T` as `T`.\n\n**Related:** `RaiseAllLowercase`","tags":[]}],"deps":["module::2922514109::IsAllCaps","ext::2318994541::Lowercase"],"refs":[],"symbolHash":194597199,"updated":1723767904480},{"name":"LogicFunction","fqn":"module::3542140458::LogicFunction","filepath":"src/types/functions/LogicFunction.ts","startLine":7,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TReturns","type":"TReturns"}],"jsDocs":[{"comment":"**LogicFunction**\n\nA function -- with _optional_ parameters -- which returns a boolean value.","tags":[]}],"deps":[],"refs":[],"symbolHash":1798205222,"updated":1723767904309},{"name":"LogicalReturns","fqn":"module::3368248267::LogicalReturns","filepath":"src/types/lists/LogicalReturns.ts","startLine":25,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValues","type":"TValues"},{"name":"_TParams","type":"_TParams"}],"jsDocs":[{"comment":"**LogicalReturns**`<TValues, TParams>`\n\nGiven a known tuple of values, this utility will reduce it to\nanother tuple of items which are either a _boolean type_ or a function\nwith a boolean return. In the latter case the function's return value\nwill be represented in the Tuple.\n\n**Related**: `ReturnTypes` and `TruthyReturns`","tags":[]}],"deps":["module::2984222131::LogicFunction","local::3032479891::Process"],"refs":[],"symbolHash":3364082408,"updated":1723767904331},{"name":"LogicalCombinator","fqn":"module::2054959::LogicalCombinator","filepath":"src/types/boolean-logic/LogicalCombinator.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Expresses the _type_ of logical combinator being used","tags":[]}],"deps":[],"refs":[],"symbolHash":1021697711,"updated":1723767904192},{"name":"LocalPhoneNumber","fqn":"module::3680450264::LocalPhoneNumber","filepath":"src/types/string-literals/character-sets/phone/LocalPhoneNumber.ts","startLine":12,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDelimiter","type":"TDelimiter"}],"jsDocs":[{"comment":"**LocalPhoneNumber**`<[TDelimiter]>`\n\nProvides a shape for phone numbers local a region of country that do\nnot have a _country code_ designation nor what is referred to as the\n\"area code\" in the USA.\n\n**Related:** `CountryPhoneNumber`, `InternationalPhoneNumber`, `PhoneNumber`","tags":[]}],"deps":["module::3074325429::PhoneNumberDelimiter","module::1881292962::NumericChar"],"refs":[],"symbolHash":193719790,"updated":1723767904476},{"name":"List","fqn":"module::3125092540::List","filepath":"src/types/base-types/List.ts","startLine":25,"endLine":386,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"ID","type":"ID"}],"jsDocs":[{"comment":"**List**`<T,S>`\n\nA _list_ of elements. Meant to behave precisely as \n[Javascript's Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array) \nbut with better behavior when using with `let` or `var` \nvariable declarations (versus `const` which is semantically peculiar).","tags":[]}],"deps":["ext::2318994541::Symbol","ext::2318994541::Iterator","module::511710969::Fail","module::2933755573::IsInteger","module::4284904442::AsArray","module::3580587573::AnyFunction","local::3344715809::ShallowCopy","module::3529663403::Flatten","ext::2318994541::ReturnType","module::1952920049::BCP47","module::186693758::Dictionary","local::3344715809::New"],"refs":[],"symbolHash":4129663556,"updated":1723767904180},{"name":"LikeRegExp","fqn":"module::380909531::LikeRegExp","filepath":"src/types/base-types/LikeRegExp.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**LikeRegExp**\n\nIs either a real Regular Expression or a string\nthat has been has been validated it _can_ be a\nregular expression with utilities like `isLikeRegExp()`","tags":[]}],"deps":["ext::2318994541::RegExp"],"refs":[],"symbolHash":3190664394,"updated":1723767904180},{"name":"LifoQueue","fqn":"module::2714885611::LifoQueue","filepath":"src/types/queues/LifoQueue.ts","startLine":7,"endLine":39,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TType","type":"TType"}],"jsDocs":[{"comment":"A \"Last In, First out\" queue (**LIFO**)","tags":[]}],"deps":["module::1695495442::FixedLengthArray","ext::2318994541::Symbol","ext::2318994541::Iterator"],"refs":[],"symbolHash":983480973,"updated":1723767904382},{"name":"LessThanOrEqual","fqn":"module::3170728113::LessThanOrEqual","filepath":"src/types/numeric-literals/LessThanOrEqual.ts","startLine":24,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**LessThanOrEqual**`<A,B>`\n\nBoolean operator which checks whether `A` is \n_less than_ `B`.\n\n- Note: this solution is cheap and cheerful and doesn't\ntry to address negative numbers or other edge cases","tags":[]}],"deps":["local::2501721151::Calc"],"refs":[],"symbolHash":1705405359,"updated":1723767904375},{"name":"LessThan","fqn":"module::268482216::LessThan","filepath":"src/types/numeric-literals/LessThan.ts","startLine":20,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**LessThan**`<A,B>`\n\nBoolean operator which checks whether `A` is \n_less than_ `B`.\n\n- Note: this solution is cheap and cheerful and doesn't\ntry to address negative numbers or other edge cases","tags":[]}],"deps":["local::57676528::Calc"],"refs":[],"symbolHash":3517392138,"updated":1723767904375},{"name":"Length","fqn":"module::2242738910::Length","filepath":"src/types/lists/Length.ts","startLine":39,"endLine":64,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Utility type which returns the length of:\n\n- an _array_ (provides the number of elements)\n- an _object_ (provides the number of keys)\n- a _string_ (provides the number of chars)\n- a _number_ (it will provide the number of digits, excluding `-` if present)\n\n```ts\ntype Three = Length<[ \"a\", \"b\", \"c\" ]>;\n```","tags":[]}],"deps":["module::2872591658::Container","local::1822106442::ProcessString","module::603953565::Abs","module::1931245833::If","module::2376902257::Or","module::1364134543::IsEqual","local::1822106442::_Keys","module::4119350992::ObjectKey"],"refs":[],"symbolHash":4127207672,"updated":1723767904324},{"name":"LeftWhitespace","fqn":"module::906421479::LeftWhitespace","filepath":"src/types/type-conversion/LeftWhitespace.ts","startLine":11,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"Provides the _left_ whitespace of a string\n```ts\n// \"\\n\\t \"\ntype T = LeftWhitespace<\"\\n\\t foobar\">;\n```","tags":[]}],"deps":["module::3977136121::Replace","module::3763876751::TrimLeft"],"refs":[],"symbolHash":3567867353,"updated":1723767904500},{"name":"LeftSingleMark","fqn":"module::2799739733::LeftSingleMark","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":23,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**LeftSingleMark**\n\nStandard left smart single quote.","tags":[]}],"deps":[],"refs":[],"symbolHash":3808181535,"updated":1723767904468},{"name":"LeftReversedDoublePrime","fqn":"module::1794324230::LeftReversedDoublePrime","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":37,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**LeftReversedDoublePrime**\n\nLeft smart quote which has glyphs above the tail. Requires a \nunicode character of two bytes.","tags":[]}],"deps":[],"refs":[],"symbolHash":3941854980,"updated":1723767904468},{"name":"LeftLowDoublePrime","fqn":"module::2476065749::LeftLowDoublePrime","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":68,"endLine":68,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":598998989,"updated":1723767904469},{"name":"LeftHeavySingleTurned","fqn":"module::1968214746::LeftHeavySingleTurned","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":51,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**LeftHeavySingleTurned**\n\nSpecialized single left smart quote.","tags":[]}],"deps":[],"refs":[],"symbolHash":2380366476,"updated":1723767904468},{"name":"LeftHeavyDoubleTurned","fqn":"module::3771934272::LeftHeavyDoubleTurned","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":60,"endLine":60,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":34631122,"updated":1723767904468},{"name":"LeftDoubleMark","fqn":"module::4116620783::LeftDoubleMark","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**LeftDoubleMark**\n\nStandard left smart double quote in superscript position and glyph below\nthe tail.","tags":[]}],"deps":[],"refs":[],"symbolHash":2657111608,"updated":1723767904468},{"name":"Left","fqn":"module::3145283644::Left","filepath":"src/types/functional/Left.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Left**<T>\n\nExtracts the **left** value from a `LeftRight`.","tags":[]}],"deps":["module::1190632890::LeftRight"],"refs":[],"symbolHash":3346365731,"updated":1723767904299},{"name":"LastOfEach","fqn":"module::1838554465::LastOfEach","filepath":"src/types/tuples/LastOfEach.ts","startLine":14,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**LastOfEach**`<TList>`\n\nExpects `TList` to consist of an array of arrays and then this utility will reduce\nthis to a _tuple_ of all the _last_ elements in `TList`\n\n```ts\n// [1, 2]\ntype A = LastOfEach<[ [\"foo\", 1], [\"bar\", 2] ]>;\n```","tags":[]}],"deps":["module::3431685797::Last"],"refs":[],"symbolHash":2283924807,"updated":1723767904485},{"name":"LastChar","fqn":"module::2871368516::LastChar","filepath":"src/types/string-literals/LastChar.ts","startLine":27,"endLine":35,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"}],"jsDocs":[{"comment":"**LastChar**`<TContent>`\n\nWhen `TContent` extends a _string_:\n  - will return the last character in a string literal\n  - returns `string` when a wide type is encountered\n  - returns `never` when an empty string is passed in\n\nWhen `TContent` is a tuple of strings:\n  - each item will be processed as described above\n\n**Related:** `FirstChar`, `AfterFirstChar`","tags":[]}],"deps":["local::463349222::Iterate","local::463349222::Process"],"refs":[],"symbolHash":1647401955,"updated":1723767904423},{"name":"Last","fqn":"module::383353769::Last","filepath":"src/types/lists/Last.ts","startLine":10,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TEmpty","type":"TEmpty"}],"jsDocs":[{"comment":"**Last**`<TList, [TEmpty]>`\n\nReturns the _last_ element in a list of elements.\n\n- by default `TEmpty` is _never_ but this can be changed.","tags":[]}],"deps":["module::2666698309::Tuple","module::4285962579::IfLength","module::798798449::AfterFirst"],"refs":[],"symbolHash":3348651322,"updated":1723767904325},{"name":"KvTuple","fqn":"module::2111736817::KvTuple","filepath":"src/types/kv/KvTuple.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"K","type":"K"}],"jsDocs":[{"comment":"**KvTuple**\n\na key/value of type `T` represented as `[key, kv]`\n\n```ts\ntype Obj = { foo: 1, bar: \"hi\" };\n// [\"foo\", { foo: 1 } ]\ntype Foo = KvTuple<Obj, \"foo\">;\n```\n\n**Note:** _consider use of `KeyValue<T,K>` as an alternate representation_","tags":[]}],"deps":["ext::2318994541::Record"],"refs":[],"symbolHash":1979900759,"updated":1723767904320},{"name":"KvFrom","fqn":"module::3959973624::KvFrom","filepath":"src/types/kv/KvFrom.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Type utility which takes an object type and converts to an array of KV objects:\n```ts\n// [ {key: \"id\", value: 123 } | {key: \"foo\", value: \"bar\" } ][]\ntype Arr = KvFrom<{ id: 123, foo: \"bar\" }>;\n```","tags":[]}],"deps":[],"refs":[],"symbolHash":3351478161,"updated":1723767904320},{"name":"KvFn","fqn":"module::1182097847::KvFn","filepath":"src/types/dictionary/KvFn.ts","startLine":16,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**KvFn**`<TKey,TArgs,TReturn,[TProps]>`\n\nA succinct and strong type definition for a KV value pair where the\n_value_ is a function.","tags":[]}],"deps":["module::2716012356::KvFnDefn","ext::2318994541::Record","module::3727409867::FnWithDescription"],"refs":[],"symbolHash":592274762,"updated":1723767904287},{"name":"KlassMeta","fqn":"module::1313740379::KlassMeta","filepath":"src/types/classes/KlassMeta.ts","startLine":18,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"CTor","type":"CTor"}],"jsDocs":[{"comment":"**KlassMeta**`<T>`\n\nGiven a class constructor `CTor`, this will return a tuple:\n\n```ts\n{\n args: ConstructorParams<CTor>,\n instance: InstanceType<CTor>,\n class_decorators: ClassDecoratorContext<CTor>,\n field_decorators: ClassFieldDecoratorContext<CTor>\n}\n```","tags":[]}],"deps":["ext::2318994541::ClassDecoratorContext","ext::2318994541::ClassFieldDecoratorContext"],"refs":[],"symbolHash":3761003816,"updated":1723767904249},{"name":"KindFrom","fqn":"module::1563950750::KindFrom","filepath":"src/types/functional/Result.ts","startLine":192,"endLine":194,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"**KindFrom**`<T>`\n\nExtracts the _kind_ property from the `Err` type of a `Result<T,E>`.","tags":[]}],"deps":["module::4215597801::Result","module::1037520660::AsErr"],"refs":[],"symbolHash":1903960031,"updated":1723767904305},{"name":"KindErrorDefn","fqn":"module::4282492499::KindErrorDefn","filepath":"src/types/errors/KindError.ts","startLine":43,"endLine":49,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"**KindErrorDefn**`<K,C>`\n\nA definition for a `KindError`. Simply call this function to\nturn it into a `KindError` as specified by this definition.","tags":[]}],"deps":["ext::2318994541::Record","ext::2318994541::NonNullable","module::629381106::KindError"],"refs":[],"symbolHash":1732409056,"updated":1723767904296},{"name":"KeyValue","fqn":"module::2363758601::KeyValue","filepath":"src/types/kv/KeyValue.ts","startLine":12,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"K","type":"K"}],"jsDocs":[{"comment":"Provides a strongly typed _key_ and _value_ for a dictionary `T`\n\n```ts\ntype Obj = { foo: 1, bar: \"hi\" };\n// [\"foo\", 1 ]\ntype Foo = KeyValue<Obj, \"foo\">;\n```","tags":[]}],"deps":["module::3435872486::ExpandRecursively"],"refs":[],"symbolHash":1693862113,"updated":1723767904319},{"name":"KeysWithValue","fqn":"module::2900428340::KeysWithValue","filepath":"src/types/dictionary/KeysWithValue.ts","startLine":42,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"**KeysWithValue**`<TObj,TValue>`\n\nFilter's the key/values found on `TObj` to only those whose\nvalues _extend_ `TValue`.\n\n```ts\n// [\"foo\",  \"baz\"]\ntype Str = KeysWithValue<{ foo: \"hi\"; bar: 5; baz: \"bye\" }, string>;\n```\n\n**Related:** `KeysEqualValue`","tags":[]}],"deps":["module::186693758::Dictionary","module::2943445649::IsObjectLiteral","local::159970369::Process","module::4102577001::Keys","module::4119350992::ObjectKey"],"refs":[],"symbolHash":2120689558,"updated":1723767904260},{"name":"KeysWithoutValue","fqn":"module::3061746235::KeysWithoutValue","filepath":"src/types/dictionary/KeysWithoutValue.ts","startLine":13,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"**KeysWithoutValue**`<TObj, TValue>`\n\nThe _keys_ on a given object `T` which _do not_ extend the type value of `W`.\n\n```ts\n// \"foo\"\ntype T = KeysWithoutValue<{ foo: \"hi\"; bar: 5; baz: number }, number>;\n```","tags":[]}],"deps":["module::1903151425::AnyObject","module::3605609985::Narrowable","ext::2318994541::Readonly"],"refs":[],"symbolHash":1847614057,"updated":1723767904260},{"name":"KeysNotEqualValue","fqn":"module::354047418::KeysNotEqualValue","filepath":"src/types/dictionary/KeysNotEqualValue.ts","startLine":15,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"**KeysNotEqualValue**`<TObj, TValue>`\n\nThe _keys_ on a given object `T` which _do not_ explicitly equal the type value of `W`.\n\n```ts\n// \"bar\"\ntype Str = KeysNotEqualValue<{ foo: 6; bar: 5 }, 5>;\n```\n\n**Related:** `KeysEqualValue`, `KeysWithoutValue`","tags":[]}],"deps":["module::1903151425::AnyObject","module::3605609985::Narrowable","module::4258457119::IfEqual","ext::2318994541::Readonly"],"refs":[],"symbolHash":329201633,"updated":1723767904261},{"name":"KeysEqualValue","fqn":"module::4157072949::KeysEqualValue","filepath":"src/types/dictionary/KeysEqualValue.ts","startLine":15,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TWithValue","type":"TWithValue"}],"jsDocs":[{"comment":"**KeysEqualValue**`<TObj,TValue>`\n\nThe _keys_ on a given object `TObj` which are _equal to_ `TValue`.\n\n```ts\n// \"foo\"\ntype Str = KeysEqualValue<{ foo: string; bar: 5; baz: \"bye\" }, string>;\n```\n\n**Related:** `KeysWithValue`","tags":[]}],"deps":["module::4258457119::IfEqual"],"refs":[],"symbolHash":1176654273,"updated":1723767904260},{"name":"KeyOf","fqn":"module::2065852267::KeyOf","filepath":"src/types/dictionary/Keys.ts","startLine":141,"endLine":143,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**KeyOf**`<TContainer>`\n\nProvides a **union type** of keys for the passed in container.\n\n**Related:** `Keys`,`PublicKeys`,`PublicKeyOf`","tags":[]}],"deps":["module::2872591658::Container","module::698625611::IsWideUnion","local::2352292282::_KeyOf","module::3860303104::As"],"refs":[],"symbolHash":2598392525,"updated":1723767904256},{"name":"KebabCase","fqn":"module::3449225185::KebabCase","filepath":"src/types/string-literals/casing/KebabCase.ts","startLine":27,"endLine":48,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TString","type":"TString"},{"name":"TPreserve","type":"TPreserve"}],"jsDocs":[{"comment":"**KebabCase**`<TString,TPreserve>`\n\nConverts a string literal into a `kebab-case` format while optionally\nallowing surrounding whitespace.\n\n```ts\n// \"foo-bar\"\ntype Dash = Dasherize<\"foo_bar\">;\ntype Dash = Dasherize<\"fooBar\">;\ntype Dash = Dasherize<\"FooBar\">;\n// \"\\n  foo-bar \\t\"\ntype Dash = Dasherize<\"\\n  foo bar \\t\">;\n```","tags":[]}],"deps":["module::2597507937::Concat","module::62880555::LeftWhitespace","module::1766334850::RightWhitespace","module::3144135218::DashUppercase","module::2678895335::Trim","module::3521220041::LowerAllCaps","ext::2318994541::Lowercase","module::3977136121::Replace","ext::2318994541::Uncapitalize"],"refs":[],"symbolHash":928888324,"updated":1723767904480},{"name":"JustFunction","fqn":"module::2034370293::JustFunction","filepath":"src/types/base-types/fns/JustFunction.ts","startLine":9,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"}],"jsDocs":[{"comment":"**JustFunction**`<T>`\n\nType utility which strips off any dictionary properties that may have existed\non the function passed in as `T` and leaves just the pure function signature.","tags":[]}],"deps":["module::540585742::TypedFunction","ext::2318994541::Parameters","ext::2318994541::ReturnType"],"refs":[],"symbolHash":61789966,"updated":1723767904182},{"name":"JsonValues","fqn":"module::4018006221::JsonValues","filepath":"src/types/type-conversion/JSON.ts","startLine":37,"endLine":39,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**JsonValues**`<T>`\n\nConverts a tuple of values to the appropriate JSON type\n\n**Related:** `JsonValue`","tags":[]}],"deps":["module::2666698309::Tuple","module::1292212274::JsonValue"],"refs":[],"symbolHash":3739503414,"updated":1723767904507},{"name":"Join","fqn":"module::222254619::Join","filepath":"src/types/string-literals/Join.ts","startLine":53,"endLine":64,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTuple","type":"TTuple"},{"name":"TSeparator","type":"TSeparator"},{"name":"TMax","type":"TMax"},{"name":"TEllipsis","type":"TEllipsis"}],"jsDocs":[{"comment":"**Join**`<TArr,[TSeparator],[TMax]>`\n\nJoins together an array of items into a string.\n\n- the _separator_ between items defaults to an empty string this can be\nchanged to whatever is needed\n- non-string types will be converted to strings as best as possible\n- specifying a value for `TMax` will truncate tuples which are greater\nthan the specified length and add an ellipsis marker as the last element\n\n**Related:** `Concat<TArr>`","tags":[]}],"deps":["module::559385431::ToStringArray","module::3252841211::IsGreaterThan","local::1695423808::Process","local::1695423808::Slicer"],"refs":[],"symbolHash":2688795848,"updated":1723767904424},{"name":"IsWideUnion","fqn":"module::256302241::IsWideUnion","filepath":"src/types/boolean-logic/operators/IsWideUnion.ts","startLine":21,"endLine":25,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsWideUnion**`<T>`\n\nBoolean utility which checks whether `T` is both a _union type_\nand that it's elements are all considered _wide types_.\n\n**Related:** `IsNonLiteralUnion`","tags":[]}],"deps":["module::3393438424::IsUnion","local::1025490070::Process","module::458105997::UnionToTuple"],"refs":[],"symbolHash":909754079,"updated":1723767904225},{"name":"IsWideType","fqn":"module::3048838755::IsWideType","filepath":"src/types/boolean-logic/operators/IsWideType.ts","startLine":101,"endLine":114,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TNever","type":"TNever"}],"jsDocs":[{"comment":"**IsWideType**`<T, [TNever]>`\n\nIdentifies types which are \"wide\" (and have a narrow variant):\n\n- string, number, and boolean types\n- `string[]`, `number[]` array types\n- wide union types like `string | number`\n\n**Note:** \n- types such as `null` and `undefined` **are** considered wide.\n- If the `T` passed in is _never_ the result of this operation is\nErrorCondition<\"invalid-never\"> but this can be made into whatever\nyou like by setting the `TNever` generic.\n- If an ErrorCondition is in `T` then it will be bubbled up","tags":[]}],"deps":["local::2940894408::InvalidNever","module::80185219::IsNever","module::1939532401::ErrorCondition","module::2877350891::ProxyError","module::2615055512::IsWideScalar","module::3251840889::IsWideContainer","module::698625611::IsWideUnion"],"refs":[],"symbolHash":4259981445,"updated":1723767904213},{"name":"IsVueRef","fqn":"module::1305050189::IsVueRef","filepath":"src/types/boolean-logic/operators/IsVueRef.ts","startLine":26,"endLine":34,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsVueRef**`<T>`\n\nBoolean type utility that detects whether the type passed in\nis a VueJS `Ref<...>` type or this library's `VueRef<...>`\n(which serves as a lightweight proxy type for Vue's `Ref`).","tags":[]}],"deps":["module::1931245833::If","module::1364134543::IsEqual","local::536823326::_Len","module::3313669345::Retain","local::536823326::_Keys","local::536823326::_Validate"],"refs":[],"symbolHash":1512665307,"updated":1723767904202},{"name":"IsValidIndex","fqn":"module::1894042350::IsValidIndex","filepath":"src/types/boolean-logic/operators/IsValidIndex.ts","startLine":25,"endLine":57,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TKey","type":"TKey"}],"jsDocs":[{"comment":"**IsValidIndex**`<TContainer,TKey>`\n\nProvides a boolean check on whether `TKey` is a valid key for `TContainer`.\n\n- valid responses are `true` or `false` if literal types found; otherwise `boolean`\n- negative indexes are allowed when `TContainer` is a tuple","tags":[]}],"deps":["module::2872591658::Container","ext::2318994541::PropertyKey","module::2666698309::Tuple","module::4041511888::IsTuple","module::1640529169::IsNegativeNumber","module::116081596::AsNumber","module::603953565::Abs","module::2535688849::TupleToUnion","module::3420625191::NumericKeys","module::186693758::Dictionary","module::1364134543::IsEqual","module::542025033::ExplicitlyEmptyObject","module::2943445649::IsObjectLiteral","module::172457424::IsStringLiteral"],"refs":[],"symbolHash":4129272949,"updated":1723767904204},{"name":"IsValidDotPath","fqn":"module::3455871294::IsValidDotPath","filepath":"src/types/boolean-logic/operators/IsValidDotPath.ts","startLine":24,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TDotPath","type":"TDotPath"}],"jsDocs":[{"comment":"**IsValidDotPath**`<TContainer,TDotPath>`\n\n- if `TContainer` is a literal value than it will validate against\nthe _actual_ dot paths which are valid for the container. \n- if `TContainer` is a wide container type then it will generically validate \nwhether the dot path _could_ be a valid path.\n- if `TContainer` isn't a container at all then the only valid dot path is\nan empty string\n- a DotPath of either \"\" or null is _always_ valid because these are _identity_\npaths that simply return the container.","tags":[]}],"deps":["module::1364134543::IsEqual","module::2943445649::IsObjectLiteral","module::4041511888::IsTuple","module::2698938817::Contains","module::3421907004::DotPathFor","module::2824052739::IsContainer","module::4223968119::IsDotPath"],"refs":[],"symbolHash":2350999434,"updated":1723767904226},{"name":"IsUrl","fqn":"module::1199865088::IsUrl","filepath":"src/types/boolean-logic/operators/IsUrl.ts","startLine":45,"endLine":64,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TProtocol","type":"TProtocol"}],"jsDocs":[{"comment":"**IsUrl**`<TTest,[TProtocol]>`\n\nBoolean operator which tests whether the passed in `TTest`\nis a valid URL.\n\n**Note:** by default it will only check the `https` protocol\nbut you can choose any set `TProtocol` with anything from `NetworkProtocol`\nif you like.\n\n**Note:** you can add **optional** as a part of the protocol union\ntype and it will then accept the protocols you've selected or a URL\nwithout a protocol.","tags":[]}],"deps":["module::2966373716::NetworkProtocol","module::172457424::IsStringLiteral","module::83169107::And","module::2376902257::Or","module::3147694355::HasNetworkProtocolReference","module::488874576::Extends","module::2121051408::HasUrlPath","module::2472775512::HasUrlSource"],"refs":[],"symbolHash":2325260876,"updated":1723767904229},{"name":"IsUnset","fqn":"module::3840449321::IsUnset","filepath":"src/types/boolean-logic/operators/IsUnset.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsUnset**`<T>`\n\nBoolean operator which reports true/false on whether\n`T` is the value `Unset`.","tags":[]}],"deps":["module::1364134543::IsEqual","module::814973::Unset"],"refs":[],"symbolHash":1857700041,"updated":1723767904234},{"name":"IsUnion","fqn":"module::2670427780::IsUnion","filepath":"src/types/boolean-logic/operators/IsUnion.ts","startLine":10,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsUnion**`<T>`\n\nType utility which returns a boolean flag indicating whether the \ngiven `T` is typed as a _union_ type.","tags":[]}],"deps":["module::80185219::IsNever","module::458105997::UnionToTuple","module::1364134543::IsEqual"],"refs":[],"symbolHash":2476579900,"updated":1723767904217},{"name":"IsUndefined","fqn":"module::880092474::IsUndefined","filepath":"src/types/boolean-logic/operators/IsUndefined.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsUndefined**\n\nBoolean type utility returns `true` if `T` is undefined; `false` otherwise","tags":[]}],"deps":[],"refs":[],"symbolHash":1929973307,"updated":1723767904211},{"name":"IsTypeToken","fqn":"module::434201286::IsTypeToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":335,"endLine":339,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1364917418::TypeToken"],"refs":[],"symbolHash":3536548224,"updated":1723767904404},{"name":"IsTuple","fqn":"module::1748076801::IsTuple","filepath":"src/types/boolean-logic/operators/IsTuple.ts","startLine":24,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsTuple**`<T>`\n\nBoolean operator which tests whether the given `T` is\na _tuple_ value where a tuple is defined as:\n\n> a _finite_ and _known_ list of elements\n\n- note that this _does_ include a list of zero elements\n- types such as `string[]`, etc. are _not_ tuples as they\ndo not discretely specify a length of elements","tags":[]}],"deps":["local::1598833034::Process"],"refs":[],"symbolHash":4147762050,"updated":1723767904205},{"name":"IsTruthy","fqn":"module::1264536952::IsTruthy","filepath":"src/types/boolean-logic/operators/IsTruthy.ts","startLine":19,"endLine":40,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsTruthy**`<T>`\n\nA type utility which evaluates `T` for _[truthiness](https://frontend.turing.edu/lessons/module-1/js-truthy-falsy-expressions.html)_ and returns `true` or `false`\nwhere the state can be detected at design time; otherwise returns `boolean`.\n\n**See Also:** `IfTruthy`, `IfSomeTruthy`, `IfAllTruthy`, and `TruthyReturns`","tags":[]}],"deps":["module::1931245833::If","module::172457424::IsStringLiteral","module::82688423::IsNumericLiteral","module::3434924723::SomeEqual","module::1567416713::IsFalse","module::4187212716::IsTrue"],"refs":[],"symbolHash":3652133597,"updated":1723767904219},{"name":"IsTrue","fqn":"module::371728841::IsTrue","filepath":"src/types/boolean-logic/operators/IsTrue.ts","startLine":24,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TNever","type":"TNever"}],"jsDocs":[{"comment":"**IsTrue**`<T,[TNever]>`\n\nType utility which checks for the narrow type of `true`\n```ts\n// true\ntype T = IsTrue<true>;\n// false\ntype U = IsTrue<boolean>;\n// false\ntype F2 = IsTrue<\"foobar\">;\n```","tags":[]}],"deps":["local::1869782582::Process"],"refs":[],"symbolHash":1266647176,"updated":1723767904213},{"name":"IsSymbol","fqn":"module::1386722051::IsSymbol","filepath":"src/types/boolean-logic/operators/IsSymbol.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsSymbol**`<T>`\n\nType utility which returns a boolean flag based on whether the given\ntype is a **Symbol**.","tags":[]}],"deps":[],"refs":[],"symbolHash":1911901538,"updated":1723767904218},{"name":"IsStringLiteral","fqn":"module::2528838941::IsStringLiteral","filepath":"src/types/boolean-logic/operators/IsStringLiteral.ts","startLine":9,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsStringLiteral**`<T>`\n\nBoolean type utility which detects whether `T` is \na string literal.","tags":[]}],"deps":["module::80185219::IsNever","module::1364134543::IsEqual"],"refs":[],"symbolHash":3858926291,"updated":1723767904215},{"name":"IsString","fqn":"module::2034891099::IsString","filepath":"src/types/boolean-logic/operators/IsString.ts","startLine":9,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsString**\n\nType utility which returns true/false based on whether `T` is a\nstring (wide or narrow).","tags":[]}],"deps":["module::3393438424::IsUnion","module::291733697::WidenUnion"],"refs":[],"symbolHash":3127442803,"updated":1723767904219},{"name":"IsSingularNoun","fqn":"module::1360034440::IsSingularNoun","filepath":"src/types/boolean-logic/operators/IsSingularNoun.ts","startLine":14,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsSingularNoun**`<T>`\n\nBoolean operator which returns:\n\n- `true` - if `T` is a string literal with only `Alpha` chars and ending in \ncharacter defined by `SingularNounEnding`.\n- `boolean` - if `T` is a wide string type\n- `false` - all other conditions","tags":[]}],"deps":["module::1931245833::If","module::172457424::IsStringLiteral","module::1715223530::IfNever","module::2553806509::SingularNoun"],"refs":[],"symbolHash":1464582668,"updated":1723767904208},{"name":"IsSingleChar","fqn":"module::1826848973::IsSingleChar","filepath":"src/types/boolean-logic/operators/IsSingleChar.ts","startLine":8,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsSingleChar**`<T>`\n\nBoolean operator which returns true/false/boolean based on whether `T` is a","tags":[]}],"deps":["module::1195601881::Length","module::1931245833::If","module::172457424::IsStringLiteral"],"refs":[],"symbolHash":183097113,"updated":1723767904209},{"name":"IsScalar","fqn":"module::2172860906::IsScalar","filepath":"src/types/boolean-logic/operators/IsScalar.ts","startLine":23,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsScalar**`<T>`\n\nType utility which checks if a value is a _scalar_ value (aka, it is\nan atomic value and doesn't _contain_ other types). In practical terms this just\nmeans if it's a string, number, boolean, null, or symbol then it is\na **scalar**. Arrays and records of any type are _not_ scalars.\n\n- Typically this resolves at design-time to true/false, however, in some\ncases a union type can not resolve until runtime and a `boolean` value will\nbe returned. \n\n**Related:** `IsOptionalScalar`","tags":[]}],"deps":["module::1715223530::IfNever","module::3252133680::Scalar"],"refs":[],"symbolHash":768199498,"updated":1723767904210},{"name":"IsResult","fqn":"module::3026168773::IsResult","filepath":"src/types/functional/Result.ts","startLine":221,"endLine":231,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TVal","type":"TVal"},{"name":"TErr","type":"TErr"}],"jsDocs":[{"comment":"**IsResult**`<TTest,[TOk],[TErr]>`\n\nBoolean utility which tests whether `TTest` qualifies as a `Result<T,E>` type.\n\n**Note:** you may include explicit `TOk` or `TErr` values if you want to narrow\nthe check condition but they are not required.","tags":[]}],"deps":["module::3396439809::Something","module::1931856674::ErrInput","module::3044833185::ResultTuple","module::1931245833::If","module::1364134543::IsEqual","local::767579206::_IsResult"],"refs":[],"symbolHash":1814907083,"updated":1723767904306},{"name":"IsReadonlyObject","fqn":"module::1503995014::IsReadonlyObject","filepath":"src/types/boolean-logic/operators/IsReadonlyObject.ts","startLine":12,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsReadonlyObject**`<T>`\n\nBoolean operator which tests whether `T` is a _readonly\nobject_. This is defined as an object where all properties\nare readonly. \n\n- Note: objects with no properties return `false`","tags":[]}],"deps":["module::186693758::Dictionary","module::1364134543::IsEqual","module::2806756356::ReadonlyKeys"],"refs":[],"symbolHash":847077875,"updated":1723767904222},{"name":"IsReadonlyArray","fqn":"module::2466919475::IsReadonlyArray","filepath":"src/types/boolean-logic/operators/IsReadonlyArray.ts","startLine":7,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsReadonlyArray**`<T>`\n\nBoolean type utility which detects whether `T` is a readonly array.","tags":[]}],"deps":[],"refs":[],"symbolHash":2178872112,"updated":1723767904217},{"name":"IsPositiveNumber","fqn":"module::1120944821::IsPositiveNumber","filepath":"src/types/boolean-logic/operators/IsPositiveNumber.ts","startLine":11,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsPositiveNumber**`<T>`\n\nBoolean operator which checks whether the value `T` is a _positive_ number.\n\n**Related:** `IsNegativeNumber`, `Abs`, `InvertNumericSign`","tags":[]}],"deps":["module::3330042255::NumberLike","module::1640529169::IsNegativeNumber"],"refs":[],"symbolHash":1255814414,"updated":1723767904234},{"name":"IsPhoneNumber","fqn":"module::2918505782::IsPhoneNumber","filepath":"src/types/boolean-logic/operators/PhoneOperators.ts","startLine":28,"endLine":32,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsPhoneNumber**`<T>`\n\nBoolean operator which tests whether `T` has a\ntype that supports it being a phone number.\n\n**Note:**\n\n- this utility relies on the using the `PhoneNumber<T>` validation\ntechnique to determine that whether it is a phone number but whereas\nthis utility returns `T` _or_ and `ErrorCode` this produces a boolean\noutcome.\n\n**Related:** `PhoneNumber`, `HasPhoneCountryCode`","tags":[]}],"deps":["module::3228905537::IsErrorCondition","module::3537681521::PhoneNumber","module::3092265634::MaybeError"],"refs":[],"symbolHash":1167497087,"updated":1723767904233},{"name":"IsOptionalScalar","fqn":"module::686572127::IsOptionalScalar","filepath":"src/types/boolean-logic/operators/IsOptionalScalar.ts","startLine":26,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsOptionalScalar**`<T>`\n\nBoolean type utility which tests for a _scalar_ value or _undefined_.\n\n**Related:** `IsScalar`","tags":[]}],"deps":["local::3967616597::Process"],"refs":[],"symbolHash":675038724,"updated":1723767904209},{"name":"IsOptionalLiteral","fqn":"module::1835244603::IsOptionalLiteral","filepath":"src/types/boolean-logic/operators/IsLiteral.ts","startLine":47,"endLine":47,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4258457119::IfEqual","module::4050561663::IsLiteral"],"refs":[],"symbolHash":2311483944,"updated":1723767904211},{"name":"IsOk","fqn":"module::3697242559::IsOk","filepath":"src/types/functional/Result.ts","startLine":240,"endLine":243,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TVal","type":"TVal"}],"jsDocs":[{"comment":"**IsOk**`<TTest,[TVal]>`\n\nBoolean utility which detects whether `TTest` is in the \"Ok\" state\nfor a `Result<T,E>`.","tags":[]}],"deps":["local::767579206::OK"],"refs":[],"symbolHash":1367585206,"updated":1723767904306},{"name":"IsObjectLiteral","fqn":"module::635231192::IsObjectLiteral","filepath":"src/types/boolean-logic/operators/IsObjectLiteral.ts","startLine":30,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsObjectLiteral**`<T>`\n\nTests whether an object is a literal. An object literal is any of the following:\n\n- any KV-like type which has an **explicit** number of keys\n- if `Keys<T>[\"length\"]` translates to `number` than this is **not** a literal.","tags":[]}],"deps":["module::80185219::IsNever","module::186693758::Dictionary","module::1364134543::IsEqual","module::542025033::ExplicitlyEmptyObject","local::945123088::CheckIt"],"refs":[],"symbolHash":105351284,"updated":1723767904205},{"name":"IsObject","fqn":"module::2174312725::IsObject","filepath":"src/types/boolean-logic/operators/IsObject.ts","startLine":9,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsObject**\n\nBoolean type utility used to check whether a type `T` is an object\n(aka, it extends `Record<string, any>` or a readonly equivalent)","tags":[]}],"deps":["module::2376902257::Or","module::1931245833::If","module::488874576::Extends","ext::2318994541::Record","module::13543941::Mutable","module::3580587573::AnyFunction"],"refs":[],"symbolHash":3554577471,"updated":1723767904210},{"name":"Iso8601","fqn":"module::2575136131::Iso8601","filepath":"src/types/string-literals/DateTime.ts","startLine":53,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTimezone","type":"TTimezone"}],"jsDocs":[{"comment":"**Iso8601**<TStrength>\n\nCreates typing for the [**ISO8601**](https://en.wikipedia.org/wiki/ISO_8601)\ndatetime format.\n\n- the strength/complexity of the type can be set with `TStrength`\n- a timezone is optional by default but can be isolated to \"required\" or \"excluded\"","tags":[]}],"deps":["module::424465925::TypeRequired","module::1269323086::TZ"],"refs":[],"symbolHash":1593938488,"updated":1723767904421},{"name":"IsNumericLiteral","fqn":"module::1889406007::IsNumericLiteral","filepath":"src/types/boolean-logic/operators/IsNumericLiteral.ts","startLine":9,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsNumericLiteral**`<T>`\n\nType utility which detects if the type `T` is a\nnumeric literal.","tags":[]}],"deps":["module::1715223530::IfNever","module::3591638282::DoesExtend","module::4258457119::IfEqual"],"refs":[],"symbolHash":3904400836,"updated":1723767904216},{"name":"IsNumber","fqn":"module::2701617109::IsNumber","filepath":"src/types/boolean-logic/operators/IsNumber.ts","startLine":8,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsNumber**`<T>`\n\nBoolean type utility testing whether `T` is a numeric type.","tags":[]}],"deps":["module::3393438424::IsUnion","module::291733697::WidenUnion"],"refs":[],"symbolHash":1011397422,"updated":1723767904218},{"name":"IsNull","fqn":"module::421710918::IsNull","filepath":"src/types/boolean-logic/operators/IsNull.ts","startLine":12,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsNull**`<T>`\n\nType utility which returns a boolean flag based on whether the given\ntype is **null**.\n\nNote: if `T` is a union type and one of the elements of the union\nis `null` then this will return `boolean`.","tags":[]}],"deps":["module::3393438424::IsUnion"],"refs":[],"symbolHash":2842208365,"updated":1723767904217},{"name":"IsNothing","fqn":"module::2760293558::IsNothing","filepath":"src/types/boolean-logic/operators/IsNothing.ts","startLine":9,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsNothing**`<T>`\n\nBoolean operator which tests whether `T` is _nothing_ (aka., \n`null` or `undefined`).","tags":[]}],"deps":["module::761993671::Nothing"],"refs":[],"symbolHash":2545232540,"updated":1723767904205},{"name":"IsNotEqual","fqn":"module::3706616861::IsNotEqual","filepath":"src/types/boolean-logic/operators/IsNotEqual.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"X","type":"X"},{"name":"Y","type":"Y"}],"jsDocs":[{"comment":"**NotEqual**`<X,Y>`\n\nType utility which tests whether two types -- `X` and `Y` -- are _not_ exactly the same type","tags":[]}],"deps":["module::1364134543::IsEqual"],"refs":[],"symbolHash":3240198451,"updated":1723767904219},{"name":"IsNonLiteralUnion","fqn":"module::1211563237::IsNonLiteralUnion","filepath":"src/types/boolean-logic/operators/IsNonLiteralUnion.ts","startLine":18,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsNonLiteralUnion**`<T>`\n\nBoolean utility which checks whether `T` is both a _union type_\nand that none of it's elements are considered _literal types_.\n\n**Related:** `IsLiteralUnion`, `IsWideUnion`","tags":[]}],"deps":["module::1931245833::If","module::3393438424::IsUnion","local::2006686525::Process"],"refs":[],"symbolHash":1347475937,"updated":1723767904225},{"name":"IsNonEmptyObject","fqn":"module::549313180::IsNonEmptyObject","filepath":"src/types/boolean-logic/operators/IsEmptyObject.ts","startLine":13,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::186693758::Dictionary","module::4102577001::Keys","module::4076869199::AsRecord","module::82688423::IsNumericLiteral"],"refs":[],"symbolHash":3208326615,"updated":1723767904211},{"name":"IsNonEmptyContainer","fqn":"module::3905985941::IsNonEmptyContainer","filepath":"src/types/containers/IsNonEmptyContainer.ts","startLine":13,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**NonEmptyContainer**`<T>`\n\nBoolean utility which tests whether a container has keys\n(aka, is not \"empty\")\n\n**Related:** `EmptyContainer`","tags":[]}],"deps":["module::2872591658::Container","module::394049077::IsEmptyContainer"],"refs":[],"symbolHash":3532240638,"updated":1723767904250},{"name":"IsNever","fqn":"module::1352318251::IsNever","filepath":"src/types/boolean-logic/operators/IsNever.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsNever**`<T>`\n\nBoolean type utility which check whether `T` is of type _never_.","tags":[]}],"deps":["module::3860303104::As"],"refs":[],"symbolHash":2761576746,"updated":1723767904218},{"name":"IsNegativeNumber","fqn":"module::2936710410::IsNegativeNumber","filepath":"src/types/boolean-logic/operators/IsNegativeNumber.ts","startLine":15,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsNegativeNumber**`<T>`\n\nA boolean utility which returns true when `T` is a numerically\nnegative value. This includes string literal representations of\na number.","tags":[]}],"deps":["module::3330042255::NumberLike","module::391074403::IsWideType","module::1364134543::IsEqual","module::1897058928::AsString"],"refs":[],"symbolHash":277458735,"updated":1723767904202},{"name":"IsNarrowingFn","fqn":"module::1523902349::IsNarrowingFn","filepath":"src/types/boolean-logic/operators/IsNarrowingFn.ts","startLine":15,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"}],"jsDocs":[{"comment":"**IsNarrowingFn**`<TFn>`\n\nA boolean operator which checks whether `TFn` uses generics\nto narrow the input parameters. This is in contrast to a function\nwhich takes literal types rather than _extending_ them.\n\n**Related:** `NarrowingFn`, `IsLiteralFn`","tags":[]}],"deps":["module::3580587573::AnyFunction","module::3858944705::Not","module::1364134543::IsEqual","module::415438851::LiteralFn"],"refs":[],"symbolHash":3510841334,"updated":1723767904202},{"name":"IsLowerAlpha","fqn":"module::946171781::IsLowerAlpha","filepath":"src/types/string-literals/character-sets/LowerAlpha.ts","startLine":12,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**LowerAlpha**`<T>`\n\nConverts `T` to _never_ if `T` is not composed of only lowercase alphabetic chars. Possible values are:\n\n- `T` - when T is a string literal and characters are lowercase alphabetic\n- `string` - when T is a wide string type\n- `never` - all other types of `T` are converted to never","tags":[]}],"deps":["module::1931245833::If","module::172457424::IsStringLiteral","module::2630824779::IfAllExtend","module::4284904442::AsArray","module::3921923702::Chars","module::3806360013::LowerAlphaChar"],"refs":[],"symbolHash":412819897,"updated":1723767904443},{"name":"IsLiteralUnion","fqn":"module::1933527412::IsLiteralUnion","filepath":"src/types/boolean-logic/operators/IsLiteralUnion.ts","startLine":18,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsLiteralUnion**`<T>`\n\nBoolean utility which checks whether `T` is both a _union type_\nand that it's elements are all considered _literal type_.\n\n**Related:** `IsLiteralUnion`, `IsWideUnion`","tags":[]}],"deps":["module::3393438424::IsUnion","local::997508130::Process"],"refs":[],"symbolHash":1331480897,"updated":1723767904225},{"name":"IsLiteralFn","fqn":"module::540446063::IsLiteralFn","filepath":"src/types/boolean-logic/operators/IsLiteralFn.ts","startLine":22,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"}],"jsDocs":[{"comment":"**IsLiteralFn**`<TFn>`\n\nA boolean operator which checks that `TFn`:\n\n- is a function\n- does not use generics to narrow input parameters\n\n**Related:** `LiteralFn`, `IsNarrowFn`","tags":[]}],"deps":["module::3580587573::AnyFunction","module::1364134543::IsEqual","local::646558316::RegularFn"],"refs":[],"symbolHash":3717216379,"updated":1723767904203},{"name":"IsLessThanOrEqual","fqn":"module::2397779751::IsLessThanOrEqual","filepath":"src/types/boolean-logic/operators/IsLessThan.ts","startLine":34,"endLine":39,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**IsLessThanOrEqual**`<A,B>`\n\nTest whether `A` is _less than_ or _equal_ to `B`.","tags":[]}],"deps":["module::3330042255::NumberLike","module::1364134543::IsEqual","module::434570654::IsLessThan"],"refs":[],"symbolHash":2688989833,"updated":1723767904207},{"name":"IsLength","fqn":"module::4045313440::IsLength","filepath":"src/types/boolean-logic/operators/IsLength.ts","startLine":9,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"LEN","type":"LEN"}],"jsDocs":[{"comment":"**IsLength**`<T, LEN>`\n\nBoolean type utility which returns true/false based on whether\nthe correct length for `T` is specified.","tags":[]}],"deps":["module::4258457119::IfEqual","module::1195601881::Length"],"refs":[],"symbolHash":945186726,"updated":1723767904210},{"name":"IsIpAddress","fqn":"module::3049123328::IsIpAddress","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":126,"endLine":134,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsIpAddress**`<T>`\n\nA boolean operator which validates that `T` is either a V4 or V6 IP\nAddress.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::1328685990::IsIp4Address","module::4098885414::IsIp6Address"],"refs":[],"symbolHash":3926905699,"updated":1723767904231},{"name":"IsIp6HexGroup","fqn":"module::3457990344::IsIp6HexGroup","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":64,"endLine":72,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsIp6HexGroup**`<T>`\n\nTests whether `T` is a valid hexadecimal group for an IP6\nGroup. To be valid means:\n\n- each digit must be a hexadecimal digit\n- There will be between 1 and 4 digits","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::1551084983::IsLessThan","module::1195601881::Length","module::3252841211::IsGreaterThan","module::3955573120::IsHexadecimal"],"refs":[],"symbolHash":1721815711,"updated":1723767904230},{"name":"IsIp4Octet","fqn":"module::4082273224::IsIp4Octet","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":28,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsIp4Octet**`<T>`\n\nChecks whether `T` is a valid IPv4Octet.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::2254794222::Ip4Octet"],"refs":[],"symbolHash":2757568955,"updated":1723767904229},{"name":"IsInteger","fqn":"module::1270869338::IsInteger","filepath":"src/types/boolean-logic/operators/IsInteger.ts","startLine":10,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsInteger**`<T>`\n\nBoolean operator which tests whether `T` is a **integer** representation of\na `NumberLike` type `T`.","tags":[]}],"deps":["module::80185219::IsNever","module::3330042255::NumberLike","module::172457424::IsStringLiteral","module::2109384881::HasCharacters"],"refs":[],"symbolHash":1173819858,"updated":1723767904227},{"name":"IsGreaterThanOrEqual","fqn":"module::139001418::IsGreaterThanOrEqual","filepath":"src/types/boolean-logic/operators/IsGreaterThan.ts","startLine":38,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**IsGreaterThanOrEqual**`<A,B>`\n\nTest whether `A` is _greater than_ or _equal_ to `B`.","tags":[]}],"deps":["module::3330042255::NumberLike","module::1364134543::IsEqual","module::187453973::IsGreaterThan"],"refs":[],"symbolHash":2833698670,"updated":1723767904206},{"name":"IsFunction","fqn":"module::2169509492::IsFunction","filepath":"src/types/boolean-logic/operators/IsFunction.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsFunction**`<T>`\n\nChecks whether `T` is a function of _any_ kind and that includes\nfunctions with dictionary props sitting alongside the function.","tags":[]}],"deps":["module::3580587573::AnyFunction"],"refs":[],"symbolHash":3608851086,"updated":1723767904220},{"name":"IsFnWithParams","fqn":"module::462176901::IsFnWithParams","filepath":"src/types/boolean-logic/operators/IsFnWithParams.ts","startLine":20,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"},{"name":"TParamMatch","type":"TParamMatch"}],"jsDocs":[{"comment":"**IsFnWithParams**`<TFn, [TParamMatch]>`\n\nChecks whether `T` is a function which also includes \ndictionary props sitting alongside the function.\n\n- the optional `TParamMatch` will ensure that this generic _extends_\nthe params included in the function.","tags":[]}],"deps":["module::1903151425::AnyObject","module::3580587573::AnyFunction","module::1021334241::IsEmptyObject","module::1931245833::If","module::83169107::And","module::3591638282::DoesExtend","module::1364134543::IsEqual"],"refs":[],"symbolHash":2599942678,"updated":1723767904220},{"name":"IsFloat","fqn":"module::491450394::IsFloat","filepath":"src/types/boolean-logic/operators/IsFloat.ts","startLine":14,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsFloat**`<T>`\n\nBoolean operator which tests whether `T` is a **float** representation of\na `NumberLike` type `T`.\n\n**Warning:** when using numeric values like `1.0` the `.0` portion is lost before\nmaking the comparison so it is not possible to mark this as a float value.\nHowever, the string literal version of `\"1.0\"` **is** marked as a float.","tags":[]}],"deps":["module::80185219::IsNever","module::3330042255::NumberLike","module::172457424::IsStringLiteral","module::2109384881::HasCharacters"],"refs":[],"symbolHash":137587913,"updated":1723767904227},{"name":"IsFalsy","fqn":"module::2238472698::IsFalsy","filepath":"src/types/boolean-logic/operators/IsFalsy.ts","startLine":8,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsFalsy**`<T>`\n\nBoolean operator which tests whether `T` is _falsy_.","tags":[]}],"deps":["module::1931245833::If","module::1757664903::ExtendsSome","ext::2318994541::Number"],"refs":[],"symbolHash":3074523596,"updated":1723767904215},{"name":"IsFalse","fqn":"module::1723921867::IsFalse","filepath":"src/types/boolean-logic/operators/IsFalse.ts","startLine":16,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsFalse**`<T>`\n\nType utility which checks for the narrow type of `false`\n```ts\n// true\ntype T = IsFalse<true>;\n// false\ntype U = IsFalse<boolean>;\ntype F2 = IsFalse<\"foobar\">;\n```","tags":[]}],"deps":["module::80185219::IsNever","module::996394587::IsBoolean"],"refs":[],"symbolHash":3139461757,"updated":1723767904214},{"name":"IsEscapeFunction","fqn":"module::61481849::IsEscapeFunction","filepath":"src/types/boolean-logic/operators/ApiOperators.ts","startLine":24,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::540585742::TypedFunction","module::2332046825::EscapeFunction","module::2594163080::FnProps"],"refs":[],"symbolHash":2814516900,"updated":1723767904193},{"name":"IsErrorCondition","fqn":"module::3179457840::IsErrorCondition","filepath":"src/types/boolean-logic/operators/IsErrorCondition.ts","startLine":11,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEval","type":"TEval"},{"name":"TKind","type":"TKind"}],"jsDocs":[{"comment":"**IsErrorCondition**`<TEval,[TKind]>`\n\nType utility which checks whether `TEval` is an `ErrorCondition` type.\n\n- If you want to isolate to only a particular _kind_ of error you may\nalso use the optional `TKind` generic.","tags":[]}],"deps":["module::1939532401::ErrorCondition"],"refs":[],"symbolHash":64054167,"updated":1723767904218},{"name":"IsErr","fqn":"module::4235622873::IsErr","filepath":"src/types/functional/Result.ts","startLine":251,"endLine":267,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TErr","type":"TErr"}],"jsDocs":[{"comment":"**IsErr**`<TTest, [TErr]>`\n\nBoolean utility which detects whether `TTest` is in the \"Err\" state\nfor a `Result<T,E>`.","tags":[]}],"deps":["module::1931856674::ErrInput","module::1931245833::If","module::83169107::And","module::3591638282::DoesExtend","local::767579206::ERR","module::1037520660::AsErr"],"refs":[],"symbolHash":1794872038,"updated":1723767904307},{"name":"IsEmptyString","fqn":"module::2905161217::IsEmptyString","filepath":"src/types/boolean-logic/operators/IsEmptyString.ts","startLine":12,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsEmptyString**`<T>`\n\nReturns:\n- `true` when string T is a literal _and_ equal to \"\"\n- `boolean` when string T is wide\n- `false` for all other conditions","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::1364134543::IsEqual"],"refs":[],"symbolHash":168659713,"updated":1723767904234},{"name":"IsEmptyObject","fqn":"module::1936994528::IsEmptyObject","filepath":"src/types/boolean-logic/operators/IsEmptyObject.ts","startLine":9,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsEmptyObject**`<T>`\n\nBoolean type util which detects whether `T` _is_ an object\nbut _has no properties_.","tags":[]}],"deps":["module::186693758::Dictionary","module::4102577001::Keys","module::4076869199::AsRecord"],"refs":[],"symbolHash":2356041003,"updated":1723767904210},{"name":"IsEmptyContainer","fqn":"module::3401717675::IsEmptyContainer","filepath":"src/types/containers/IsEmptyContainer.ts","startLine":11,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**EmptyContainer**`<T>`\n\nBoolean utility which tests whether a container is \"empty\"\n(meaning it has no keys).\n\n**Related:** `NonEmptyContainer`","tags":[]}],"deps":["module::2872591658::Container","module::186693758::Dictionary","module::542025033::ExplicitlyEmptyObject","module::4102577001::Keys"],"refs":[],"symbolHash":1276911261,"updated":1723767904250},{"name":"IsDotPath","fqn":"module::2408876624::IsDotPath","filepath":"src/types/boolean-logic/operators/IsDotPath.ts","startLine":38,"endLine":53,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TIf","type":"TIf"},{"name":"TElse","type":"TElse"},{"name":"TMaybe","type":"TMaybe"}],"jsDocs":[{"comment":"**IsDotPath**`<T>`\n\nBoolean operator which detects whether a given `T` should be considered a\n\"dot path\". Results based on `T` are:\n\n- `false` - any non-string type or any string literal in which `DotPath<T>` resolves\nto false (including _never_ value).\n- `boolean` - a wide string type\n- `true` - a string literal value where `DotPath<T>` does not resolve to _never_.\n\nNote: this utility does not validate that `T` is a _valid_ dot path for a particular\ncontainer; only that it is a valid looking dotpath. If you want this validation use\n`IsValidDotPath<TContainer, TKey>` instead.","tags":[]}],"deps":["module::80185219::IsNever","module::1364134543::IsEqual","module::172457424::IsStringLiteral","local::3405700127::CheckForInvalid"],"refs":[],"symbolHash":3329819526,"updated":1723767904207},{"name":"IsDomainName","fqn":"module::3472873129::IsDomainName","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":169,"endLine":179,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsDomainName**`<T>`\n\nChecks whether `T` is a valid DNS domain name.","tags":[]}],"deps":["module::172457424::IsStringLiteral","local::1195686355::_TLD","module::3431685797::Last","module::3471304285::Split","local::1195686355::_BeforeTLD","module::2607133933::BeforeLast"],"refs":[],"symbolHash":3609937069,"updated":1723767904232},{"name":"IsDictionaryDefinition","fqn":"module::871081844::IsDictionaryDefinition","filepath":"src/types/literals/FromDefn.ts","startLine":67,"endLine":69,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::186693758::Dictionary","module::2698938817::Contains","module::3974819915::Values","module::1626958147::ShapeCallback"],"refs":[],"symbolHash":2874653127,"updated":1723767904368},{"name":"IsDefined","fqn":"module::1777830696::IsDefined","filepath":"src/types/boolean-logic/operators/IsDefined.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsDefined**\n\nBoolean type utility returns `true` if `T` is defined; `false` if undefined","tags":[]}],"deps":[],"refs":[],"symbolHash":3320209286,"updated":1723767904209},{"name":"IsCssHexadecimal","fqn":"module::3951126125::IsCssHexadecimal","filepath":"src/types/boolean-logic/operators/IsCssHexadecimal.ts","startLine":9,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsHexadecimal**`<T>`\n\nEnsures that `T` is a valid hexadecimal and converts to **never**\notherwise.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::1278898013::IsHexadecimal"],"refs":[],"symbolHash":1368539147,"updated":1723767904226},{"name":"IsContainer","fqn":"module::879097131::IsContainer","filepath":"src/types/boolean-logic/operators/IsContainer.ts","startLine":10,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsContainer**`<T>`\n\nBoolean operator which detects whether `T` is a \"container\" where a\ncontainer is any object or array.","tags":[]}],"deps":["module::80185219::IsNever","module::186693758::Dictionary"],"refs":[],"symbolHash":441078110,"updated":1723767904220},{"name":"IsComputedRef","fqn":"module::1258858854::IsComputedRef","filepath":"src/types/literals/VueComputedRef.ts","startLine":24,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsComputedRef**`<T>`\n\nBoolean operator which determines whether `T` is seen to be a `ComputedRef`\nproperty from **VueJS**.","tags":[]}],"deps":[],"refs":[],"symbolHash":2094648897,"updated":1723767904346},{"name":"IsCapitalized","fqn":"module::471003249::IsCapitalized","filepath":"src/types/string-literals/IsCapitalized.ts","startLine":15,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Returns true or false value based on whether the string literal is capitalized.\n```ts\n// true\ntype T2 = IsCapitalized<\"One\">;\n// false\ntype T1 = IsCapitalized<\"one\">;\n// \"unknown\"\nconst a: string = \"Hi\";\ntype T3 = IsCapitalized<typeof a>;\n```\n\nNote: _if the value passed in is a \"string\" then the result will be \"unknown\"_","tags":[]}],"deps":["ext::2318994541::Capitalize"],"refs":[],"symbolHash":1977841253,"updated":1723767904424},{"name":"IsBooleanLiteral","fqn":"module::3219433414::IsBooleanLiteral","filepath":"src/types/boolean-logic/operators/IsBooleanLiteral.ts","startLine":11,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsBooleanLiteral**`<T>`\n\nBoolean type utility which detects whether `T`\nis a boolean literal (aka, is `true` or `false`)","tags":[]}],"deps":["module::80185219::IsNever","module::4187212716::IsTrue","module::1567416713::IsFalse"],"refs":[],"symbolHash":2187169663,"updated":1723767904216},{"name":"IsBoolean","fqn":"module::812947252::IsBoolean","filepath":"src/types/boolean-logic/operators/IsBoolean.ts","startLine":7,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsBoolean**\n\nBoolean type utility which detects literal or wide boolean type.","tags":[]}],"deps":["module::3393438424::IsUnion","module::291733697::WidenUnion"],"refs":[],"symbolHash":4290286515,"updated":1723767904213},{"name":"IsArray","fqn":"module::1571828645::IsArray","filepath":"src/types/boolean-logic/operators/IsArray.ts","startLine":8,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsArray**\n\nBoolean utility which tests for whether `T` is an array (\nboth a mutable array or a readonly array)","tags":[]}],"deps":[],"refs":[],"symbolHash":2963667469,"updated":1723767904217},{"name":"IsAllLowercase","fqn":"module::3746832676::IsAllLowercase","filepath":"src/types/boolean-logic/operators/IsAllLowercase.ts","startLine":20,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsAllLowercase**`<T>`\n\nBoolean operator which indicates whether `T` has _all_ lowercase characters in it.\nValid values are:\n\n- note: any non-alphabetic characters are ignored in the evaluation\n\n```ts\n// true\ntype T = AllCaps<\"foobar\">;\n// false \ntype T = AllCaps<\"FooBar\">;\n// boolean\ntype T = AllCaps<string>;\n```","tags":[]}],"deps":["module::1931245833::If","module::2109384881::HasCharacters","module::2595159798::UpperAlphaChar"],"refs":[],"symbolHash":3986358346,"updated":1723767904208},{"name":"IsAllCaps","fqn":"module::3256082515::IsAllCaps","filepath":"src/types/boolean-logic/operators/IsAllCaps.ts","startLine":21,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsAllCaps**`<T>\n\nBoolean operator which returns _true_ when `T` consists of ALL capital letters.\n\n- Note: non-alphabetic characters are ignored by this utility\n\n```ts\n// true\ntype T = AllCaps<\"FOOBAR\">;\ntype T2 = AllCaps<\"FOOBAR2\">;\n// false \ntype T = AllCaps<\"FooBar\">;\n// boolean\ntype T = AllCaps<string>;\n```\n\n**Related:** `IsAllLowercase`","tags":[]}],"deps":["ext::2318994541::Uppercase"],"refs":[],"symbolHash":1506263683,"updated":1723767904208},{"name":"IP6Unicast","fqn":"module::2872542849::IP6Unicast","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":61,"endLine":61,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"the range of IPv6 addresses which are considered **unicast**.","tags":[]}],"deps":[],"refs":[],"symbolHash":2707049117,"updated":1723767904455},{"name":"Ip6Subnet","fqn":"module::716281478::Ip6Subnet","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":148,"endLine":151,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TPrefix","type":"TPrefix"},{"name":"TMask","type":"TMask"}],"jsDocs":[{"comment":"An IPv6 subnet.\n\nWhen an organization or even an individual receives IPv6 addresses they almost\nalways receive MANY ip addresses (aka, a subnet of addresses). The most\ncommon subnet masks are `48` (for organizations) and `64` for individuals.\n\n```ts\n// 2001:db8:1:1::/64\nIpSubnet<\"2001:db8:1:1\",64>\n```","tags":[]}],"deps":["module::2618884172::Ip6SubnetPrefix"],"refs":[],"symbolHash":3771096077,"updated":1723767904457},{"name":"IP6Multicast","fqn":"module::1430312094::IP6Multicast","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":56,"endLine":56,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"the range of IPv6 addresses which are considered **multicast**.","tags":[]}],"deps":[],"refs":[],"symbolHash":2078333404,"updated":1723767904455},{"name":"Ip6Loopback","fqn":"module::969933243::Ip6Loopback","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":63,"endLine":63,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1840488447,"updated":1723767904456},{"name":"Ip6GroupExpansion","fqn":"module::419989052::Ip6GroupExpansion","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":85,"endLine":89,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Ip6GroupExpansion**`<T>`\n\nExpands an IPv6's address by changing","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::3241023069::StripTrailing","module::749227415::ReplaceAll"],"refs":[],"symbolHash":3911563371,"updated":1723767904456},{"name":"Ip6AddressLoose","fqn":"module::3717221981::Ip6AddressLoose","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":78,"endLine":78,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3304895550::HexadecimalChar"],"refs":[],"symbolHash":2464990534,"updated":1723767904456},{"name":"Ip6AddressFull","fqn":"module::2418881060::Ip6AddressFull","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":76,"endLine":76,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3233217830,"updated":1723767904456},{"name":"Ip6Address","fqn":"module::2539193325::Ip6Address","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":110,"endLine":118,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"An IPv6 Address\n\n**Notes:**\n\n- a full representation is 8 groups of 4 hexadecimal characters and\nis _rarely_ used as it's just way too much specificity for most situations.\nIt is also impossible to type this in a strong manner due to the huge optionality.\n- in a full representation you may drop the leading 0's (and it's considered\nbest practice to do so)\n- if one of the groups is all zeros you can simply express it as `::`\n\nRather than expressing a _specific_ IPv6 address the more common thing\nis to express an **IP subnet** owned by an organization or an individual.\n\n**Related:** `Ip6Subnet`","tags":[]}],"deps":[],"refs":[],"symbolHash":2664534566,"updated":1723767904456},{"name":"Ip4NetmaskSuggestion","fqn":"module::3990147537::Ip4NetmaskSuggestion","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":31,"endLine":38,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVlan","type":"TVlan"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3356276222::Suggest","module::1897058928::AsString","module::458105997::UnionToTuple"],"refs":[],"symbolHash":1989936769,"updated":1723767904454},{"name":"Ip4Netmask","fqn":"module::1336551499::Ip4Netmask","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":50,"endLine":50,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Ip4Netmask**\n\nA type which includes patterns for `/8`, `/16`, `/24`, and `/32` netmasks","tags":[]}],"deps":["module::1818161808::Ip4Netmask8","module::2490839235::Ip4Netmask16","module::1401417358::Ip4Netmask24","module::1712897404::Ip4Netmask32"],"refs":[],"symbolHash":2782588840,"updated":1723767904455},{"name":"Ip4Address","fqn":"module::3449046950::Ip4Address","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":73,"endLine":73,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Ipv4**\n\nA simple representation of an IPv4 address","tags":[]}],"deps":[],"refs":[],"symbolHash":3071855922,"updated":1723767904456},{"name":"InvertNumericSign","fqn":"module::1806310175::InvertNumericSign","filepath":"src/types/numeric-literals/InvertNumericSign.ts","startLine":15,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**InvertNumericSign**`<T>`\n\nInverts the numeric symbol of the value `T` passed in (aka, negative numbers become\npositive and visa versa).","tags":[]}],"deps":["module::3330042255::NumberLike","module::1640529169::IsNegativeNumber","module::603953565::Abs","module::19220375::AsNegativeNumber"],"refs":[],"symbolHash":967929208,"updated":1723767904379},{"name":"IntersectWithAll","fqn":"module::539530317::IntersectWithAll","filepath":"src/types/type-conversion/IntersectWithAll.ts","startLine":16,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TIntersection","type":"TIntersection"}],"jsDocs":[{"comment":"**IntersectWithAll**`<TList,TIntersection>`\n\nType utility which iterates through each element of `TList` and intersects\nthe current value with `TIntersection`.\n\n- all intersections which evaluation to `never` are removed from the list\n```ts\ntype Arr = [1,2,\"foo\"];\n// [1,2]\ntype Num = IntersectWithAll<Arr, number>;\n```","tags":[]}],"deps":["module::3949993701::Filter"],"refs":[],"symbolHash":3388290673,"updated":1723767904503},{"name":"Intersection","fqn":"module::3720483918::Intersection","filepath":"src/types/sets/Intersection.ts","startLine":133,"endLine":151,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"},{"name":"TDeref","type":"TDeref"},{"name":"TReport","type":"TReport"}],"jsDocs":[{"comment":"**Intersection**`<A,B, [TDeref]>`\n\nTakes two tuple sets `A` and `B` and returns each of their _value intersections_.\n\n- this behavior is modified when the `deref` property is provided\n  - the expectation now is that both A and B contain _containers_ and their\n\"value\" is based on the offset provided by `TDref`\n  - in this mode, all _scalar_ values in `A` or `B` will be ignored\n  - the `TReport` property is by default set to _false_ but if changed to\n_true_ then this changes the reporting structure to:\n```ts\n[A: values[], B: values[]]\n```\nwhere the left side contains all containers -- in their entirety -- which\nintersect based on the `TDeref` property values.\n\n**Related:** `Unique`, `IntersectingKeys`","tags":[]}],"deps":["module::1931245833::If","module::2388225899::IsNull","local::3304841468::_NoDeref","ext::2318994541::PropertyKey","local::3304841468::HandleDeref","module::3686363877::Throw"],"refs":[],"symbolHash":500303297,"updated":1723767904410},{"name":"IntersectingKeys","fqn":"module::1356094254::IntersectingKeys","filepath":"src/types/sets/IntersectingKeys.ts","startLine":10,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"L","type":"L"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"**IntersectingKeys**`<A,B>`\n\nProvides a tuple of keys which are shared between the two \ncontainers passed in `A` and `B`.","tags":[]}],"deps":["module::2872591658::Container","module::458105997::UnionToTuple","module::4076869199::AsRecord"],"refs":[],"symbolHash":1778111128,"updated":1723767904410},{"name":"IntersectAll","fqn":"module::2486897834::IntersectAll","filepath":"src/types/lists/IntersectAll.ts","startLine":21,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TIntersect","type":"TIntersect"}],"jsDocs":[{"comment":"**IntersectAll**`<TList, TIntersect>`\n\nType utility which adds an _intersection_ with each element in `TList` \nwith `TIntersect`.","tags":[]}],"deps":["module::3605609985::Narrowable","ext::2318994541::Readonly","local::1102818139::Intersect"],"refs":[],"symbolHash":3595537656,"updated":1723767904331},{"name":"InternationalPhoneNumber","fqn":"module::423702921::InternationalPhoneNumber","filepath":"src/types/string-literals/character-sets/phone/InternationalPhoneNumber.ts","startLine":16,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDelimiter","type":"TDelimiter"}],"jsDocs":[{"comment":"**InternationalPhoneNumber**`<[TDelimiter]>`\n\nA phone number which explicitly leads by expressing the _country_ that the number belongs to.\n\n- uses `+` or `00` prefix to mark as a country code\n\n**Related:** `CountryPhoneNumber`, `LocalPhoneNumber`, `PhoneNumber`","tags":[]}],"deps":["module::3074325429::PhoneNumberDelimiter","module::1457734435::DialCountryCode","module::2452667987::CountryPhoneNumber"],"refs":[],"symbolHash":358708118,"updated":1723767904475},{"name":"InlineSvg","fqn":"module::4006007901::InlineSvg","filepath":"src/types/string-literals/character-sets/InlineSvg.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**InlineSvg**`<[T]>`\n\nmeant to represent a string value that appears to be\nan inline SVG representation.","tags":[]}],"deps":[],"refs":[],"symbolHash":2149618045,"updated":1723767904461},{"name":"IndexOf","fqn":"module::2376706334::IndexOf","filepath":"src/types/lists/IndexOf.ts","startLine":142,"endLine":151,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TIdx","type":"TIdx"},{"name":"TOverride","type":"TOverride"}],"jsDocs":[{"comment":"**IndexOf**<TValue, TIdx, [TOverride]>\n\nA type utility which _dereferences_ a property/index item on an array\nor object.\n\n- if `TIdx` is passed in as `null` then this will act as an identity\nfunction and return `TValue`.\n- if `TIdx` is a negative number it will index in reverse for tuple based\ncontainers\n\n**Related:** `Get`, `IsValidIndex`\n\n**Errors:** produces an `ErrorCondition<\"invalid-index\">` when an a bad index value\nis passed in for the given container","tags":[]}],"deps":["ext::2318994541::PropertyKey","module::3629498205::Constant","local::2666123552::Override","local::2666123552::Process"],"refs":[],"symbolHash":392193288,"updated":1723767904325},{"name":"IndexableObject","fqn":"module::4155635197::IndexableObject","filepath":"src/types/base-types/IndexableObject.ts","startLine":21,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TIndex","type":"TIndex"}],"jsDocs":[{"comment":"**IndexableObject**`<[TObj], [TIndex]>`\n\nType utility which receives a `KV` object and and adds an _index signature_\nso that other properties may be added in the runtime.\n\n- by default the index signature is `{ [key: string]: unknown; [key: symbol]: unknown }`\nbut this can be changed by changing `TIndex`\n\n```ts\n// { [x: string]: unknown; foo: 1; bar: 2 }\ntype FooBarIdx = IndexableObject<{foo: 1; bar: 2}, KV<string>>;\n```\n\n**Related:** `EmptyObject`, `IndexedObject`","tags":[]}],"deps":["module::186693758::Dictionary","module::1931245833::If","module::80185219::IsNever","module::1364134543::IsEqual","module::4114441065::EmptyObject","local::1424159856::Len","module::3435872486::ExpandRecursively","module::2365457769::RemoveIndex"],"refs":[],"symbolHash":813589756,"updated":1723767904149},{"name":"Indexable","fqn":"module::1956800830::Indexable","filepath":"src/types/base-types/Indexable.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Indexable**\n\nA type which can be _indexed_. This means either an array of\nsome sort, an indexable object, a `Map`, or a `WeakMap`.","tags":[]}],"deps":["module::334498121::IndexableObject","ext::2318994541::WeakMap","ext::2318994541::Map"],"refs":[],"symbolHash":1292489863,"updated":1723767904154},{"name":"Increment","fqn":"module::4161109717::Increment","filepath":"src/types/numeric-literals/Increment.ts","startLine":22,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Increment**`<T>`\n\nAllows a number -- or a string literal of a number -- to be _incremented_\nby one.\n```ts\n// 2\ntype T = Increment<1>;\n// \"2\"\ntype T = Increment<\"1\">;\n```","tags":[]}],"deps":["local::2738291851::Push","module::1695495442::FixedLengthArray","module::577891714::ToString","module::116081596::AsNumber"],"refs":[],"symbolHash":3103446992,"updated":1723767904374},{"name":"Immutable","fqn":"module::1012076437::Immutable","filepath":"src/types/type-conversion/Mutable.ts","startLine":40,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Immutable**`<T>`\n\nMakes a _mutable_ value _immutable_.","tags":[]}],"deps":[],"refs":[],"symbolHash":75396536,"updated":1723767904498},{"name":"IfUnsetOrUndefined","fqn":"module::270936371::IfUnsetOrUndefined","filepath":"src/types/boolean-logic/branching/IfUnset.ts","startLine":24,"endLine":32,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TElse","type":"TElse"},{"name":"TIf","type":"TIf"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::814973::Unset","module::1274869242::IsUndefined","ext::2318994541::Exclude"],"refs":[],"symbolHash":1178667472,"updated":1723767904246},{"name":"IfUnset","fqn":"module::2728744645::IfUnset","filepath":"src/types/boolean-logic/branching/IfUnset.ts","startLine":15,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TElse","type":"TElse"},{"name":"TIf","type":"TIf"}],"jsDocs":[{"comment":"**IfUnset**`<TTest,TElse,[TIf]>`\n\nBranching utility which will proxy _any_ type through except\nfor those set with `Unset<[T]>`.\n\nWhen `Unset` is found then it will be replaced with `TElse`.","tags":[]}],"deps":["module::814973::Unset","ext::2318994541::Exclude"],"refs":[],"symbolHash":1854819426,"updated":1723767904246},{"name":"IfNever","fqn":"module::1335517246::IfNever","filepath":"src/types/boolean-logic/branching/IfNever.ts","startLine":9,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**IfNever**`<T,IsNever,NotNever>`\n\nType utility which transforms type `T` based on whether it extends the _never_\ntype.","tags":[]}],"deps":["module::80185219::IsNever"],"refs":[],"symbolHash":2622991743,"updated":1723767904241},{"name":"IfLiteralKind","fqn":"module::3423590695::IfLiteralKind","filepath":"src/types/runtime-types/Type.ts","startLine":74,"endLine":78,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1635256379::TypeKind","module::3605609985::Narrowable","module::46091115::IsLiteralKind"],"refs":[],"symbolHash":3144110605,"updated":1723767904387},{"name":"IfLength","fqn":"module::2250238651::IfLength","filepath":"src/types/boolean-logic/branching/IfLength.ts","startLine":16,"endLine":34,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TEvaluate","type":"TEvaluate"},{"name":"TLength","type":"TLength"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"},{"name":"MAYBE","type":"MAYBE"}],"jsDocs":[{"comment":"**IfLength**`<TEvaluate,TLength,IF,[ELSE],[MAYBE]>`\n\nType utility which returns type `IF` when `TEvaluate` evaluates to being \na length of `TLength`. It returns type `ELSE` if it can determine the length\nat design time and otherwise returns `MAYBE`.\n\n- the `ELSE` type will default to `TEvaluate` by default\n- the `MAYBE` type will default to `IF | ELSE` by default\n- If a _non-array_ type is passed into `TEvaluate` then utility will result `ELSE`\ntype.","tags":[]}],"deps":["module::2666698309::Tuple","module::82688423::IsNumericLiteral","module::4258457119::IfEqual","module::1195601881::Length","module::1931245833::If","module::172457424::IsStringLiteral"],"refs":[],"symbolHash":4268435502,"updated":1723767904243},{"name":"IfLeft","fqn":"module::4003748087::IfLeft","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":55,"endLine":57,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IfLeft**`<T>`\n\nChecks that","tags":[]}],"deps":["module::1195775228::LeftRight","module::2953322716::IsSingleSided","local::889785542::left","module::2271274158::Defined"],"refs":[],"symbolHash":1981622423,"updated":1723767904186},{"name":"Iff","fqn":"module::742107040::Iff","filepath":"src/types/boolean-logic/branching/Iff.ts","startLine":36,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValues","type":"TValues"},{"name":"TIgnore","type":"TIgnore"},{"name":"TOffset","type":"TOffset"},{"name":"TNotFound","type":"TNotFound"}],"jsDocs":[{"comment":"**Iff**`<TValues,[TIgnore],[TOffset],[TNotFound]>`\n\nLooks through a list of values -- `TValues` -- until it finds\nthe first one which _does not_ extend `TIgnore` (which is by \ndefault set to null or undefined).\n\nIf it reaches the end without finding a value to use it will \nfall back on the `TNotFound` value which is `ErrorCondition<\"not-found\">`\nby default.","tags":[]}],"deps":["module::3227017853::NonArray","module::761993671::Nothing","ext::2318994541::PropertyKey","module::3686363877::Throw","module::4284904442::AsArray","module::2872591658::Container","local::3952940613::ProcessContainers","local::3952940613::Process"],"refs":[],"symbolHash":3197152207,"updated":1723767904244},{"name":"IfErrorCondition","fqn":"module::768334461::IfErrorCondition","filepath":"src/types/boolean-logic/branching/IfErrorCondition.ts","startLine":12,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**IFErrorCondition**`<T,IF,[ELSE]>`\n\nBranching utility which returns `IF` when `T` is an `ErrorCondition`, otherwise\nit returns `ELSE`.\n\n**Related:** `IfError`","tags":[]}],"deps":["module::3228905537::IsErrorCondition","module::729484003::ErrorConditionShape"],"refs":[],"symbolHash":350568746,"updated":1723767904241},{"name":"IfEquals","fqn":"module::2833135847::IfEquals","filepath":"src/types/boolean-logic/branching/IfEqual.ts","startLine":26,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"X","type":"X"},{"name":"Y","type":"Y"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**IfEqual**`<X,Y,[IF],[ELSE]>`\n\nType utility which returns type `IF` _if_ `X` is equal to `Y`; otherwise returns\ntype `ELSE`.\n\n**Note:** this is just a type alias for `IfEqual`","tags":[]}],"deps":["ext::2318994541::Exclude","module::666678570::IfEqual"],"refs":[],"symbolHash":3387360129,"updated":1723767904242},{"name":"IfAllLiteral","fqn":"module::4049844814::IfAllLiteral","filepath":"src/types/boolean-logic/branching/IfAllLiteral.ts","startLine":10,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTuple","type":"TTuple"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**IfAllLiteral**`<TTuple,IF,ELSE>`\n\nBranching utility which branches on whether the tuple passed in\nhas _literal_ values for every member.","tags":[]}],"deps":["module::2666698309::Tuple","module::625714087::AllLiteral"],"refs":[],"symbolHash":3784708267,"updated":1723767904240},{"name":"IfAllExtend","fqn":"module::2938699051::IfAllExtend","filepath":"src/types/boolean-logic/branching/IfAllExtend.ts","startLine":12,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TExtend","type":"TExtend"},{"name":"IF","type":"IF"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**IfAllExtend**`<TList,TExtend,IF,ELSE>`\n\nBranching type util which returns `IF` if **all** of the elements in\n`TList` extend `TExtend`.\n\n- this is an inverted branching util from `IfExtendsAll`\n- a closer comparison is `IfSomeExtend` which requires all items to extend","tags":[]}],"deps":["module::2109379844::AllExtend"],"refs":[],"symbolHash":3000761736,"updated":1723767904240},{"name":"If","fqn":"module::3930219395::If","filepath":"src/types/boolean-logic/branching/If.ts","startLine":31,"endLine":56,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TIf","type":"TIf"},{"name":"TElse","type":"TElse"},{"name":"TMaybe","type":"TMaybe"},{"name":"TNever","type":"TNever"},{"name":"TError","type":"TError"}],"jsDocs":[{"comment":"**If**`<TTest,[TIf],[TElse],[TMaybe]>`\n\nBranching utility which tests `TTest` for a boolean value.","tags":[]}],"deps":["module::80185219::IsNever","module::1939532401::ErrorCondition","module::4187212716::IsTrue","module::1272639998::IsBooleanLiteral","module::2984222131::LogicFunction","ext::2318994541::ReturnType","module::1567416713::IsFalse","module::996394587::IsBoolean","local::3490008594::InvalidTest"],"refs":[],"symbolHash":3502003419,"updated":1723767904241},{"name":"IdentityFunction","fqn":"module::4125100425::IdentityFunction","filepath":"src/types/base-types/fns/IdentityFunction.ts","startLine":5,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"An identity function is one which receives a value `T`\nand returns the same value `T`.","tags":[]}],"deps":[],"refs":[],"symbolHash":4279436898,"updated":1723767904182},{"name":"IdentityFn","fqn":"module::2180486374::IdentityFn","filepath":"src/types/functions/IdentityFn.ts","startLine":9,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TNarrow","type":"TNarrow"}],"jsDocs":[{"comment":"**IdentityFn**`<TValue, [TNarrow]>`\n\nA function which returns the value of `T`.","tags":[]}],"deps":["module::2707240268::IsLiteral","module::3393438424::IsUnion","module::3686363877::Throw"],"refs":[],"symbolHash":1080202783,"updated":1723767904318},{"name":"HexColor","fqn":"module::1969711526::HexColor","filepath":"src/types/literals/Color.ts","startLine":37,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**HexColor**\n\nA color value based in hexadecimal format","tags":[]}],"deps":["module::3304895550::HexadecimalChar"],"refs":[],"symbolHash":2144848488,"updated":1723767904342},{"name":"Hexadecimal","fqn":"module::2956872552::Hexadecimal","filepath":"src/types/string-literals/character-sets/Hexadecimal.ts","startLine":19,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Hexadecimal**\n\nA decent approximation for typing a _hexadecimal_ number representation.\nFor stronger type checking use `IsHexadecimal<T>`","tags":[]}],"deps":["module::306548031::HexadecimalChar"],"refs":[],"symbolHash":1742702917,"updated":1723767904459},{"name":"HaveSameNumericSign","fqn":"module::4264304004::HaveSameNumericSign","filepath":"src/types/boolean-logic/operators/HaveSameNumericSign.ts","startLine":15,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**HaveSameNumericSign**`<A,B>`\n\nValidates that `A` _and_ `B` are both negative number or both\npositive numbers.","tags":[]}],"deps":["module::3330042255::NumberLike","module::1931245833::If","module::4007167582::IsPositiveNumber","module::1640529169::IsNegativeNumber"],"refs":[],"symbolHash":4290341500,"updated":1723767904235},{"name":"HasWideValues","fqn":"module::2814386648::HasWideValues","filepath":"src/types/boolean-logic/operators/HasWideValues.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**HasWideValues**`<T>`\n\nTests whether any values in the tuple are _wide_ (aka, not a literal) value.","tags":[]}],"deps":["local::3011118821::Validate"],"refs":[],"symbolHash":47506009,"updated":1723767904223},{"name":"HasUppercase","fqn":"module::1544743551::HasUppercase","filepath":"src/types/string-literals/HasUppercase.ts","startLine":14,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Indicates whether `T` has uppercase characters in it.\n```ts\n// true\ntype T = HasUppercase<\"Foobar\">;\n// false \ntype T = HasUppercase<\"foobar\">;\n// \"unknown\"\ntype T = HasUppercase<string>;\n```","tags":[]}],"deps":["module::2595159798::UpperAlphaChar"],"refs":[],"symbolHash":1222643382,"updated":1723767904421},{"name":"HasUnionType","fqn":"module::3771462280::HasUnionType","filepath":"src/types/boolean-logic/operators/HasUnionType.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"**HasUnionType**`<TList>`\n\nChecks whether a list of items includes a value in it which is a _union type_.","tags":[]}],"deps":["local::2489501799::_HasUnion"],"refs":[],"symbolHash":4080834483,"updated":1723767904201},{"name":"HasSameValues","fqn":"module::2171436585::HasSameValues","filepath":"src/types/boolean-logic/operators/HasSameValues.ts","startLine":37,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**HasSameValues**`<TContainer,TComparator>`\n\nBoolean type utility which determines if the values in\n`TList` and `TComparator` are the same (even if the order\nis different).","tags":[]}],"deps":["local::1878389361::Process","module::186693758::Dictionary","module::3974819915::Values"],"refs":[],"symbolHash":664685078,"updated":1723767904201},{"name":"HasSameKeys","fqn":"module::1302048433::HasSameKeys","filepath":"src/types/boolean-logic/operators/HasSameKeys.ts","startLine":25,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**HasSameKeys**`<A,B>`\n\nBoolean operator which compares two lists to see if they have the same keys.","tags":[]}],"deps":["module::2872591658::Container","module::4041511888::IsTuple","module::3750673569::AsTuple","local::3960513784::Process","module::3591638282::DoesExtend","local::3960513784::_Keys","module::3965208509::HasSameValues"],"refs":[],"symbolHash":2808438973,"updated":1723767904224},{"name":"HasRequiredProps","fqn":"module::3476660256::HasRequiredProps","filepath":"src/types/boolean-logic/operators/HasRequiredProps.ts","startLine":9,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**HasRequiredProps**`<T>`\n\nReceives an object and returns true/false based on whether\nthe type has required properties or not.","tags":[]}],"deps":["module::186693758::Dictionary","module::4102577001::Keys","module::2153154265::RequiredProps","module::4119350992::ObjectKey"],"refs":[],"symbolHash":657796538,"updated":1723767904225},{"name":"HasQueryParameter","fqn":"module::333292321::HasQueryParameter","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":186,"endLine":192,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"P","type":"P"}],"jsDocs":[{"comment":"**HasQueryParameter**`<T,P>`\n\nChecks whether the URL in `T` has a query parameter with the key of `P`.","tags":[]}],"deps":["module::83169107::And","module::172457424::IsStringLiteral","module::790210903::GetUrlQueryParams"],"refs":[],"symbolHash":402900336,"updated":1723767904233},{"name":"HasProp","fqn":"module::3360450179::HasProp","filepath":"src/types/boolean-logic/operators/HasProp.ts","startLine":11,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TProp","type":"TProp"},{"name":"TIf","type":"TIf"},{"name":"TElse","type":"TElse"}],"jsDocs":[{"comment":"**HasProp**<TTest,TProp,[TIf],[TElse]>\n\nBoolean operator which returns true or false (by default) based\non whether `TTest` has a property defined by `TProp`.\n\nIf you wish to change the true/false values you can override\nthe `Tif` and `TElse` generics.","tags":[]}],"deps":[],"refs":[],"symbolHash":428088043,"updated":1723767904223},{"name":"HasPhoneCountryCode","fqn":"module::545672639::HasPhoneCountryCode","filepath":"src/types/boolean-logic/operators/PhoneOperators.ts","startLine":48,"endLine":61,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TPhone","type":"TPhone"},{"name":"TExplicit","type":"TExplicit"}],"jsDocs":[{"comment":"**HasPhoneCountryCode**`<T>`\n\nBoolean operator which validates whether the passed in `T` has a country code leading it (ignoring any leading\nwhitespace):\n\n- by default, the country code is not only parsed out of the phone number but also validated against an world\nwide index of valid country codes\n- if you want to just validate that user _attempted_ to express a country code then you can change the check by\nsetting `TExplicit` to **false**.\n\n**Related:** `IsPhoneNumber`, `PhoneNumber`","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::4187212716::IsTrue","module::2524449437::GetPhoneCountryCode","module::629825325::PhoneCountryCode"],"refs":[],"symbolHash":4179954024,"updated":1723767904233},{"name":"HasParameters","fqn":"module::724625225::HasParameters","filepath":"src/types/boolean-logic/operators/HasParameters.ts","startLine":14,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**HasParameters**`<T>`\n\nType utility which detects if `T` is both a function and whether that\nfunction has at least one type parameter.\n```ts\nconst fn = (foo: string) => `${foo}bar`;\n// true\ntype P = HasParameters<typeof fn>;\n```","tags":[]}],"deps":["module::540585742::TypedFunction","module::1364134543::IsEqual","module::1195601881::Length","ext::2318994541::Parameters"],"refs":[],"symbolHash":1723353601,"updated":1723767904201},{"name":"HasOtherCharacters","fqn":"module::2172956728::HasOtherCharacters","filepath":"src/types/boolean-logic/operators/HasOtherCharacters.ts","startLine":27,"endLine":38,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TChars","type":"TChars"}],"jsDocs":[{"comment":"**HasOtherCharacters**`<TStr,TChars>`\n\nBoolean type utility which tests whether `TStr` has any\ncharacters _other_ than those in `TChars`. \n\n- union types are fine for `TChars`\n- a tuple for `TChars` behaves the same as union type\n\n**Related:** `HasCharacters`","tags":[]}],"deps":["module::391074403::IsWideType","local::1036253892::Process","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":2219706047,"updated":1723767904222},{"name":"HasIpAddress","fqn":"module::3218543500::HasIpAddress","filepath":"src/types/boolean-logic/operators/Network-operators.ts","startLine":142,"endLine":148,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**HasIpAddress**`<T>`\n\na boolean operator which tests whether a string literal `T` has an IP address\nin it.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::2631466056::Ip4Address","module::683291882::Ip6AddressLoose","module::1328685990::IsIp4Address"],"refs":[],"symbolHash":1964222455,"updated":1723767904232},{"name":"HasIndex","fqn":"module::1655999471::HasIndex","filepath":"src/types/boolean-logic/operators/HasIndex.ts","startLine":11,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TIdx","type":"TIdx"}],"jsDocs":[{"comment":"**HasIndex**`<TContainer, TIdx>`\n\nBoolean operator that tests whether `TContainer` has the\nindex value `TIdx`.","tags":[]}],"deps":["ext::2318994541::PropertyKey","module::2872591658::Container"],"refs":[],"symbolHash":2335007556,"updated":1723767904224},{"name":"HasEscapeFunction","fqn":"module::957252012::HasEscapeFunction","filepath":"src/types/boolean-logic/operators/ApiOperators.ts","startLine":16,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**HasEscapeFunction**`<T>`\n\nChecks whether the API surface passed in has an escape function defined.","tags":[]}],"deps":["module::186693758::Dictionary","module::540585742::TypedFunction","module::417089564::Api","module::2761333230::GetEscapeFunction","module::1939532401::ErrorCondition"],"refs":[],"symbolHash":3513291488,"updated":1723767904192},{"name":"HasCharacters","fqn":"module::3115258547::HasCharacters","filepath":"src/types/boolean-logic/operators/HasCharacters.ts","startLine":57,"endLine":72,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TChars","type":"TChars"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"**HasCharacters**`<TStr,TChars>`\n\nBoolean type utility which tests whether `TStr` has _any_ of the\ncharacters in `TChars`. \n\n- If you would prefer to test for ALL characters matching then \nyou can change `TOp` to \"all\".\n\n**Related:** `NotCharacters`","tags":[]}],"deps":["module::172457424::IsStringLiteral","local::406245140::PreProcess","module::1118303037::AllStringLiterals","module::4284904442::AsArray","local::406245140::ProcessTuple"],"refs":[],"symbolHash":2929455698,"updated":1723767904221},{"name":"HasArray","fqn":"module::2215630505::HasArray","filepath":"src/types/boolean-logic/operators/HasArray.ts","startLine":16,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"**HasArray**`<TList>`\n\nChecks whether a list of items includes an _array_ (tuple or wide array type) within it.","tags":[]}],"deps":["local::1101128538::_HasArray"],"refs":[],"symbolHash":3029038732,"updated":1723767904235},{"name":"HandleDoneFn","fqn":"module::2094518275::HandleDoneFn","filepath":"src/types/functions/HandleDoneFn.ts","startLine":10,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**HandleDoneFn**`<T>`\n\nA type utility which looks for a `done` property on `T` and\nif it's a function it will convert the type to the _return type_\nof the `done()` function.","tags":[]}],"deps":["module::540585742::TypedFunction","ext::2318994541::ReturnType"],"refs":[],"symbolHash":4080480555,"updated":1723767904315},{"name":"Handle","fqn":"module::3567204042::Handle","filepath":"src/types/boolean-logic/branching/Handle.ts","startLine":32,"endLine":50,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"THandle","type":"THandle"},{"name":"TMapTo","type":"TMapTo"},{"name":"TSpecificity","type":"TSpecificity"}],"jsDocs":[{"comment":"**Handle**`<TContent,THandle,TMapTo,[TSpecificity]>`\n\nMaps `TContent` when it _extends_ / _equals (based on `TSpecificity`) the type\nof `THandle` to `TMapTo`, otherwise it just proxies the value through.\n\n- `TSpecificity` defaults to _extends_ but can be set to _equals_\n\n**Related:** `THandle`","tags":[]}],"deps":["local::519239118::Narrow","module::1931245833::If","module::1364134543::IsEqual"],"refs":[],"symbolHash":2572692736,"updated":1723767904243},{"name":"GitRef","fqn":"module::2464499602::GitRef","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":63,"endLine":63,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**GitRef**\n\nA type that provides the basic shape of a non-HTTP reference\nto a Git repository.","tags":[]}],"deps":[],"refs":[],"symbolHash":3311654836,"updated":1723767904462},{"name":"GithubRepoUrl","fqn":"module::1889877863::GithubRepoUrl","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":78,"endLine":84,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GithubRepoUrl**`<[T]>`\n\nA type which represents the pattern of a URL pointing a repository\non Github.\n\nWhen used _without the provided generic_ it provides a decent shape but will introduce\nfalse positives due to URL subpaths that exist.\n\nIf you pass the value through the generic `T` then it will proxy the value through\nif it's a valid Repo URL (including a subpath validation) or `never` if it is not.","tags":[]}],"deps":["module::3629498205::Constant","module::2350035540::AlphaNumericChar","module::336478937::GetUrlPath"],"refs":[],"symbolHash":3340744388,"updated":1723767904462},{"name":"GithubProjectsUrl","fqn":"module::669924636::GithubProjectsUrl","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":109,"endLine":112,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOnlySummary","type":"TOnlySummary"}],"jsDocs":[{"comment":"**GithubProjectsUrl**`<[TOnlySummary]>`\n\nProvides a shape for either the _projects summary_ page of a repo on Github\nor that plus any specific _issue_ URLs.\n\n- by default it will show any Projects page but set `TOnlySummary` to false\nif you're only wanting to match the summary page.","tags":[]}],"deps":["module::4187212716::IsTrue"],"refs":[],"symbolHash":1146352497,"updated":1723767904463},{"name":"GithubIssuesUrl","fqn":"module::794012385::GithubIssuesUrl","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":95,"endLine":98,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOnlySummary","type":"TOnlySummary"}],"jsDocs":[{"comment":"**GithubIssuesUrl**`<[TOnlySummary]>`\n\nProvides a shape for either the _issues summary_ page of a repo on Github\nor that plus any specific _issue_ URLs.\n\n- by default it will show any issues page but set `TOnlySummary` to false\nif you're only wanting to match the summary page.","tags":[]}],"deps":["module::4187212716::IsTrue"],"refs":[],"symbolHash":590748176,"updated":1723767904463},{"name":"GithubInsightUrl","fqn":"module::1204465211::GithubInsightUrl","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":168,"endLine":176,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GithubInsightUrl**`<[T]>`\n\nProvides a URL shape that fits all of the _insights_ pages\nfor a repo on Github.\n\n- if you want to pair down the types of insight pages you're\nmatching for you can specify `T` as some union type of `GithubInsightPageType`","tags":[]}],"deps":["module::894899468::GithubInsightPageType","module::3393438424::IsUnion","module::2535688849::TupleToUnion","local::2596737201::_GithubInsightUrl","module::3860303104::As","module::458105997::UnionToTuple","local::2596737201::GhLookup"],"refs":[],"symbolHash":1116342424,"updated":1723767904464},{"name":"GithubActionsUrl","fqn":"module::2458836022::GithubActionsUrl","filepath":"src/types/string-literals/character-sets/Repos.ts","startLine":123,"endLine":126,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOnlySummary","type":"TOnlySummary"}],"jsDocs":[{"comment":"**GithubActionsUrl**`<[TOnlySummary]>`\n\nProvides a shape for either the _actions summary_ page of a repo on Github\nor that plus any specific Job URLs.\n\n- by default it will show any actions related page but set `TOnlySummary` to false\nif you're only wanting to match the summary page.","tags":[]}],"deps":["module::4187212716::IsTrue"],"refs":[],"symbolHash":3694503041,"updated":1723767904463},{"name":"GetYouTubePageType","fqn":"module::663450375::GetYouTubePageType","filepath":"src/types/string-literals/character-sets/YouTube.ts","startLine":198,"endLine":238,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetYouTubePageType**`<T>`\n\nGiven a URL passed into `T`, this utility will give you an indication\nof what type of YouTube content you'll find at this location (or return\n_never_ if it's not a YouTube URL).","tags":[]}],"deps":["module::3621971459::YouTubeUrl","module::894781706::YouTubeHome","module::702316716::YouTubeVideoUrl","module::3985781725::HasQueryParameter","module::4212651546::YouTubeShareUrl","module::1226739402::YouTubeCreatorUrl","module::336478937::GetUrlPath","module::3431685797::Last","module::3471304285::Split","module::929252488::YouTubeFeedUrl","module::4263591073::YouTubeVideosInPlaylist"],"refs":[],"symbolHash":2051821651,"updated":1723767904467},{"name":"GetUrlQueryParams","fqn":"module::165002419::GetUrlQueryParams","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":297,"endLine":306,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"S","type":"S"}],"jsDocs":[{"comment":"**GetUrlQueryParams**`<T, [S]>`\n\nGiven a URL passed into `T`, this utility will extract the\nquery parameters portion of the URL or `\"\"` if none exists.","tags":[]}],"deps":["module::1274869242::IsUndefined","module::2698938817::Contains"],"refs":[],"symbolHash":380912337,"updated":1723767904450},{"name":"GetUrlPort","fqn":"module::4224325149::GetUrlPort","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":120,"endLine":126,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetUrlPort**`<T>`\n\nReturns the port designated in the URL passed in if found.\n\n- if `T` is a literal string and port not found then value is \"default\"\n- if `T` is a wide string then the value will be `number | \"default\"`\n- all non-string based values result in `never`","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::4245877116::RemoveNetworkProtocol","module::116081596::AsNumber","module::3128425614::RetainWhile","module::1881292962::NumericChar"],"refs":[],"symbolHash":3769383081,"updated":1723767904447},{"name":"GetUrlPath","fqn":"module::3110882155::GetUrlPath","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":282,"endLine":288,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetUrlPath**`<T>`\n\nExtracts the URL's path from a full URL/URI.\n\n- removes any reference to the network protocol\n- removes the domain name or IP address\n- removes any trailing query parameters","tags":[]}],"deps":["module::172457424::IsStringLiteral","local::363308419::_GetUrlPath","module::3030774352::RemoveUrlSource","module::4245877116::RemoveNetworkProtocol","module::2355278319::RemoveUrlPort"],"refs":[],"symbolHash":4102394557,"updated":1723767904450},{"name":"GetTypeOf","fqn":"module::1569632177::GetTypeOf","filepath":"src/types/runtime-types/TypeOf.ts","startLine":41,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetTypeOf**`<T>`\n\ntype utility which converts a type string literal which represents\nthe value of this type from the standpoint of Javascript's `typeof`\noperator.","tags":[]}],"deps":["module::3580587573::AnyFunction","module::1903151425::AnyObject","module::1274869242::IsUndefined","module::1286478530::TypeOf"],"refs":[],"symbolHash":3803030302,"updated":1723767904395},{"name":"GetPhoneNumberType","fqn":"module::3043233130::GetPhoneNumberType","filepath":"src/types/string-literals/character-sets/phone/GetPhoneNumberType.ts","startLine":20,"endLine":39,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**GetPhoneNumberType**`<T>`\n\nIndicates whether the phone number is \"international\", \"country\", or \"regional\"\nbased on the shape and number of digits","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::2185395147::HasPhoneCountryCode","module::1551084983::IsLessThan","module::490171167::StrLen","module::1668594894::RetainChars","module::2678895335::Trim","module::1881292962::NumericChar"],"refs":[],"symbolHash":3345097869,"updated":1723767904474},{"name":"GetPhoneCountryCode","fqn":"module::3691551848::GetPhoneCountryCode","filepath":"src/types/string-literals/character-sets/phone/GetPhoneCountryCode.ts","startLine":21,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"GetPhoneCountryCode`<T>`\n\nAttempts to find a country code signature in a phone number.\n\n- it returns the country code without the leading `+` or `00` prefix\n- if there is no delimiter or prefix for the country code then, then it\nwill use a _real_ list of country codes to try to extract this value\n- if not found it returns an empty string (`\"\"`)\n- if `T` is a _wide_ string string then this will return `string` back","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::3722295612::StartsWith","module::2678895335::Trim","module::3074325429::PhoneNumberDelimiter","module::1650675435::RetainUntil"],"refs":[],"symbolHash":139815269,"updated":1723767904474},{"name":"GetEach","fqn":"module::348005253::GetEach","filepath":"src/types/lists/GetEach.ts","startLine":46,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TKey","type":"TKey"}],"jsDocs":[{"comment":"**GetEach**`<TList, TKey, [THandleErrors]>`\n\nType utility which receives a list of types -- `TList` -- and then _gets_ a \nkey `TKey` (using dot syntax) from each element in the array.\n\n- if a given element is not an object then it is excluded from the result set\n- values which evaluate to _undefined_ are also removed from the result set\n- if either `null` or \"\" are used for `TKey` then this simply proxies `TList`\nthrough\n\n```ts\n// [\"Bob\", \"Wendy\"]\ntype T = GetEach<[\n   { name: \"Bob\", age: 12 },\n   { name: \"Wendy\", age: 24 }\n], \"name\">\n```","tags":[]}],"deps":["module::2747467799::IsReadonlyArray","ext::2318994541::Readonly","local::1259673248::Process","ext::2318994541::Exclude"],"refs":[],"symbolHash":3032905879,"updated":1723767904339},{"name":"Get","fqn":"module::3495494200::Get","filepath":"src/types/dictionary/Get.ts","startLine":11,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TDotPath","type":"TDotPath"},{"name":"TDefVal","type":"TDefVal"}],"jsDocs":[{"comment":"**Get**`<TContainer,TDotPath,[TDefVal]>`","tags":[]}],"deps":["module::80185219::IsNever","local::2221494839::_Get"],"refs":[],"symbolHash":747189854,"updated":1723767904255},{"name":"GeneratorToken","fqn":"module::288729532::GeneratorToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":120,"endLine":120,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4184466961::BaseTypeToken"],"refs":[],"symbolHash":765249981,"updated":1723767904399},{"name":"FullyQualifiedUrl","fqn":"module::746163013::FullyQualifiedUrl","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":334,"endLine":334,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"A literal variant of _string_ which forces a string to follow conventions\nfor a fully qualified URL like `https://google.com`. It can't ensure the\ntype is fully valid but does help to avoid some typos.","tags":[]}],"deps":["module::1762127496::NetworkProtocol","module::2631466056::Ip4Address","module::3045542239::DomainName"],"refs":[],"symbolHash":715169243,"updated":1723767904450},{"name":"FullWidthQuotation","fqn":"module::1809477362::FullWidthQuotation","filepath":"src/types/string-literals/character-sets/quotation-marks/individual-smart-marks.ts","startLine":77,"endLine":77,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**FullWidthQuotation**\n\nA double quotation mark that takes the full width\nof a fixed width space available and is centered\nin that space.","tags":[]}],"deps":[],"refs":[],"symbolHash":1752388466,"updated":1723767904469},{"name":"FullDate","fqn":"module::1112229082::FullDate","filepath":"src/types/string-literals/Date.ts","startLine":135,"endLine":135,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**FullDate**\n\nAllows the representation of a date using one of several representations:\n\n1. `YYYY-MM-DD` / `YYYY.MM.DD` / `YYYY/MM/DD`\n2. `13 Jun 2020`\n3. `July 4th, 2019`\n\nNote: to keep types as simple as possible, the `YMD` type has been replaced\nwith just the `YMD_Simple` type. If you really need stronger typing use\nthe `FullDateStrong` type.","tags":[]}],"deps":["module::4189209977::YMD","module::865837993::DateThenMonthThenYear","module::155385996::MonthThenDateThenYear"],"refs":[],"symbolHash":2322688844,"updated":1723767904419},{"name":"FromWideTokens","fqn":"module::680681583::FromWideTokens","filepath":"src/types/literals/FromTokenNames.ts","startLine":70,"endLine":81,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TElse","type":"TElse"}],"jsDocs":[{"comment":"**FromWideTokens**`<T, [TElse]>`\n\nLooks for `WideContainerNames` or `WideTokenNames` and converts them to\nthe type they describe. If it is `T` is not any of these tokens it is\nsimply proxied through.\n\nIf you'd prefer to setup a different type for when no token is matched\nyou can add it under `TElse`.","tags":[]}],"deps":["module::2829112565::WideTokenNames","module::1681984186::WideContainerNames","module::4261511665::ConvertWideTokenNames","local::1062400672::ConvertWideContainerNames","module::80185219::IsNever"],"refs":[],"symbolHash":3963902577,"updated":1723767904370},{"name":"FromTypeDefn","fqn":"module::3949595422::FromTypeDefn","filepath":"src/types/runtime-types/Type.ts","startLine":213,"endLine":248,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TD","type":"TD"}],"jsDocs":[{"comment":"**FromTypeDefn**`<TypeDefn>`\n\nType utility which converts from the minimalist `TypeDefn` to a full\nfledged `Type` definition.","tags":[]}],"deps":["module::551358879::TypeDefn","module::1796123045::Type","module::1364134543::IsEqual","module::1567416713::IsFalse","module::172457424::IsStringLiteral","module::1412066075::IsArray","ext::2318994541::Exclude","module::3860303104::As","module::1931245833::If","module::2376902257::Or","module::3024876770::NoDefaultValue","module::3393438424::IsUnion","module::4026404333::TypeHasDefaultValue","module::1035359669::TypeHasValidations"],"refs":[],"symbolHash":983417526,"updated":1723767904390},{"name":"FromRecordKeyDefn","fqn":"module::2022872272::FromRecordKeyDefn","filepath":"src/types/literals/Shape.ts","startLine":264,"endLine":274,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3071457955::RecordKeyDefn","module::1473201238::ShapeCallback","module::1548065869::HandleDoneFn","ext::2318994541::ReturnType"],"refs":[],"symbolHash":1833967971,"updated":1723767904354},{"name":"FromMaybeRef","fqn":"module::943291487::FromMaybeRef","filepath":"src/types/dictionary/FromMaybeRef.ts","startLine":9,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**FromMaybeRef**`<T>`\n\nDereferences the `value` property on VueJS `Ref<T>`'s otherwise\nreturns `T` as is.","tags":[]}],"deps":["module::1228063573::IsVueRef"],"refs":[],"symbolHash":2317052128,"updated":1723767904258},{"name":"FromLiteralTokens","fqn":"module::3986594194::FromLiteralTokens","filepath":"src/types/runtime-types/FromLiteralTokens.ts","startLine":54,"endLine":56,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**FromLiteralTokens**`<T>`\n\nType utility which converts an array of `StringLiteralToken`'s\ninto a literal type.","tags":[]}],"deps":["module::887915303::StringLiteralToken","local::3744221013::_Convert"],"refs":[],"symbolHash":3593607321,"updated":1723767904396},{"name":"FromDictArray","fqn":"module::393943926::FromDictArray","filepath":"src/types/tuples/FromDictArray.ts","startLine":11,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Typescript utility which receives `T` as shape which resembles `DictArray<D>`\nand if the type `D` can be inferred it is returned.\n```ts\n// { foo: 1; bar: \"hi\" }\ntype Dict = FromDictArray<[[\"foo\", { foo: 1 }], [\"bar\", { bar: \"hi\" }]]>;\n```","tags":[]}],"deps":["ext::2318994541::Record","module::3435872486::ExpandRecursively","module::1904522907::UnionToIntersection"],"refs":[],"symbolHash":670422102,"updated":1723767904486},{"name":"FromDefn","fqn":"module::577593398::FromDefn","filepath":"src/types/literals/FromDefn.ts","startLine":130,"endLine":135,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TElse","type":"TElse"}],"jsDocs":[{"comment":"**FromDefn**`<T, [TElse]>`\n\nTakes either a singular `T` or a tuple of values for `T` and\nlooks for any cases where a `ShapeCallback` is found:\n\n- where it is found, it will resolve the type\n- where it is not it will simply proxy the values through\n- if `TElse` is set you can redirect values which don't use\nthe ShapeCallback API to a specific type.\n\nNote: when dictionary objects are found the _values_ will be \ninterrogated for ShapeCallback's.","tags":[]}],"deps":["module::3629498205::Constant","local::1570400418::IterateOverDefinitions","local::1570400418::ToType"],"refs":[],"symbolHash":1903383605,"updated":1723767904370},{"name":"FnWithProps","fqn":"module::2729458414::FnWithProps","filepath":"src/types/functions/FnWithProps.ts","startLine":18,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"},{"name":"TProps","type":"TProps"},{"name":"TClone","type":"TClone"}],"jsDocs":[{"comment":"**FnWithProps**`<TFn,TProps,[TClone]>`\n\nProduces a function which is intersected with a dictionary of KV's.\n\n**Related**: `SimpleFn`, `NarrowableFn`, `AnyFunction`, `IsFunctionWithDict`","tags":[]}],"deps":["module::540585742::TypedFunction","module::1903151425::AnyObject","module::1931245833::If","module::4187212716::IsTrue","module::809272385::JustFunction"],"refs":[],"symbolHash":889243599,"updated":1723767904311},{"name":"FnWithDescription","fqn":"module::1225981246::FnWithDescription","filepath":"src/types/functions/FnWithDescription.ts","startLine":10,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"}],"jsDocs":[{"comment":"**Fn**`<TArgs,TReturn>`","tags":[]}],"deps":["module::2142645710::FnDefn","module::3580587573::AnyFunction","ext::2318994541::Record","module::4119350992::ObjectKey"],"refs":[],"symbolHash":2917917507,"updated":1723767904314},{"name":"FnToken","fqn":"module::462254778::FnToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":119,"endLine":119,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::4184466961::BaseTypeToken"],"refs":[],"symbolHash":407812825,"updated":1723767904399},{"name":"FnReturnTypeDefn","fqn":"module::2551441662::FnReturnTypeDefn","filepath":"src/types/literals/Shape.ts","startLine":232,"endLine":232,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**FnReturnTypeDefn**\n\nThe definition of _return type_ of a function","tags":[]}],"deps":["module::4069020921::WideTokenNames","module::1473201238::ShapeCallback"],"refs":[],"symbolHash":3147924514,"updated":1723767904353},{"name":"FnProps","fqn":"module::2673570554::FnProps","filepath":"src/types/functions/FnProps.ts","startLine":23,"endLine":25,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**FnProps**`<T>`\n\nReturn a dictionary of key/value pairs from a function. If no key/value\npairs are assigned to the function base then an empty object is returned.","tags":[]}],"deps":["module::3580587573::AnyFunction","local::2479988965::Process"],"refs":[],"symbolHash":1065400855,"updated":1723767904313},{"name":"FnPropertiesDefn","fqn":"module::703125480::FnPropertiesDefn","filepath":"src/types/literals/Shape.ts","startLine":239,"endLine":239,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**FnPropertiesDefn**\n\nThe definition of the _optional_ properties associated with a function.","tags":[]}],"deps":["module::3498155058::DictionaryTypeDefn"],"refs":[],"symbolHash":3833385496,"updated":1723767904353},{"name":"FnMeta","fqn":"module::773474216::FnMeta","filepath":"src/types/functions/FnMeta.ts","startLine":23,"endLine":36,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"},{"name":"TArgs","type":"TArgs"},{"name":"TReturn","type":"TReturn"},{"name":"TProps","type":"TProps"}],"jsDocs":[{"comment":"**FnMeta**<TArgs,TReturn,TProps>\n\nThe meta-information around a given function. Represented as an\nobject with the following properties:\n\n1. `args` - the array of arguments the function expects\n2. `returns` - the return type of the function\n3. `props` - any Key/Value props also packaged with the function, if no\nkey/values are found it will be set to `no-props`.","tags":[]}],"deps":["module::3580587573::AnyFunction","module::186693758::Dictionary","module::3866744368::IsNonEmptyObject","module::3096040080::IsNarrowingFn"],"refs":[],"symbolHash":888683850,"updated":1723767904312},{"name":"FnFrom","fqn":"module::1184084655::FnFrom","filepath":"src/types/functions/FnFrom.ts","startLine":8,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TParams","type":"TParams"},{"name":"TReturn","type":"TReturn"},{"name":"TProps","type":"TProps"}],"jsDocs":[{"comment":"**FnFrom**`<TParams,[TReturn],[TProps]>`\n\nType utility  to build a type from it's constituent parts.","tags":[]}],"deps":["module::2666698309::Tuple","module::186693758::Dictionary","module::4114441065::EmptyObject"],"refs":[],"symbolHash":4227100048,"updated":1723767904312},{"name":"FnArgsDefn","fqn":"module::3969479614::FnArgsDefn","filepath":"src/types/literals/Shape.ts","startLine":225,"endLine":225,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**FnArgsDefn**\n\nThe definition of a function's argument","tags":[]}],"deps":["module::1473201238::ShapeCallback","module::1387603245::WideContainerNames"],"refs":[],"symbolHash":298405566,"updated":1723767904353},{"name":"FnAllowingProps","fqn":"module::2285526917::FnAllowingProps","filepath":"src/types/base-types/fns/FnAllowingProps.ts","startLine":12,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDict","type":"TDict"}],"jsDocs":[{"comment":"**FnAllowingProps**\n\nAllows for any typed function and any associated key/value properties.\n\n- by default all properties are allowed and set to `unknown` but you can use\noptional generic `TDict` to be more explicit about the properties.","tags":[]}],"deps":["module::186693758::Dictionary","ext::2318994541::Record","module::4119350992::ObjectKey","module::540585742::TypedFunction"],"refs":[],"symbolHash":3129942520,"updated":1723767904181},{"name":"FluentApi","fqn":"module::1827913745::FluentApi","filepath":"src/types/api/api.ts","startLine":117,"endLine":123,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSurface","type":"TSurface"},{"name":"TState","type":"TState"},{"name":"TFluentFns","type":"TFluentFns"}],"jsDocs":[{"comment":"**FluentApi**`<TSurface,TState,TFluentFns>`\n\nDefines the callback loop necessary to manage state via a\nFluent API.","tags":[]}],"deps":["module::186693758::Dictionary","module::540585742::TypedFunction","module::4233178244::FluentFn","module::4139463594::FluentState","module::3435872486::ExpandRecursively","local::266219068::ExpandFluentFns"],"refs":[],"symbolHash":350694460,"updated":1723767904133},{"name":"FlattenUnion","fqn":"module::792332803::FlattenUnion","filepath":"src/types/lists/Flatten.ts","startLine":70,"endLine":74,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3393438424::IsUnion","local::3681635331::Iterate","module::458105997::UnionToTuple"],"refs":[],"symbolHash":446129365,"updated":1723767904326},{"name":"Flatten","fqn":"module::698793960::Flatten","filepath":"src/types/lists/Flatten.ts","startLine":135,"endLine":149,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TLevel","type":"TLevel"},{"name":"ToScalar","type":"ToScalar"}],"jsDocs":[{"comment":"**Flatten**`<TList, [TLevel], [ToScalar]>`\n\n- where `TList` is an array, this utility will flatten the array to a depth of\n`TLevel` (by default one level).\n- where `TList` is a _union type_ it will flatten any of it's elements\n- where `TList is neither an array nor has a union type which is, this utility\nsimply proxies the value `TList` through\n- in most cases you would not _flatten_ below a single dimensional array but\nif you set `ToScalar` to `true` then it will flatten right out of being an array\ninto a union type","tags":[]}],"deps":["local::3681635331::Process","module::3393438424::IsUnion","local::3681635331::IterateScalar","module::458105997::UnionToTuple","module::4041511888::IsTuple","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":3407065594,"updated":1723767904326},{"name":"FixedLengthArray","fqn":"module::3850611739::FixedLengthArray","filepath":"src/types/tuples/FixedLengthArray.ts","startLine":25,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"N","type":"N"}],"jsDocs":[{"comment":"**FixedLengthArray**`<T,N>`\n\nCreates a fixed length `<N>` array of a given type `<T>`","tags":[]}],"deps":["local::3853108191::Process"],"refs":[],"symbolHash":1990121759,"updated":1723767904486},{"name":"FirstString","fqn":"module::4050918548::FirstString","filepath":"src/types/lists/FirstString.ts","startLine":4,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Returns the first `string` value from an array of values","tags":[]}],"deps":[],"refs":[],"symbolHash":1987993262,"updated":1723767904322},{"name":"FirstOfEach","fqn":"module::2012794717::FirstOfEach","filepath":"src/types/tuples/FirstOfEach.ts","startLine":12,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**FirstOfEach**`<TList>`\n\nExpects `TList` to consist of an array of arrays and then this utility will reduce\nthis to a _tuple_ of all the first elements in `TList`.\n\n```ts\n// [\"foo\", \"bar\"]\ntype A = FirstOfEach<[ [\"foo\", 1], [\"bar\", 2] ]>;\n```","tags":[]}],"deps":[],"refs":[],"symbolHash":2139548269,"updated":1723767904485},{"name":"FirstKeyValue","fqn":"module::554640061::FirstKeyValue","filepath":"src/types/tuples/FirstKeyValue.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Utility type which operates on a dictionary and provides the **value** of the\n`First<T>` key of the dictionary. Because dictionary's don't provide assurances\nabout key order, this is typically only used in cases where it's known there is\na single key on the object.","tags":[]}],"deps":["module::186693758::Dictionary","module::3234968973::FirstKey"],"refs":[],"symbolHash":3387120476,"updated":1723767904485},{"name":"FirstKey","fqn":"module::1807831975::FirstKey","filepath":"src/types/tuples/FirstKey.ts","startLine":9,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Returns the _first_ key in an object.\n\n**Note:** key order is not guaranteed so typically this is used\nfor a key/value pair where only one key is expected","tags":[]}],"deps":["module::186693758::Dictionary","module::2666698309::Tuple","module::458105997::UnionToTuple","module::4102577001::Keys"],"refs":[],"symbolHash":4139871943,"updated":1723767904485},{"name":"FirstChar","fqn":"module::3940462937::FirstChar","filepath":"src/types/string-literals/FirstChar.ts","startLine":23,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"}],"jsDocs":[{"comment":"**FirstChar**`<TContent>`\n\nWhen `TContent` extends a _string_:\n  - will return the first character in a string literal\n  - returns `string` when a wide type is encountered\n  - returns `never` when an empty string is passed in\n\nWhen `TContent` is a tuple of strings:\n  - each item will be processed as described above\n\n**Related:** `LastChar`, `AfterFirstChar`","tags":[]}],"deps":["local::3721197822::Iterate","local::3721197822::Process"],"refs":[],"symbolHash":107689868,"updated":1723767904423},{"name":"First","fqn":"module::3800215022::First","filepath":"src/types/lists/First.ts","startLine":14,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"ELSE","type":"ELSE"}],"jsDocs":[{"comment":"**First**`<T>`\n\nReturns the _first_ type in a list. If `TElse` is provided it will set \nthe type to `TElse` when:\n- `T` is a Tuple type\n- `T[1]` is not a valid index of `T`\n- by default `TElse` is set to _never_\n\n**Related:** `Second`, `Last`","tags":[]}],"deps":[],"refs":[],"symbolHash":1309489339,"updated":1723767904321},{"name":"Find","fqn":"module::3761848545::Find","filepath":"src/types/lists/Find.ts","startLine":40,"endLine":51,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TOp","type":"TOp"},{"name":"TComparator","type":"TComparator"},{"name":"TDeref","type":"TDeref"}],"jsDocs":[{"comment":"**Find**`<TList,TOp,TComparator,[TDeref]>`\n\nType utility used to find the first value in `TList` which _equals_ `TValue`.\nWill return _undefined_ if no matches found.\n\n- use **FindExtends** if you want a more permissive match\n- by default, values in `TList` will be compared directly but you can _dereference_\narray and object properties with `TIndex` if you want to compare on a child property\n\n```ts\ntype List = [ { id: 1, value: \"hi\" }, { id: 2, value: \"bye\" } ]\n// { id: 1; value: \"hi\" }\ntype T = Find<List, 1, \"id\">\n```\n\n**Related**: `FindExtends`","tags":[]}],"deps":["module::2376902257::Or","module::1364134543::IsEqual","module::3330042255::NumberLike","local::1767637946::FindAcc"],"refs":[],"symbolHash":1151945051,"updated":1723767904328},{"name":"FilterWideTypes","fqn":"module::81682759::FilterWideTypes","filepath":"src/types/lists/FilterWideTypes.ts","startLine":16,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**FilterWideTypes**`<T>`\n\nReceives a tuple of items and filters out all \"wide types\"\n(e.g., object, number, string, Record<string, string>, boolean, etc.).\n\nAll literal types and elements such as _undefined_ and `null` are kept in the tuple.\n\n**Related:** `Filter`, `FilterLiterals`, `RetainWideTypes`","tags":[]}],"deps":["module::500662101::RemoveMarked","module::1931245833::If","module::391074403::IsWideType","module::3629498205::Constant"],"refs":[],"symbolHash":2320640604,"updated":1723767904324},{"name":"FilterLiterals","fqn":"module::62460585::FilterLiterals","filepath":"src/types/lists/FilterLiterals.ts","startLine":25,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**FilterLiterals**`<T>`\n\nReceives a tuple of items and filters out all literal items\n(e.g., object literals, tuple literals, string literals, \nnumeric literals, and boolean literals).\n\nElements like _undefined_ and `null` are kept in the tuple.\n\n**Related:** `Filter`, `FilterWideTypes`, `RetainLiterals`","tags":[]}],"deps":["local::2430456485::Process"],"refs":[],"symbolHash":2224540782,"updated":1723767904323},{"name":"FilterByProp","fqn":"module::448281250::FilterByProp","filepath":"src/types/lists/FilterByProp.ts","startLine":75,"endLine":103,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TComparator","type":"TComparator"},{"name":"TProp","type":"TProp"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"**FilterByProp**`<TList, TComparator, TProp, [TOp]>`\n\nAllows a known tuple `TList` to be reduced to a subset with the value `TComparator`\nbeing compared to each element in TList[TProp]; if comparison resolves to a `true`\nvalue then the element `TList[TProp]` is removed but otherwise retained.\n\n- How the list is _compared_ depends on `TOp` which defaults to \"extends\"\n- other values include \"equals\", \"does-not-extend\", \"does-not-equal\"\n\nBy default `TOp` is set to _extends_ which ensures that those values in the list which\n_extend_ `TValue` are retained but the remaining filtered out.\n\n```ts\ntype T = [1,\"foo\",3];\n// [1,3]\ntype T2 = Filter<T, string>;\n```\n- `TComparator` can be single value or a Tuple of values\n- in the case of a Tuple of values being found in `TComparator`, an \"OR\" operation\nwill be used ... meaning that the elements in `TList` will be kept if an element\nextends _any_ of the `TFilter` entries\n- any non-container based value in `TList` will be discarded\n\n**Related:** `RetainByProp`, `Filter`, `RetainFromList`, `RemoveFromList`","tags":[]}],"deps":["module::3462458201::ComparatorOperation","module::4223968119::IsDotPath","module::3686363877::Throw","module::1715223530::IfNever","module::634500037::RemoveNever","module::1931245833::If","module::1412066075::IsArray","local::4212362060::Process","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":2219102163,"updated":1723767904323},{"name":"Filter","fqn":"module::3469299889::Filter","filepath":"src/types/lists/Filter.ts","startLine":64,"endLine":86,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TComparator","type":"TComparator"},{"name":"TOp","type":"TOp"}],"jsDocs":[{"comment":"**Filter**`<TList, TComparator, [TOp]>`\n\nAllows a known tuple `TList` to be reduced to a subset with the value `TFilter`:\n\n- How the list is reduced depends on `TOp` which defaults to \"extends\"\n- other values include \"equals\", \"does-not-extend\", \"does-not-equal\"\n\nBy default `TOp` is set to _extends_ which ensures that those values in the list which\n_extend_ `TValue` are retained but the remaining filtered out.\n\n```ts\ntype T = [1,\"foo\",3];\n// [1,3]\ntype T2 = Filter<T, string>;\n```\n- `TFilter` can be single value or a Tuple of values\n- in the case of a Tuple of values, an \"OR\" operation will be used ... meaning that\nthe elements in `TList` will be kept if an element extends _any_ of the `TFilter`\nentries\n\n**Related:** `RetainFromList`, `RemoveFromList`","tags":[]}],"deps":["module::3462458201::ComparatorOperation","module::1715223530::IfNever","module::634500037::RemoveNever","module::1931245833::If","module::1412066075::IsArray","local::2476446411::Process","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":3664623016,"updated":1723767904322},{"name":"FifoQueue","fqn":"module::1248055121::FifoQueue","filepath":"src/types/queues/FifoQueue.ts","startLine":7,"endLine":39,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TType","type":"TType"}],"jsDocs":[{"comment":"A \"First In, First out\" queue (**FIFO**)","tags":[]}],"deps":["module::1695495442::FixedLengthArray","ext::2318994541::Symbol","ext::2318994541::Iterator"],"refs":[],"symbolHash":95222558,"updated":1723767904384},{"name":"FalsyValue","fqn":"module::2261580886::FalsyValue","filepath":"src/types/base-types/FalsyValue.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**FalsyValue**\n\nA union of all _falsy_ values.\n\nNote: any value which is _not_ falsy is \"truthy\"","tags":[]}],"deps":[],"refs":[],"symbolHash":1338358856,"updated":1723767904154},{"name":"Fail","fqn":"module::636189613::Fail","filepath":"src/types/boolean-logic/branching/Fail.ts","startLine":29,"endLine":38,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TTest","type":"TTest"}],"jsDocs":[{"comment":"**Fail**`<TVal, TTest>`\n\nA branching utility which tests `TTest` for `false`, `never`, or `ErrorCondition`\nand if matched will set the value to `never`. If there is _not_ a match then\n`TVal` will be passed through.\n\nIf you wish to have more than one test which might produce the failure\ncondition you can pass in a tuple of tests into `TTest` and if _any_ of\nthe tests fail then the condition fails.","tags":[]}],"deps":["module::2666698309::Tuple","local::2578965571::Iterate","local::2578965571::ShouldFail"],"refs":[],"symbolHash":2587349241,"updated":1723767904245},{"name":"ExtendsSome","fqn":"module::3959455766::ExtendsSome","filepath":"src/types/boolean-logic/operators/ExtendsSome.ts","startLine":11,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TExtendsSome","type":"TExtendsSome"}],"jsDocs":[{"comment":"**ExtendsSome**`<TValue,TList>`\n\nBoolean type utility which evaluates whether `TValue` extends **some** of the \nelements in `TList`. \n\n**Related:** `ExtendsAll`, `IfExtendsSome`, `DoesExtend`","tags":[]}],"deps":["module::2295046820::First","module::798798449::AfterFirst"],"refs":[],"symbolHash":2344608228,"updated":1723767904196},{"name":"ExtendsNone","fqn":"module::4243522144::ExtendsNone","filepath":"src/types/boolean-logic/operators/ExtendsNone.ts","startLine":12,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"**ExtendsAll**`<TValue, TList>`\n\nBoolean type utility which evaluates whether a singular \nvalue `TValue` extends **all** of the elements in `TList`.\n\n**Related:** `ExtendsSome`, `IfExtendsAll`, `DoesExtend`","tags":[]}],"deps":["module::3858944705::Not","module::1757664903::ExtendsSome"],"refs":[],"symbolHash":4168592895,"updated":1723767904196},{"name":"ExtendsAll","fqn":"module::307302943::ExtendsAll","filepath":"src/types/boolean-logic/operators/ExtendsAll.ts","startLine":22,"endLine":25,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"**ExtendsAll**`<TValue, TList>`\n\nBoolean type utility which evaluates whether a singular \nvalue `TValue` extends **all** of the elements in `TList`.\n\n**Related:** `ExtendsSome`, `IfExtendsAll`, `DoesExtend`","tags":[]}],"deps":["local::508943492::_Extends"],"refs":[],"symbolHash":571972547,"updated":1723767904196},{"name":"Extends","fqn":"module::342169290::Extends","filepath":"src/types/boolean-logic/operators/Extends.ts","startLine":10,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"U","type":"U"}],"jsDocs":[{"comment":"**Extends**`<T,U>`\n\nA boolean operator which checks whether `T` extends `U` and returns\n**true** or **false**. This is an _alias_ for `DoesExtend`.","tags":[]}],"deps":["module::80185219::IsNever","module::3591638282::DoesExtend"],"refs":[],"symbolHash":1396063233,"updated":1723767904196},{"name":"ExplicitlyEmptyObject","fqn":"module::1706166574::ExplicitlyEmptyObject","filepath":"src/types/base-types/EmptyObject.ts","startLine":14,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ExplicitlyEmptyObject**\n\nAn `EmptyObject` with it's index keys set to _never_ (which prohibits any \nkey from being added)","tags":[]}],"deps":["ext::2318994541::NonNullable"],"refs":[],"symbolHash":1829187494,"updated":1723767904150},{"name":"ExpandUnion","fqn":"module::3252694949::ExpandUnion","filepath":"src/types/literals/ExpandRecursively.ts","startLine":39,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3393438424::IsUnion","module::2535688849::TupleToUnion","module::2612732298::ExpandTuple","module::458105997::UnionToTuple"],"refs":[],"symbolHash":1835281890,"updated":1723767904343},{"name":"ExpandDictionary","fqn":"module::978750531::ExpandDictionary","filepath":"src/types/literals/ExpandRecursively.ts","startLine":63,"endLine":68,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Recursively goes over an object based structure and tries to reduce\nit down to just a simple key/value type.","tags":[]}],"deps":["module::186693758::Dictionary","module::3580587573::AnyFunction","module::220604077::ExpandRecursively"],"refs":[],"symbolHash":1833100681,"updated":1723767904344},{"name":"ErrorConditionShape","fqn":"module::1715940694::ErrorConditionShape","filepath":"src/types/errors/ErrorCondition.ts","startLine":93,"endLine":97,"scope":"module","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ErrorConditionShape**\n\nRepresents the basic shape of any `ErrorCondition`","tags":[]}],"deps":["module::93108774::TypeErrorInfo"],"refs":[],"symbolHash":2907096955,"updated":1723767904293},{"name":"ErrorConditionHandler","fqn":"module::2927628967::ErrorConditionHandler","filepath":"src/types/errors/ErrorConditionHandler.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ErrorConditionHandler**\n\nA callback function which will receive an ErrorCondition and return an appropriate\nresponse.","tags":[]}],"deps":["module::1939532401::ErrorCondition"],"refs":[],"symbolHash":840312089,"updated":1723767904294},{"name":"ErrFrom","fqn":"module::1542692008::ErrFrom","filepath":"src/types/functional/Result.ts","startLine":183,"endLine":185,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"**ErrFrom**`<T>`\n\nExtracts the `Err` type from a `Result<T,E>`.","tags":[]}],"deps":["module::4215597801::Result"],"refs":[],"symbolHash":1029284927,"updated":1723767904305},{"name":"Equals","fqn":"module::1362467484::Equals","filepath":"src/types/boolean-logic/operators/IsEqual.ts","startLine":22,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"X","type":"X"},{"name":"Y","type":"Y"},{"name":"TTrue","type":"TTrue"},{"name":"TFalse","type":"TFalse"}],"jsDocs":[{"comment":"**Equals**`<X,Y>`\n\nType utility which tests whether two types -- `X` and `Y` -- are exactly the same type","tags":[]}],"deps":["module::2321429668::IsEqual"],"refs":[],"symbolHash":2241112569,"updated":1723767904216},{"name":"EnsureTrailing","fqn":"module::1101021455::EnsureTrailing","filepath":"src/types/string-literals/EnsureTrailing.ts","startLine":42,"endLine":59,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TTrailing","type":"TTrailing"}],"jsDocs":[{"comment":"**EnsureTrailing**`<TContent, TTrailing>`\n\nWill ensure that `T` ends with the substring `U` when\nboth are string literals.\n\n```ts\ntype T = \"Hello\";\ntype U = \" World\";\n// \"Hello World\"\ntype R = EnsureTrailing<T,U>;\n```","tags":[]}],"deps":["module::391074403::IsWideType","module::1088008940::IsString","module::1897058928::AsString","module::116081596::AsNumber","local::1726229997::P","local::1726229997::IterateOver"],"refs":[],"symbolHash":1587762029,"updated":1723767904423},{"name":"EnsureSurround","fqn":"module::100411757::EnsureSurround","filepath":"src/types/string-literals/EnsureSurround.ts","startLine":10,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"},{"name":"TPrefix","type":"TPrefix"},{"name":"TPostfix","type":"TPostfix"}],"jsDocs":[{"comment":"**EnsureSurround**\n\nEnsures that `TInput` is _surrounded_ by `TPrefix` and `TPostfix`\n\n**Related:** `Surround`","tags":[]}],"deps":["module::2557355544::EnsureTrailing","module::275936486::EnsureLeading"],"refs":[],"symbolHash":1461423482,"updated":1723767904422},{"name":"EnsureLeadingEvery","fqn":"module::28538909::EnsureLeadingEvery","filepath":"src/types/string-literals/EnsureLeadingEvery.ts","startLine":15,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TLeader","type":"TLeader"}],"jsDocs":[{"comment":"**EnsureLeadingEvery**`<TList, TLeader>`\n\nEnsures that each item in `TList` starts with `TLeader`.\n\n- `TList` can be made up of strings or numbers\n- `TLeader` can be made up of string, number, or boolean values\n- all non-string values are converted to string with `ToString`\n\n**Related:** `EnsureLeading`, `EnsureTrailing`","tags":[]}],"deps":["module::458105997::UnionToTuple","module::275936486::EnsureLeading","module::577891714::ToString"],"refs":[],"symbolHash":3380217116,"updated":1723767904422},{"name":"EnsureLeading","fqn":"module::830906281::EnsureLeading","filepath":"src/types/string-literals/EnsureLeading.ts","startLine":57,"endLine":70,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TLeading","type":"TLeading"}],"jsDocs":[{"comment":"**EnsureLeading**`<TContent, TLeading>`\n\nWill ensure that `TContent` _starts with_ the `TLeading`; adding\nit when it wasn't present or proxying the value through when it was.\n\n**Note:**\n- you can use both _string_ or _numeric_ values for both\nparameters.\n- you can provide a tuple for content and each item will be processed\nseparately\n\n```ts\ntype T = \"World\";\ntype U = \"Hello \";\n// \"Hello World\"\ntype R = EnsureLeading<T,U>;\n```\n\n**Related:** `EnsureLeadingEvery`, `EnsureTrailing`, `EnsureSurround`, `Surround`","tags":[]}],"deps":["local::1947997719::IterateOver","module::391074403::IsWideType","local::1947997719::WideContent","module::3860303104::As","local::1947997719::WideLeading","local::1947997719::Process","module::749589545::AsStringUnion","module::116081596::AsNumber"],"refs":[],"symbolHash":3892667321,"updated":1723767904421},{"name":"EnsureKeys","fqn":"module::2039871007::EnsureKeys","filepath":"src/types/dictionary/EnsureKeys.ts","startLine":27,"endLine":33,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"},{"name":"TType","type":"TType"}],"jsDocs":[{"comment":"**EnsureKeys**`<TObj,TKeys,[TType]>`\n\nReceives an object `TObj` and a specifier `TKeys` which\nensures that the specified _keys_ exist on the object.\n\nThe _keys_ specifier may be either an array of keys or a dictionary of key/value pairs.\n\n- when _keys_ is a _dictionary_ then both the key and _type_ of that key\nare inferred.\n- otherwise, the optional `TType` (set to `unknown` by default) is used.","tags":[]}],"deps":["module::186693758::Dictionary","module::3435872486::ExpandRecursively","local::2955782784::BuildObj"],"refs":[],"symbolHash":265911438,"updated":1723767904286},{"name":"EndsWith","fqn":"module::1902367367::EndsWith","filepath":"src/types/boolean-logic/operators/EndsWith.ts","startLine":47,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**EndsWith**<TValue, TComparator>\n\nA type utility which checks whether `TValue` _ends with_ the \nvalue of `TComparator`.\n\n- numeric values for `TValue` will be converted into string literals\nprior to comparison\n- a tuple value in `TComparator` is allowed and will test whether\n_at least one_ type Ends the sequence for TValue","tags":[]}],"deps":["local::1167627601::PreProcess","module::1897058928::AsString"],"refs":[],"symbolHash":4125818377,"updated":1723767904197},{"name":"EmptyStringOr","fqn":"module::1178434640::EmptyStringOr","filepath":"src/types/string-literals/EmptyStringOr.ts","startLine":9,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**EmptyStringOr**`<T>`\n\nA type utility to build a union between an empty string\n_or_ the string literal `T`.","tags":[]}],"deps":["module::2871354067::EmptyString","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":2161549148,"updated":1723767904422},{"name":"EmptyString","fqn":"module::3934570941::EmptyString","filepath":"src/types/string-literals/EmptyString.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**EmptyString**\n\nA string literal of an _empty_ string;","tags":[]}],"deps":[],"refs":[],"symbolHash":2280102993,"updated":1723767904422},{"name":"EmptyObject","fqn":"module::562886154::EmptyObject","filepath":"src/types/base-types/EmptyObject.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**EmptyObject**\n\nAn object/dictionary with explicitly **no** defined properties.","tags":[]}],"deps":["ext::2318994541::NonNullable"],"refs":[],"symbolHash":2341184598,"updated":1723767904149},{"name":"Email","fqn":"module::350029804::Email","filepath":"src/types/type-conversion/form-fields.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Email**\n\nA simple email address representation\n\n**Related:** `IsEmail`, `isEmail()`","tags":[]}],"deps":[],"refs":[],"symbolHash":1436905945,"updated":1723767904502},{"name":"DropChars","fqn":"module::2069218033::DropChars","filepath":"src/types/string-literals/options/DropChars.ts","startLine":40,"endLine":47,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TDrop","type":"TDrop"}],"jsDocs":[{"comment":"**DropChars**`<TContent,TDrop>`\n\nRemoves all character sequences found in `TDrop` from the string content\nin `TContent`. If you use a _union_ type for `TDrop` then each of the\nunion members will be extracted (but union member must only be a single\ncharacter).\n\n```ts\n// \"foobarbaz\"\nDropChars<\"foo, bar, baz\", \", \">;\n// \"oo, ar, az\"\nDropChars<\"foo, bar, baz\", \"f\" | \"b\">;\n```","tags":[]}],"deps":["module::3393438424::IsUnion","module::458105997::UnionToTuple","local::2880122274::DropSequence","module::3921923702::Chars"],"refs":[],"symbolHash":4294691424,"updated":1723767904482},{"name":"DotPathFor","fqn":"module::3904062962::DotPathFor","filepath":"src/types/string-literals/character-sets/DotPathFor.ts","startLine":42,"endLine":46,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"}],"jsDocs":[{"comment":"**DotPathFor**`<T>`\n\nProvides a union of all valid _dot paths_ for the container\n`T`. \n\n- If `T` is _not_ a container then it will resolve to\n`\"\" | null` because `T` can not be dereferenced.\n- If `T` is a _wide_ container than it will resolve to `string | null` as\nnothing can be determined at design time","tags":[]}],"deps":["module::2872591658::Container","local::373156745::GenList"],"refs":[],"symbolHash":1561662930,"updated":1723767904454},{"name":"DoneFnTuple","fqn":"module::4230032820::DoneFnTuple","filepath":"src/types/literals/DoneFnTuple.ts","startLine":13,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFns","type":"TFns"},{"name":"TMakeUnion","type":"TMakeUnion"},{"name":"TState","type":"TState"}],"jsDocs":[{"comment":"**DoneFnTuple**`<[TTuple],[TMakeUnion],[TFns]>`\n\nThis type utility quickly builds the types you'll need for an\nAPI surface with the `done()` command returning the stored state\nas either a **Tuple** or a **Union** of the tuple state.\n\n**Related:** `HasDoneFn`, `Narrow`, `DoneFnKv`, `createDoneTupleFn`","tags":[]}],"deps":["module::578458603::FnDefn","module::721758871::Narrow","module::3727409867::FnWithDescription","module::1931245833::If","module::4187212716::IsTrue","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":2702945164,"updated":1723767904357},{"name":"DomainName","fqn":"module::2046091417::DomainName","filepath":"src/types/string-literals/character-sets/DomainName.ts","startLine":43,"endLine":53,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**DomainName**\n\nDesigned to represents a DNS name.\n\n- Without the use of a generic this simply applies the same type\nas `DnsName`\n- When using the generic to _test_ the potential DNS name we can\nrun more validations and return `never` if they do not pass.\n- When using the generic with a wide `T` you will get `unknown`\n\n**Related:** `DnsName`","tags":[]}],"deps":["module::2545922179::DnsName","module::172457424::IsStringLiteral","module::3488622281::IsDomainName"],"refs":[],"symbolHash":2467977535,"updated":1723767904444},{"name":"DoesNotExtend","fqn":"module::930569335::DoesNotExtend","filepath":"src/types/boolean-logic/operators/DoesNotExtend.ts","startLine":9,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TNotExtends","type":"TNotExtends"}],"jsDocs":[{"comment":"**DoesNotExtend**`<TValue, TNotExtends>`\n\nBoolean type utility which returns `true` if `TValue` _does \nnot extend_ `TNotExtends`.","tags":[]}],"deps":[],"refs":[],"symbolHash":1221897384,"updated":1723767904196},{"name":"DoesExtend","fqn":"module::3575505978::DoesExtend","filepath":"src/types/boolean-logic/operators/DoesExtend.ts","startLine":8,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValue","type":"TValue"},{"name":"TExtends","type":"TExtends"}],"jsDocs":[{"comment":"**DoesExtend**`<TValue, TExtends>`\n\nBoolean type utility which returns `true` if `TValue` _extends_ `TExtends`.","tags":[]}],"deps":["module::80185219::IsNever"],"refs":[],"symbolHash":1571460325,"updated":1723767904195},{"name":"DigitNonZero","fqn":"module::2899800222::DigitNonZero","filepath":"src/types/numeric-literals/DigitNonZero.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**DigitNonZero**\n\nA non-zero based digit (aka, 1-9).","tags":[]}],"deps":["ext::2318994541::Exclude","module::2660456408::Digit"],"refs":[],"symbolHash":2833392018,"updated":1723767904374},{"name":"Digitize","fqn":"module::3031679166::Digitize","filepath":"src/types/numeric-literals/Digitize.ts","startLine":34,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Digitize**`<T>`\n\nTakes a literal value of a number -- either a numeric literal or a string literal\nis accepted -- and converts into a tuple: `[ NumericSign, Digits[] ]`\n```ts\n// [\"+\", readonly [1,2,3] ]\ntype N = Digitize<123>;\n// [\"-\", readonly [\"1\",\"2\",\"3\"] ]\ntype S = Digitize<\"-123\">;\n```","tags":[]}],"deps":["module::3330042255::NumberLike","module::2376902257::Or","module::1364134543::IsEqual","module::1750920435::NumericSign","module::1881292962::NumericChar","module::2660456408::Digit","local::431028319::Neg","local::431028319::Pos"],"refs":[],"symbolHash":1248998604,"updated":1723767904374},{"name":"DigitalLiteral","fqn":"module::4266570512::DigitalLiteral","filepath":"src/types/base-types/Digital.ts","startLine":24,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**DigitalLiteral**\n\nA Tuple which represents a number as a leading `NumericSign` and\nthen an array of numeric string literals.\n\n**Related:** `Digital`","tags":[]}],"deps":["module::1750920435::NumericSign","module::1881292962::NumericChar"],"refs":[],"symbolHash":2270302319,"updated":1723767904153},{"name":"Digital","fqn":"module::3362654296::Digital","filepath":"src/types/base-types/Digital.ts","startLine":11,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Digital**\n\nA Tuple which represents a number as leading `NumericSign` and then \nan array of numeric digits.\n\n**Related:** `DigitalLiteral`","tags":[]}],"deps":["module::1750920435::NumericSign","module::2660456408::Digit"],"refs":[],"symbolHash":2927807302,"updated":1723767904153},{"name":"Digit","fqn":"module::3106033778::Digit","filepath":"src/types/numeric-literals/Digit.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Digit**\n\nA single numeric digit.\n\n**Related:** `NumericChar`","tags":[]}],"deps":[],"refs":[],"symbolHash":2296619476,"updated":1723767904373},{"name":"DictTypeDefinition","fqn":"module::2955273076::DictTypeDefinition","filepath":"src/types/literals/FromDefn.ts","startLine":108,"endLine":113,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"V","type":"V"}],"jsDocs":[{"comment":"**DictShapeDefn**`<T>`\n\nA _dictionary_ shape which provides direct value input or use of\nthe `ShapeCallback` API to any of the dictionaries values.\n\nUse of the generic `T` is not required but adding it as a separate\ngeneric will increase the narrowness of your types.","tags":[]}],"deps":["module::2095159491::TypeDefinition","ext::2318994541::Record","module::4119350992::ObjectKey"],"refs":[],"symbolHash":1544966875,"updated":1723767904369},{"name":"DictKvTuple","fqn":"module::688707155::DictKvTuple","filepath":"src/types/tuples/DictArray.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["ext::2318994541::Record"],"refs":[],"symbolHash":612769430,"updated":1723767904484},{"name":"Dictionary","fqn":"module::3647913336::Dictionary","filepath":"src/types/base-types/Dictionary.ts","startLine":11,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"**Dictionary**`<[K],[V]>`\n\nRepresents a Key/Value dictionary type.\n\n**Note:** this is pretty much the same as the built-in\n`Record<K,V>` type of Typescript but","tags":[]}],"deps":["module::4119350992::ObjectKey","ext::2318994541::Record"],"refs":[],"symbolHash":4065204713,"updated":1723767904155},{"name":"DictFromKv","fqn":"module::3393906413::DictFromKv","filepath":"src/types/kv/DictFromKv.ts","startLine":1,"endLine":3,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4231730934,"updated":1723767904319},{"name":"DictChangeValue","fqn":"module::1559086275::DictChangeValue","filepath":"src/types/dictionary/DictChangeValue.ts","startLine":17,"endLine":34,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"I","type":"I"},{"name":"T","type":"T"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"Allow a dictionary to have it's value's type changed to `T` while maintaining the keys in\nthe original object `I` so long as the original value for the KV pair extends `V`.\n\nIf `V` is not specified then it defaults to _any_ and therefore all KVs are preserved.\n\n```ts\ntype Obj = { foo: \"hello\", bar: 42, baz: () => \"world\" };\n// { foo: number, bar: number, baz: number };\ntype AllNumbers = DictChangeValue<Obj, number>;\n// { foo: number }\ntype StringToBool = DictChangeValue<Obj, boolean, string>\n```","tags":[]}],"deps":["ext::2318994541::Record","module::818348575::SimplifyObject"],"refs":[],"symbolHash":3231158604,"updated":1723767904255},{"name":"DictArrayFilterCallback","fqn":"module::2593385753::DictArrayFilterCallback","filepath":"src/types/tuples/DictArray.ts","startLine":2,"endLine":2,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"K","type":"K"},{"name":"T","type":"T"},{"name":"R","type":"R"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["ext::2318994541::Pick"],"refs":[],"symbolHash":2513754429,"updated":1723767904484},{"name":"DictArray","fqn":"module::1803433460::DictArray","filepath":"src/types/tuples/DictArray.ts","startLine":21,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"A an array of `DictArrayKv` tuples which can be reconstructed\nto a strongly typed dictionary object.\n```ts\nconst example: DictArray<{ foo: 1, bar: \"hi\" }> = [\n  [ \"foo\", { foo: 1 }],\n  [ \"bar\", { bar: \"hi\" }]\n]\n```","tags":[]}],"deps":["module::2342626942::DictArrayKv"],"refs":[],"symbolHash":2855168983,"updated":1723767904485},{"name":"Dict","fqn":"module::82425173::Dict","filepath":"src/types/runtime-types/Dict.ts","startLine":24,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"ID","type":"ID"}],"jsDocs":[{"comment":"**Dict**`<T, ID>`\n\nA nominal replacement for Javascript object's with precisely\nthe same functionality but with a hashed type which allows\nuse of `let` instead of `const` for object definitions due \nto the type not being able to be reassigned.","tags":[]}],"deps":["module::186693758::Dictionary","module::4114441065::EmptyObject"],"refs":[],"symbolHash":1170442822,"updated":1723767904405},{"name":"DialCountryCode","fqn":"module::159792365::DialCountryCode","filepath":"src/types/string-literals/character-sets/phone/DialCountryCode.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**DialCountryCode**\n\nA simplified representation of `PhoneCountryCode` so as to not make other\nphone patterns too complex.","tags":[]}],"deps":["ext::2318994541::Exclude","module::1881292962::NumericChar","module::1827247990::Optional"],"refs":[],"symbolHash":3742769250,"updated":1723767904477},{"name":"Delta","fqn":"module::915937455::Delta","filepath":"src/types/numeric-literals/Delta.ts","startLine":35,"endLine":40,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**Delta**`<A,B>`\n\nProvides the _delta_ between two numbers (including\nbetween negative numbers).","tags":[]}],"deps":["module::3330042255::NumberLike","local::4278797605::Process","module::116081596::AsNumber"],"refs":[],"symbolHash":128745881,"updated":1723767904380},{"name":"DefineStatelessApi","fqn":"module::4067508907::DefineStatelessApi","filepath":"src/types/api/api.ts","startLine":302,"endLine":324,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"_C","type":"_C"}],"jsDocs":[{"comment":"A builder API for defining _stateless_ API's.\n\nNote: ironically this is **not** a stateless API.","tags":[]}],"deps":["module::186693758::Dictionary","module::4114441065::EmptyObject","module::2202603258::KeyOf","module::511710969::Fail","module::488874576::Extends","ext::2318994541::ReturnType","module::540585742::TypedFunction","module::3435872486::ExpandRecursively","ext::2318994541::Record","module::61594965::UpsertKeyValue"],"refs":[],"symbolHash":1888737890,"updated":1723767904145},{"name":"Defined","fqn":"module::2929176201::Defined","filepath":"src/types/base-types/Defined.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Defined**\n\nRepresents **every** type except for the _undefined_ type.","tags":[]}],"deps":["module::3396439809::Something"],"refs":[],"symbolHash":3980273071,"updated":1723767904147},{"name":"DEFAULT_ONE_TO_ONE_MAPPING","fqn":"local::3073043475::DEFAULT_ONE_TO_ONE_MAPPING","filepath":"src/types/dictionary/MapTo.ts","startLine":28,"endLine":32,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1731913564,"updated":1723767904262},{"name":"DEFAULT_ONE_TO_MANY_MAPPING","fqn":"local::3073043475::DEFAULT_ONE_TO_MANY_MAPPING","filepath":"src/types/dictionary/MapTo.ts","startLine":22,"endLine":26,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":193437958,"updated":1723767904262},{"name":"DEFAULT_MANY_TO_ONE_MAPPING","fqn":"local::3073043475::DEFAULT_MANY_TO_ONE_MAPPING","filepath":"src/types/dictionary/MapTo.ts","startLine":34,"endLine":38,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":156915813,"updated":1723767904262},{"name":"Default","fqn":"module::3680900531::Default","filepath":"src/types/boolean-logic/branching/Default.ts","startLine":15,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TDefault","type":"TDefault"}],"jsDocs":[{"comment":"**Default**`<TVal,TDefault,[TProtect]>`\n\nBranching operator which allows giving a value `TVal` a _default value_ when\nit's value is either `null` or `undefined`.","tags":[]}],"deps":["local::2564443943::Process"],"refs":[],"symbolHash":220057773,"updated":1723767904243},{"name":"Decrement","fqn":"module::1665825807::Decrement","filepath":"src/types/numeric-literals/Decrement.ts","startLine":17,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Decrement**`<T>`\n\nAllows a number -- or a string literal of a number -- to be _decremented_\nby one.\n\n- Once reaching zero the Decrement<T> utility will stay at 0","tags":[]}],"deps":["local::1576984260::Pop","module::1695495442::FixedLengthArray"],"refs":[],"symbolHash":2207876607,"updated":1723767904373},{"name":"DateTimeSeconds","fqn":"module::3486894971::DateTimeSeconds","filepath":"src/types/string-literals/DateTime.ts","startLine":23,"endLine":25,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1367267506::DateSeparator","module::3482948002::YMD","module::2942046855::HoursMinutesSeconds"],"refs":[],"symbolHash":1637948633,"updated":1723767904420},{"name":"DateTimeMinutes","fqn":"module::304831356::DateTimeMinutes","filepath":"src/types/string-literals/DateTime.ts","startLine":19,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"**DateTimeMinutes**\n\nThe date and time with time resolution of minutes.","tags":[]}],"deps":["module::1367267506::DateSeparator","module::3482948002::YMD","module::1616130627::HoursMinutes"],"refs":[],"symbolHash":2328505457,"updated":1723767904420},{"name":"DateTime","fqn":"module::1940254646::DateTime","filepath":"src/types/string-literals/DateTime.ts","startLine":36,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TResolution","type":"TResolution"},{"name":"TNomenclature","type":"TNomenclature"},{"name":"TTimezone","type":"TTimezone"},{"name":"TSep","type":"TSep"}],"jsDocs":[{"comment":"**DateTime**`<S>`\n\nA simplified way of representing any supported representation\nof a `DateTime` string.\n\n**Note:** the most common and best choice is often the `Iso8601`\ndatetime representation.","tags":[]}],"deps":["module::3085509708::TimeResolution","module::2465508556::TimeNomenclature","module::424465925::TypeRequired","module::1367267506::DateSeparator","module::3482948002::YMD","module::3330337275::Time"],"refs":[],"symbolHash":156003840,"updated":1723767904420},{"name":"Date","fqn":"module::1188972709::Date","filepath":"src/types/string-literals/Date.ts","startLine":156,"endLine":156,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Date**\n\nAn [ISO8601](https://www.iso.org/iso-8601-date-and-time-format.html#:~:text=Therefore%2C%20the%20order%20of%20the,27%2018%3A00%3A00.000.)\ndate format which looks like `YYYY-MM-DD`.","tags":[]}],"deps":["module::4189209977::YMD"],"refs":[],"symbolHash":1759682312,"updated":1723767904419},{"name":"DashUppercase","fqn":"module::3436669898::DashUppercase","filepath":"src/types/string-literals/casing/DashUppercase.ts","startLine":16,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Converts uppercase characters to a dash and then the lowercase equivalent\n\n```ts\n// \"one-two-three\"\ntype T = DashUppercase<\"oneTwoThree\">;\n```\n\n_Intended to be used as a lower level utility; prefer `Dasherize<T>` for more full-fledged\ndash solution_.","tags":[]}],"deps":["module::1391074445::HasUppercase","local::2129135063::_DU"],"refs":[],"symbolHash":701654079,"updated":1723767904479},{"name":"DashToSnake","fqn":"module::2084182210::DashToSnake","filepath":"src/types/string-literals/casing/DashToSnake.ts","startLine":1,"endLine":3,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":4091504957,"updated":1723767904479},{"name":"CsvToUnion","fqn":"module::47498710::CsvToUnion","filepath":"src/types/numeric-literals/CSV.ts","startLine":142,"endLine":142,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**CsvToUnion**`<T>`\n\nConverts a CSV string into a union of string and/or numeric literals.\n\n**Related:** `CsvToTuple`, `CsvToStrUnion`","tags":[]}],"deps":["local::1830083322::ProcessUnion"],"refs":[],"symbolHash":800046761,"updated":1723767904379},{"name":"CsvToTupleStr","fqn":"module::497549145::CsvToTupleStr","filepath":"src/types/numeric-literals/CSV.ts","startLine":132,"endLine":132,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**CsvToTupleStr**`<T>`\n\nConverts a CSV string into a tuple of string literals.\n\n**Related:** `CsvToTuple`","tags":[]}],"deps":["local::1830083322::ProcessStr"],"refs":[],"symbolHash":3338780322,"updated":1723767904378},{"name":"CsvToTuple","fqn":"module::1829005190::CsvToTuple","filepath":"src/types/numeric-literals/CSV.ts","startLine":122,"endLine":122,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**CsvToTuple**`<T>`\n\nConverts a CSV string into a tuple with both numbers\nand string literals extracted.\n\n**Related:** `CsvToTupleStr`, `CsvToUnion`","tags":[]}],"deps":["local::1830083322::Process"],"refs":[],"symbolHash":4160430388,"updated":1723767904378},{"name":"CsvToStrUnion","fqn":"module::3290630538::CsvToStrUnion","filepath":"src/types/numeric-literals/CSV.ts","startLine":152,"endLine":152,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**CsvToStrUnion**`<T>`\n\nConverts a CSV string into a union of string literals.\n\n**Related:** `CsvToTuple`, `CsvToUnion`","tags":[]}],"deps":["local::1830083322::ProcessUnionStr"],"refs":[],"symbolHash":4238910694,"updated":1723767904379},{"name":"CsvToJsonTuple","fqn":"module::2824966003::CsvToJsonTuple","filepath":"src/types/numeric-literals/CSV.ts","startLine":164,"endLine":164,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**CsvToTuple**`<T>`\n\nConverts a CSV string into a tuple with both numbers\nand string literals but for the string literals it ensures\n-- just like you find with JSON strings -- that there are\nexplicit double quotes around the string.\n\n**Related:** `CsvToTuple`, `CsvToTupleStr`, `CsvToUnion`","tags":[]}],"deps":["local::1830083322::ProcessJsonTuple"],"refs":[],"symbolHash":1142491576,"updated":1723767904379},{"name":"CSV","fqn":"module::202898739::CSV","filepath":"src/types/string-literals/character-sets/CSV.ts","startLine":15,"endLine":26,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**CSV**\n\nA string literal type meant to enforce CSV data.\n\n- when used _without_ the provided generic it is a fairly loose type which only ensures that somewhere in the string is a comma\n- the generic, however, allows you to state the minimum number of\ncommas you expect in your data.\n- today we only provide a single _digit_ so 9 represents 9 commas\nand 0 represents 10 (the max we'll check for).","tags":[]}],"deps":["module::2660456408::Digit"],"refs":[],"symbolHash":193983983,"updated":1723767904453},{"name":"CssPosition","fqn":"module::374449513::CssPosition","filepath":"src/types/string-literals/character-sets/CSS.ts","startLine":21,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**CssPosition**\n\nThe valid values for the `position` property in CSS.","tags":[]}],"deps":[],"refs":[],"symbolHash":2535237995,"updated":1723767904461},{"name":"CssDisplay","fqn":"module::2806422212::CssDisplay","filepath":"src/types/string-literals/character-sets/CSS.ts","startLine":30,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**CssDisplay**\n\nThe valid values for the [**display**](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\nproperty in CSS.","tags":[]}],"deps":[],"refs":[],"symbolHash":3630193854,"updated":1723767904461},{"name":"CssAspectRatio","fqn":"module::2760341821::CssAspectRatio","filepath":"src/types/string-literals/character-sets/CSS.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**CssAspectRatio**\n\nAllowed values for CSS's `aspect-ratio` property.","tags":[]}],"deps":["local::391321274::Ratio","local::391321274::One","local::391321274::Special","local::391321274::Auto"],"refs":[],"symbolHash":3808140681,"updated":1723767904461},{"name":"CreateLookup","fqn":"module::1771297191::CreateLookup","filepath":"src/types/dictionary/CreateLookup.ts","startLine":50,"endLine":59,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TPayload","type":"TPayload"},{"name":"TKeyProp","type":"TKeyProp"},{"name":"TValProp","type":"TValProp"}],"jsDocs":[{"comment":"**CreateLookup**\n\nCreates a dictionary lookup from a Tuple of similarly typed objects.","tags":[]}],"deps":["ext::2318994541::Record","module::4119350992::ObjectKey","module::3435872486::ExpandRecursively","local::2002332006::Process"],"refs":[],"symbolHash":4208532581,"updated":1723767904287},{"name":"CreateKV","fqn":"module::420450785::CreateKV","filepath":"src/types/dictionary/CreateKV.ts","startLine":25,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKeys","type":"TKeys"},{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"**CreateKV**`<TKeys,[TValue]>`\n\nCreates a key value pair with the keys passed in\nas `TKeys` and with all properties set to the value\nof `TValue` (which defaults to `unknown`)","tags":[]}],"deps":["module::3435872486::ExpandRecursively","local::2215088808::Process"],"refs":[],"symbolHash":1168737799,"updated":1723767904254},{"name":"CreateDictShape","fqn":"module::2490193166::CreateDictShape","filepath":"src/types/runtime-types/Dict.ts","startLine":48,"endLine":73,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"TKeys","type":"TKeys"},{"name":"TNarrow","type":"TNarrow"},{"name":"TOpt","type":"TOpt"},{"name":"TResult","type":"TResult"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::186693758::Dictionary","module::4114441065::EmptyObject","module::1200569293::OptDictProps","module::67756402::MakeKeysOptional","module::2994160504::ExpandDictionary","module::798798449::AfterFirst","ext::2318994541::Record","module::2295046820::First","module::2698938817::Contains","module::4064428151::Widen"],"refs":[],"symbolHash":1477027450,"updated":1723767904406},{"name":"CreateDictHash","fqn":"module::3228716417::CreateDictHash","filepath":"src/types/runtime-types/Dict.ts","startLine":75,"endLine":79,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TValues","type":"TValues"},{"name":"TNarrowProps","type":"TNarrowProps"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1460057277,"updated":1723767904406},{"name":"CountryPhoneNumber","fqn":"module::3004002538::CountryPhoneNumber","filepath":"src/types/string-literals/character-sets/phone/CountryPhoneNumber.ts","startLine":18,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TDelimiter","type":"TDelimiter"}],"jsDocs":[{"comment":"**CountryPhoneNumber**`<[TDelimiter]>`\n\nProvides a shape phone number meant for use within a country. It includes\nthe local number plus what would be referred to as the \"area code\" in the\nUSA.\n\n**Related:** `InternationalPhoneNumber`, `LocalPhoneNumber`, `PhoneNumber`","tags":[]}],"deps":["module::3074325429::PhoneNumberDelimiter","module::2508141861::PhoneAreaCode","module::1848123338::LocalPhoneNumber"],"refs":[],"symbolHash":3479418497,"updated":1723767904473},{"name":"ConvertTypeOf","fqn":"module::1217878413::ConvertTypeOf","filepath":"src/types/runtime-types/TypeOf.ts","startLine":67,"endLine":76,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ConvertTypeOf**`<T>`\n\nType utility which receives a `TypeOf` value and converts into a\ncomparable type.\n\n- please keep in mind that `object` types are converted to:\n   ```ts\n   AnyObject | null | unknown[]\n   ```\n- any runtime type which is seen as a `function` is converted to the\n`AnyFunction` type alias which includes allowing for functions which\nhave dictionary props.","tags":[]}],"deps":["module::1286478530::TypeOf","module::1903151425::AnyObject","module::3580587573::AnyFunction"],"refs":[],"symbolHash":3016295606,"updated":1723767904395},{"name":"ConvertSet","fqn":"module::1958689833::ConvertSet","filepath":"src/types/lists/ConvertSet.ts","startLine":37,"endLine":44,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSet","type":"TSet"},{"name":"TConversions","type":"TConversions"}],"jsDocs":[{"comment":"**ConvertSet**`<TSet, TConversions>`\n\nUtility which works on a list `TSet` and converts matched values\nto an alternative type.\n```ts\ntype List = [\"abc\", 123, null, \"michael\", undefined, \"jackson\"];\n// [\"abc\", 123, \"michael\", \"jackson\"]\ntype Converted = ConvertSet<\n   List, [ [null, never], [undefined, never] ]\n>\n```","tags":[]}],"deps":["module::3767205438::ConversionTuple","local::2259542695::ConvertAcc"],"refs":[],"symbolHash":191804197,"updated":1723767904336},{"name":"ConverterDefn","fqn":"module::2240589046::ConverterDefn","filepath":"src/types/lists/ConvertAndMap.ts","startLine":13,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"},{"name":"TNum","type":"TNum"},{"name":"TBool","type":"TBool"},{"name":"TObj","type":"TObj"},{"name":"TTuple","type":"TTuple"},{"name":"TNothing","type":"TNothing"}],"jsDocs":[{"comment":"**ConverterDefn**`<TStr,TNum,TBool,TObj,TTuple,TNothing>`\n\nA conversion definition which has wide types for keys and\ncallback functions to call when a particular type is provided\nas input.","tags":[]}],"deps":["module::1903151425::AnyObject","module::2666698309::Tuple","module::761993671::Nothing"],"refs":[],"symbolHash":3366727549,"updated":1723767904333},{"name":"Conversion","fqn":"module::1597099045::Conversion","filepath":"src/types/lists/ConvertAndMap.ts","startLine":74,"endLine":76,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TInput","type":"TInput"},{"name":"TOutput","type":"TOutput"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3605609985::Narrowable"],"refs":[],"symbolHash":3315006089,"updated":1723767904333},{"name":"ContainsAll","fqn":"module::2727442559::ContainsAll","filepath":"src/types/boolean-logic/operators/ContainsAll.ts","startLine":28,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"THasAll","type":"THasAll"}],"jsDocs":[{"comment":"**ContainsAll**`<TList, THasAll>`\n\nType utility which provides a boolean response based on \nwhether the list `TList` contains _all_ of the values passed\nin.\n\n**Related:** `DoesExtend`, `ContainsSome`","tags":[]}],"deps":["module::3605609985::Narrowable","module::83169107::And","local::1090657334::_Contains"],"refs":[],"symbolHash":1600008004,"updated":1723767904195},{"name":"Contains","fqn":"module::1440011200::Contains","filepath":"src/types/boolean-logic/operators/Contains.ts","startLine":70,"endLine":75,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**Contains**`<TContent, TComparator>`\n\nChecks whether `TContent` _contains_ a value of `TComparator`:\n\n- when `TContent` is an array/tuple type then each item is compared to `TComparator`\n- if `TContent` is a string or numeric type then it will report on whether `TComparator`\nhas been found as a string subset\n\n**Related:** `NarrowlyContains`","tags":[]}],"deps":["module::391074403::IsWideType","local::2145784806::PreProcess"],"refs":[],"symbolHash":1887383691,"updated":1723767904195},{"name":"ContainerToken","fqn":"module::3401124999::ContainerToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":127,"endLine":127,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ContainerToken**\n\nA `TypeToken` which represents a _container_ type.","tags":[]}],"deps":["module::1510255690::ObjectToken","module::711924518::TupleToken","module::3473353245::ArrayToken","module::3459124306::RecordToken","module::3758606698::SetToken","module::1096872270::MapToken","module::1951883979::WeakMapToken","module::510054819::UnionToken","module::3725271233::UnionSetToken"],"refs":[],"symbolHash":2940113031,"updated":1723767904400},{"name":"ContainerKeyGuarantee","fqn":"module::3812375242::ContainerKeyGuarantee","filepath":"src/types/literals/ContainerKeyGuarantee.ts","startLine":19,"endLine":25,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TKey","type":"TKey"},{"name":"TType","type":"TType"}],"jsDocs":[{"comment":"**ContainerKeyGuarantee**`<TContainer,TKey,[TType]>`\n\nReturns the `TContainer` value intersected with a guarantee that the\n`TKey` key value exists.\n```ts\n// { foo: 1; bar: unknown }\ntype TO = ContainerKeyGuarantee<{foo: 1}, \"bar\">;\n// number[] & readonly [unknown,unknown,unknown]\ntype TA = ContainerKeyGuarantee<number[], 2>;\n```\n\n- by default the guarantee is provided by assigning the `unknown`\ntype but you can override this by setting `TType`","tags":[]}],"deps":["module::2872591658::Container","ext::2318994541::PropertyKey","module::2666698309::Tuple","ext::2318994541::Readonly","module::3435872486::ExpandRecursively","ext::2318994541::Record"],"refs":[],"symbolHash":3322738216,"updated":1723767904346},{"name":"ContainerBlockKey","fqn":"module::3781675192::ContainerBlockKey","filepath":"src/types/literals/ContainerBlockKey.ts","startLine":16,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContainer","type":"TContainer"},{"name":"TKey","type":"TKey"}],"jsDocs":[{"comment":"**ContainerBlockKey**`<TContainer,TKey>`\n\nReturns the `TContainer` value intersected with a guarantee that the\n`TKey` key value exists.\n```ts\n// { foo: 1; bar: unknown }\ntype TO = ContainerBlockKey<{foo: 1}, \"bar\">;\n// number[] & readonly [unknown,unknown,unknown]\ntype TA = ContainerBlockKey<number[], 2>;\n```","tags":[]}],"deps":["module::2872591658::Container","ext::2318994541::PropertyKey","module::2666698309::Tuple","ext::2318994541::Exclude"],"refs":[],"symbolHash":2706905366,"updated":1723767904347},{"name":"Container","fqn":"module::3831407942::Container","filepath":"src/types/base-types/Container.ts","startLine":12,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Container**\n\nA type which represents any container type including:\n\n - any object based type defined with Record<K,V>\n - any array or tuple\n - any `Map<K,V>`, `WeakMap<K,V>`, or `Set<T>`","tags":[]}],"deps":["module::186693758::Dictionary","ext::2318994541::Map","ext::2318994541::WeakMap","ext::2318994541::Set"],"refs":[],"symbolHash":3459729152,"updated":1723767904151},{"name":"Constructor","fqn":"module::3113632577::Constructor","filepath":"src/types/classes/Constructor.ts","startLine":7,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"Ctor","type":"Ctor"},{"name":"Klass","type":"Klass"}],"jsDocs":[{"comment":"Define a class constructor; allowing strong typing for constructor's parameters\nand the returned class structure.","tags":[]}],"deps":[],"refs":[],"symbolHash":3395054132,"updated":1723767904249},{"name":"Consonants","fqn":"module::1772773471::Consonants","filepath":"src/types/string-literals/character-sets/Consonants.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Consonants**\n\nAn array of all consonant characters/letters.\n\n**Related:** `Consonant`","tags":[]}],"deps":[],"refs":[],"symbolHash":547246601,"updated":1723767904460},{"name":"Consonant","fqn":"module::2541842860::Consonant","filepath":"src/types/string-literals/character-sets/Consonants.ts","startLine":19,"endLine":19,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Consonant**\n\nA union type that includes all _consonants_.\n\n**Related:** `Consonants`","tags":[]}],"deps":[],"refs":[],"symbolHash":4212225127,"updated":1723767904461},{"name":"Concat","fqn":"module::935936969::Concat","filepath":"src/types/string-literals/Concat.ts","startLine":43,"endLine":45,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Concat**`<T>`\n\nA type utility which converts an array of strings into a\n_concatenated_ string type.\n\n```ts\n// `${string}-${string}`\ntype T1 = Concat<string, \"-\", string>;\n// `foo-bar-baz`\ntype T2 = Concat<\"foo\", \"-\", \"bar\", \"-\", \"baz\">;\n```\n\n**Related:** `Join<TArr,TWith>`","tags":[]}],"deps":["local::3746938522::Process"],"refs":[],"symbolHash":280234934,"updated":1723767904413},{"name":"CompleteError","fqn":"module::377723675::CompleteError","filepath":"src/types/errors/CompleteError.ts","startLine":39,"endLine":78,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TPartial","type":"TPartial"},{"name":"TRequired","type":"TRequired"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**CompleteError**`<TPartial, TComplete>`\n\nCompletes an `ErrorCondition` from the starting point of\na pre-existing `TPartial`.","tags":[]}],"deps":["module::2598461277::PartialError","local::1346882915::Req","local::1346882915::Optional","module::4114441065::EmptyObject","module::3686363877::Throw","module::1897058928::AsString","module::634500037::RemoveNever","module::1939532401::ErrorCondition","ext::2318994541::Omit"],"refs":[],"symbolHash":2684068459,"updated":1723767904299},{"name":"Comparison","fqn":"module::4036078295::Comparison","filepath":"src/types/boolean-logic/combinators/Compare.ts","startLine":88,"endLine":99,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TOp","type":"TOp"},{"name":"TArgs","type":"TArgs"},{"name":"TFn","type":"TFn"}],"jsDocs":[{"comment":"**Comparison**`<TOp,TArgs>`\n\nA strongly typed comparison which can be used in runtime utilities\nlike `filter`, `retain`, and `map`.\n\n- typically generated with the `createComparison(op,...params)` runtime utility.\n\n```ts\n// Comparison<\"equals\",[true]>\nconst isTrue = createComparison(\"equals\", true);\n//\nconst filtered = filter(isTrue)(listOfStuff);\n```","tags":[]}],"deps":["module::1891863935::ComparatorOperation","module::2946248511::ParamsForComparison","module::540585742::TypedFunction","module::488874576::Extends","module::1939532401::ErrorCondition"],"refs":[],"symbolHash":3142608614,"updated":1723767904239},{"name":"Compare","fqn":"module::2713470276::Compare","filepath":"src/types/boolean-logic/combinators/Compare.ts","startLine":159,"endLine":165,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TOp","type":"TOp"},{"name":"TComparator","type":"TComparator"}],"jsDocs":[{"comment":"**Compare**`<TVal,TOp,TComparator>`\n\nCompares the value `TVal` with `TComparator` using\nthe `TOp` _operator_.","tags":[]}],"deps":["module::1891863935::ComparatorOperation","module::3700024488::WhenNever","local::2394964595::Process"],"refs":[],"symbolHash":3858669467,"updated":1723767904239},{"name":"CombinedKeys","fqn":"module::2608347914::CombinedKeys","filepath":"src/types/dictionary/CombinedKeys.ts","startLine":14,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**CombinedKeys**`<A,B>`\n\nProvides a tuple of unique keys which incorporate all key values across\nboth `A` and `B`.\n\n```ts\n// [ \"foo\", \"bar\", \"baz\", \"bax\" ]\ntype T = CombinedKeys<{foo: 1; bar: 2; baz: 3}, {bar: 4; baz: 5; bax: 6}>\n```","tags":[]}],"deps":["module::186693758::Dictionary","module::3563854871::Unique","module::2943445649::IsObjectLiteral","module::4102577001::Keys"],"refs":[],"symbolHash":614800558,"updated":1723767904254},{"name":"ClosingMarkPlus","fqn":"module::3946660210::ClosingMarkPlus","filepath":"src/types/string-literals/character-sets/quotation-marks/ClosingMark.ts","startLine":20,"endLine":20,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ClosingMarkPlus**\n\nAll opening marks including both generic single and double quotes, standard smart quotes and more specialized smart quotes.\n\n**Related:** `OpeningMark`,`ClosingMark`","tags":[]}],"deps":["module::2780001152::SingleQuote","module::4044303182::DoubleQuote","module::183352828::RightSingleMark","module::1833745272::RightDoubleMark","module::1882947382::RightReversedDoublePrime","module::3571837161::RightHeavySingleTurned","module::3317995668::RightHeavyDoubleTurned","module::3200871420::FullWidthQuotation"],"refs":[],"symbolHash":420733686,"updated":1723767904470},{"name":"ClosingMark","fqn":"module::3224821790::ClosingMark","filepath":"src/types/string-literals/character-sets/quotation-marks/ClosingMark.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ClosingMark**\n\nAny standard quote mark along with standard closing \"smart marks\".\n\n**Related:** `OpeningMarkPlus`,`ClosingMark`","tags":[]}],"deps":["module::2780001152::SingleQuote","module::4044303182::DoubleQuote","module::183352828::RightSingleMark","module::1833745272::RightDoubleMark"],"refs":[],"symbolHash":597786848,"updated":1723767904470},{"name":"ClosingBracket","fqn":"module::663312183::ClosingBracket","filepath":"src/types/string-literals/character-sets/brackets/ClosingBracket.ts","startLine":4,"endLine":4,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ClosingBracket**","tags":[]}],"deps":[],"refs":[],"symbolHash":3120923990,"updated":1723767904468},{"name":"CivilianTime","fqn":"module::1294286512::CivilianTime","filepath":"src/types/string-literals/Time.ts","startLine":293,"endLine":302,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TResolution","type":"TResolution"},{"name":"TOpt","type":"TOpt"}],"jsDocs":[{"comment":"**CivilianTime**\n\nAllows time resolution of HH:MM or HH:MM:SS in civilian time (aka, 12 hour time with AM/PM).","tags":[]}],"deps":["module::245352994::TimeResolution","module::4237661426::CivilianTimeOptions","local::3730197234::Opt","module::4114441065::EmptyObject","module::3527874285::HoursMinutes12","module::3745100801::HoursMinutesSeconds12","module::1405946143::HoursMinutesSecondsMilliseconds12"],"refs":[],"symbolHash":195381301,"updated":1723767904439},{"name":"ChoiceBuilder","fqn":"module::1045697875::ChoiceBuilder","filepath":"src/types/literals/Choices.ts","startLine":238,"endLine":250,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**ChoiceBuilder**\n\nBuilds a Choice API surface:","tags":[]}],"deps":["module::1532643815::Choice","module::2889569332::MultipleChoice","local::1388686635::MergeKVs","module::186693758::Dictionary"],"refs":[],"symbolHash":1767971651,"updated":1723767904365},{"name":"ChoiceApiConfig","fqn":"module::2314556259::ChoiceApiConfig","filepath":"src/types/literals/Choices.ts","startLine":93,"endLine":120,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TChoices","type":"TChoices"},{"name":"TOptions","type":"TOptions"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1532643815::Choice","module::1657296860::ChoiceApiOptions","module::1836716696::ChoiceApi","module::3860303104::As","module::1930997862::MergeObjects"],"refs":[],"symbolHash":3603763504,"updated":1723767904362},{"name":"Chars","fqn":"module::1448470086::Chars","filepath":"src/types/string-literals/Chars.ts","startLine":23,"endLine":27,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TStr","type":"TStr"}],"jsDocs":[{"comment":"**Chars**`<TStr>`\n\nTakes a literal string and converts it to an array of characters.","tags":[]}],"deps":["module::172457424::IsStringLiteral","local::272241130::Process"],"refs":[],"symbolHash":2762902315,"updated":1723767904416},{"name":"CardinalityOut","fqn":"module::638017147::CardinalityOut","filepath":"src/types/string-literals/Cardinality.ts","startLine":71,"endLine":73,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"The second or _output_ part of the Cardinality relationship","tags":[]}],"deps":["module::3869517639::Cardinality"],"refs":[],"symbolHash":2697990446,"updated":1723767904415},{"name":"CardinalityNode","fqn":"module::2775334415::CardinalityNode","filepath":"src/types/string-literals/Cardinality.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3704468413,"updated":1723767904413},{"name":"CardinalityInput","fqn":"module::1950107634::CardinalityInput","filepath":"src/types/string-literals/Cardinality.ts","startLine":75,"endLine":82,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"C","type":"C"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3869517639::Cardinality","module::458105997::UnionToTuple","module::2295046820::First"],"refs":[],"symbolHash":619775543,"updated":1723767904416},{"name":"CardinalityIn","fqn":"module::135665899::CardinalityIn","filepath":"src/types/string-literals/Cardinality.ts","startLine":66,"endLine":66,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"The first or _input_ part of the Cardinality relationship","tags":[]}],"deps":["module::3869517639::Cardinality"],"refs":[],"symbolHash":3881286350,"updated":1723767904415},{"name":"Cardinality1","fqn":"module::739734860::Cardinality1","filepath":"src/types/string-literals/Cardinality.ts","startLine":22,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Cardinality which expects a singular input and requires\n1 or many outputs.\n\nNote: choose `CardinalityFilter1` if you want to allow output\nto have no outputs.","tags":[]}],"deps":["module::3127397202::OneToOne","module::2540365964::OneToMany"],"refs":[],"symbolHash":769742970,"updated":1723767904414},{"name":"Cardinality0","fqn":"module::2542245107::Cardinality0","filepath":"src/types/string-literals/Cardinality.ts","startLine":34,"endLine":34,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Cardinality which expects a singular input which is allowed to be\n_undefined_ or the expected type.","tags":[]}],"deps":["module::1794694736::ZeroToOne","module::2430804893::ZeroToMany","module::3127397202::OneToOne","module::2540365964::OneToMany"],"refs":[],"symbolHash":3100475576,"updated":1723767904414},{"name":"CapitalizeWords","fqn":"module::3571753489::CapitalizeWords","filepath":"src/types/string-literals/casing/CapitalizeWords.ts","startLine":4,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"}],"jsDocs":[{"comment":"Capitalize all words in a string","tags":[]}],"deps":["ext::2318994541::Capitalize"],"refs":[],"symbolHash":3242952839,"updated":1723767904479},{"name":"CapFirstAlpha","fqn":"module::887528176::CapFirstAlpha","filepath":"src/types/string-literals/casing/CapFirstAlpha.ts","startLine":20,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"Capitalize the first alphabetical character in the string","tags":[]}],"deps":["module::4005579088::LeadingNonAlpha","ext::2318994541::Capitalize","module::3977136121::Replace"],"refs":[],"symbolHash":1389515183,"updated":1723767904478},{"name":"CamelCase","fqn":"module::2134808489::CamelCase","filepath":"src/types/string-literals/casing/CamelCase.ts","startLine":16,"endLine":32,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TString","type":"TString"},{"name":"TPreserveWhitespace","type":"TPreserveWhitespace"}],"jsDocs":[{"comment":"**CamelCase**`<TString,TPreserveWhitespace>`\n\nConverts a string to `CamelCase` format while optionally preserving\nsurrounding whitespace.","tags":[]}],"deps":["module::1931245833::If","module::4187212716::IsTrue","module::2597507937::Concat","module::62880555::LeftWhitespace","ext::2318994541::Uncapitalize","module::82172027::PascalCase","module::1766334850::RightWhitespace"],"refs":[],"symbolHash":730562843,"updated":1723767904478},{"name":"Break","fqn":"module::3625011994::Break","filepath":"src/types/type-conversion/Break.ts","startLine":15,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"D","type":"D"}],"jsDocs":[{"comment":"**Break<T,D>**\n\nTakes a string `T`, and splits it into a tuple of the form `[F, R]`.\n```ts\n// [\"the\", \" long and winding road\"]\ntype T1 = Break<\"the long and winding road\", \" \">;\n// [\"there\", \" I was, there I was\"]\ntype T2 = Break<\"there I was, there I was\", \" \">;\n```\n\n**Related:** `Split`","tags":[]}],"deps":[],"refs":[],"symbolHash":2044692383,"updated":1723767904500},{"name":"Bracket","fqn":"module::1313800255::Bracket","filepath":"src/types/string-literals/character-sets/brackets/Brackets.ts","startLine":7,"endLine":7,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Opening and closing brackets. Where brackets are parenthesis, square brackets, and curly brackets.","tags":[]}],"deps":["module::1582777150::OpeningBracket","module::2997204280::ClosingBracket"],"refs":[],"symbolHash":2018070760,"updated":1723767904468},{"name":"Box","fqn":"module::2051977669::Box","filepath":"src/types/literals/Box.ts","startLine":4,"endLine":20,"scope":"module","flags":["None","Interface","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1631669924::HasParameters","module::540585742::TypedFunction","ext::2318994541::ReturnType"],"refs":[],"symbolHash":2557725445,"updated":1723767904345},{"name":"BooleanLike","fqn":"module::3156141450::BooleanLike","filepath":"src/types/literals/BooleanLike.ts","startLine":9,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**BooleanLike**\n\nA union of all boolean types plus the string literal representations of these\nliterals.","tags":[]}],"deps":[],"refs":[],"symbolHash":3876558949,"updated":1723767904371},{"name":"BespokeUnion","fqn":"module::4216043593::BespokeUnion","filepath":"src/types/runtime-types/StringLiteralToken.ts","startLine":21,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**BespokeUnion**\n\nA string literal token which represents a discrete set of\nvalues who's union represents the string literal value.\n\nNote: if you need a comma literal in your union type then it\nmust be serialized to `Constant<\"comma\">`.","tags":[]}],"deps":["module::2660456408::Digit","module::1622830386::CSV"],"refs":[],"symbolHash":3370027388,"updated":1723767904396},{"name":"BeforeLast","fqn":"module::397492907::BeforeLast","filepath":"src/types/lists/BeforeLast.ts","startLine":21,"endLine":33,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**BeforeLast**`<T>`\n\nReturns:\n\n- the _elements_ in an **array**; _excluding_ the last element\n- the _characters_ in a **string** excluding the last character\n\nThis behavior is _very_ much like `Pop<T>` but where `Pop<T>` will\nreturn _never_ when an empty input is passed in, this utility returns\nthe \"empty\" state:\n\n- a _tuple_ will return `[]`\n- a _string_ will return \"\"\n\n**Related:** `Pop`, `Last`, `AfterFirst`, `First`","tags":[]}],"deps":["module::2666698309::Tuple","module::1364134543::IsEqual","module::4205836599::Pop","module::3921923702::Chars","module::2597507937::Concat","module::690480842::Handle"],"refs":[],"symbolHash":2117923334,"updated":1723767904338},{"name":"Awaited","fqn":"module::1376149434::Awaited","filepath":"src/types/type-conversion/Awaited.ts","startLine":7,"endLine":9,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Awaited**`<T>`\n\nUnwraps the expected return value inside a promise-like\nresult.","tags":[]}],"deps":["ext::2318994541::PromiseLike"],"refs":[],"symbolHash":2613878635,"updated":1723767904486},{"name":"AvailableConverters","fqn":"module::2437107929::AvailableConverters","filepath":"src/types/lists/ConvertAndMap.ts","startLine":70,"endLine":72,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"S","type":"S"},{"name":"N","type":"N"},{"name":"B","type":"B"},{"name":"O","type":"O"}],"jsDocs":[{"comment":"**AvailableConverters**\n\nType utility which will produce the correct union type for a \"converter\"","tags":[]}],"deps":["local::1826827089::ConverterKeys","module::2535688849::TupleToUnion","local::1826827089::ConverterInputUnion"],"refs":[],"symbolHash":1541537144,"updated":1723767904333},{"name":"AtomicToken","fqn":"module::568223957::AtomicToken","filepath":"src/types/runtime-types/TypeToken.ts","startLine":87,"endLine":91,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AtomicToken**\n\nA fully formed `TypeToken` of the \"atomic\" type.","tags":[]}],"deps":["module::326925864::TypeTokenAtomics"],"refs":[],"symbolHash":359600173,"updated":1723767904398},{"name":"AsVueComputedRef","fqn":"module::4275164238::AsVueComputedRef","filepath":"src/types/literals/VueComputedRef.ts","startLine":38,"endLine":40,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsVueComputedRef**\n\nNarrowing type that takes an _unknown_ `T` and tests to see if is\na **VueJS** `ComputedRef` property. If it is then the narrowed type\nis returned, otherwise `never`.\n\n**Related:** `VueComputedRef`, `IsVueComputedRef`","tags":[]}],"deps":["module::1623293713::VueComputedRef"],"refs":[],"symbolHash":3634182540,"updated":1723767904346},{"name":"AsUnion","fqn":"module::437083411::AsUnion","filepath":"src/types/literals/FromDefn.ts","startLine":61,"endLine":65,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsUnion**\n\nReceives a `UnionTokenSet`, a `ShapeCallback` or just a tuple of values\nand makes this into _union type_.","tags":[]}],"deps":["module::1166273159::UnionElDefn","module::2535688849::TupleToUnion","local::1570400418::IterateUnion","local::1570400418::ProcessUnion"],"refs":[],"symbolHash":2786689748,"updated":1723767904368},{"name":"AsType","fqn":"module::1192963790::AsType","filepath":"src/types/runtime-types/AsType.ts","startLine":36,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsType**`<T>`\n\nconverts either a `SimpleToken` or a `TypeToken` into the\n_type_ it represents.\n\nNOTE: only implemented for `SimpleToken` at the moment.","tags":[]}],"deps":["module::668605161::SimpleToken","module::1826455347::TypeToken","local::681641915::Iterate","local::681641915::ProcessSimple"],"refs":[],"symbolHash":72192927,"updated":1723767904409},{"name":"AsTuple","fqn":"module::3105791139::AsTuple","filepath":"src/types/lists/AsTuple.ts","startLine":12,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsTuple**`<T>`\n\nType utility which ensures that `T` is tuple value\nencapsulating it as a single item array if it is a\nnon-array type.\n\n**Related:** `AsArray`","tags":[]}],"deps":["module::2666698309::Tuple","module::1931245833::If","module::1274869242::IsUndefined"],"refs":[],"symbolHash":2052768655,"updated":1723767904322},{"name":"AsStringUnion","fqn":"module::1788199041::AsStringUnion","filepath":"src/types/type-conversion/AsStringUnion.ts","startLine":36,"endLine":49,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"THandle","type":"THandle"}],"jsDocs":[{"comment":"**AsStringUnion**`<T, [THandle]>`\n\nA type conversion utility which ensures unions (and a few literals) are\nconverted to string literal variants:\n\n- if `T` is a union type, all _numeric_ or _boolean_ elements in the union\nwill be converted to a string literal equivalent and others will be dropped\n- if you would prefer non-convertible types are left as part of the union\nyou can set the `THandle` to \"proxy\" (instead of the default \"drop\")\n\nFor non-union types, the goal is to address a similar outcome which is:\n\n- if `T` is of type `number` or `boolean` then this is converted to a\nstring literal equivalent\n- all other types result in `never` or are just proxied through if\n`THandle` is set to \"proxy\"","tags":[]}],"deps":["module::3393438424::IsUnion","local::3295654126::ConvertUnion","module::458105997::UnionToTuple"],"refs":[],"symbolHash":29482982,"updated":1723767904489},{"name":"AsString","fqn":"module::1035173669::AsString","filepath":"src/types/type-conversion/AsString.ts","startLine":14,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsString**<T>\n\nAttempts to narrow `T` to a string type where possible.\n\n- will convert any string, boolean, or numeric value\nto a string value\n- union types which include a variant which is `T` can be\n\n**Related:** `ToString`","tags":[]}],"deps":["module::1764523945::Join"],"refs":[],"symbolHash":1326935071,"updated":1723767904486},{"name":"AsSomething","fqn":"module::3662129028::AsSomething","filepath":"src/types/boolean-logic/narrowing/AsSomething.ts","startLine":31,"endLine":38,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TNonUnion","type":"TNonUnion"}],"jsDocs":[{"comment":"**AsSomething**`<T>`\n\nNarrowing utility which takes a type `T` and _if it's a union_\nwill narrow the union elements to no longer include `undefined`\nor `null`.\n\n- If `T` is a non-union type then:\n  - a `null` or `undefined` value will be mapped to `TNonUnion` (\nwhich defaults to `never`)\n  - all other values are just proxied through","tags":[]}],"deps":["module::3393438424::IsUnion","local::3619314027::Process","module::458105997::UnionToTuple","module::761993671::Nothing"],"refs":[],"symbolHash":4098591849,"updated":1723767904248},{"name":"AsRight","fqn":"module::966698192::AsRight","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":64,"endLine":64,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsRight**`<T>`\n\nCreates a `LeftRight` tuple with value on right.","tags":[]}],"deps":["module::1195775228::LeftRight"],"refs":[],"symbolHash":765219674,"updated":1723767904186},{"name":"AsRef","fqn":"module::1540782552::AsRef","filepath":"src/types/type-conversion/AsRef.ts","startLine":3,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::2872591658::Container"],"refs":[],"symbolHash":4187164087,"updated":1723767904487},{"name":"AsRecord","fqn":"module::1149991275::AsRecord","filepath":"src/types/type-conversion/AsRecord.ts","startLine":10,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsRecord**`<T>`\n\nReceives a `Record`, `object`, or `Tuple` and ensures the type \nis a `Record` type for all object-like types and just passes \nTuples through \"as is\".","tags":[]}],"deps":["module::186693758::Dictionary","module::2666698309::Tuple","ext::2318994541::NonNullable"],"refs":[],"symbolHash":260588089,"updated":1723767904488},{"name":"AsPropertyKey","fqn":"module::3248308369::AsPropertyKey","filepath":"src/types/type-conversion/AsPropertyKey.ts","startLine":9,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsPropertyKey**`<T>`\n\nEnsures that `T` is a property key or, if a tuple is passed in, that\nall values extend `PropertyKey`","tags":[]}],"deps":["ext::2318994541::PropertyKey"],"refs":[],"symbolHash":410926821,"updated":1723767904489},{"name":"AsOptionalParamFn","fqn":"module::4224341775::AsOptionalParamFn","filepath":"src/types/base-types/fns/OptionalParamFn.ts","startLine":32,"endLine":42,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsOptionalParamFn**`<T>`\n\nConverts the function passed in into a `OptionalParamFn` where possible and\nconverts to `ErrorCondition<\"invalid-conversion\">` otherwise.","tags":[]}],"deps":["module::540585742::TypedFunction","ext::2318994541::Parameters","module::1931245833::If","module::1469696892::Some","module::3686363877::Throw"],"refs":[],"symbolHash":2468269977,"updated":1723767904184},{"name":"AsObjectKeys","fqn":"module::2393304902::AsObjectKeys","filepath":"src/types/type-conversion/AsObjectKeys.ts","startLine":10,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsObjectKeys**`<T>`\n\nNarrows type by validating that `T` extends a tuple of only\nvalues which extend `ObjectKey`.","tags":[]}],"deps":["module::4119350992::ObjectKey"],"refs":[],"symbolHash":854895280,"updated":1723767904488},{"name":"AsObjectKey","fqn":"module::1544546637::AsObjectKey","filepath":"src/types/type-conversion/AsObjectKeys.ts","startLine":21,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsObjectKey**`<T>`\n\nNarrows type by validating that `T` extends `ObjectKey`.","tags":[]}],"deps":["module::4119350992::ObjectKey"],"refs":[],"symbolHash":2549939312,"updated":1723767904488},{"name":"AsObject","fqn":"module::1424960138::AsObject","filepath":"src/types/type-conversion/AsObject.ts","startLine":4,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":2601994365,"updated":1723767904488},{"name":"AsNumberWhenPossible","fqn":"module::2721670550::AsNumberWhenPossible","filepath":"src/types/numeric-literals/AsNumberWhenPossible.ts","startLine":35,"endLine":41,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsNumberWhenPossible**`<T>`\n\nTakes any value `T` and either returns `T` as an _identity value_ or where\nit finds a string literal which can be converted to a number it will convert\nit to that number value.\n\n- if an array of values is passed in then the values are iterated over and\nthe same process is applied to each.\n- if the type of `T` is a _union type_ then any numeric string literal in the\nliteral values will be converted to a numeric literal but the return type will\nstill be a _union_.","tags":[]}],"deps":["module::1931245833::If","module::3393438424::IsUnion","local::1389743953::ConvertUnion","local::1389743953::ConvertTuple","local::1389743953::Convert"],"refs":[],"symbolHash":789255397,"updated":1723767904373},{"name":"AsNumber","fqn":"module::2858848465::AsNumber","filepath":"src/types/type-conversion/AsNumber.ts","startLine":25,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsNumber**`<T>`\n\nReturns a _number_ for `T` where `T` extends a _number_ or `${number}` type; otherwise\nreturn _never_. Literal types are preserved.\n\n```ts\n// 4\ntype Num = AsNumber<\"4\">;\n```\n**Related:** `ToNumber`","tags":[]}],"deps":["module::2701837276::ParseInt"],"refs":[],"symbolHash":3988364969,"updated":1723767904487},{"name":"AsNonNull","fqn":"module::1635141315::AsNonNull","filepath":"src/types/type-conversion/AsNonNull.ts","startLine":23,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsNonNull**`<T>`\n\nA narrowing utility which ensures that a union type which includes a `null`\noption will have the **null** option removed.\n\n**Note:** if `T` is _equal to **null** then an `ErrorCondition<\"invalid-cast\">`\nwill be raised.","tags":[]}],"deps":["module::1931245833::If","module::1364134543::IsEqual","local::3401370074::InvalidCast","module::3393438424::IsUnion","module::2535688849::TupleToUnion","module::3949993701::Filter","module::458105997::UnionToTuple"],"refs":[],"symbolHash":4244925775,"updated":1723767904488},{"name":"AsNegativeNumber","fqn":"module::1918152943::AsNegativeNumber","filepath":"src/types/numeric-literals/AsNegativeNumber.ts","startLine":20,"endLine":32,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsNegativeNumber**\n\nEnsures that the number-like value for `T` is a negative number.\n\n**Related**: `Abs`, `InvertNumericSign`","tags":[]}],"deps":["module::3330042255::NumberLike","module::959689088::Zero","module::116081596::AsNumber","local::4036839051::Process"],"refs":[],"symbolHash":3543781530,"updated":1723767904380},{"name":"AsNarrowingFn","fqn":"module::2157094500::AsNarrowingFn","filepath":"src/types/functions/NarrowingFn.ts","startLine":56,"endLine":71,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TParams","type":"TParams"},{"name":"TReturn","type":"TReturn"},{"name":"TProps","type":"TProps"}],"jsDocs":[{"comment":"**AsNarrowingFn**`<TParams,TReturns,TProps>`\n\nConstructs a `NarrowingFn` from component aspects of \na function.\n\n**Related:** `LiteralFn`, `NarrowingFn`, `AsLiteralFn`","tags":[]}],"deps":["module::2666698309::Tuple","module::540585742::TypedFunction","module::186693758::Dictionary","module::4114441065::EmptyObject","module::2280783541::NarrowingFn","module::3866744368::IsNonEmptyObject","module::1364134543::IsEqual"],"refs":[],"symbolHash":923908067,"updated":1723767904316},{"name":"AsLiteralFn","fqn":"module::2193467174::AsLiteralFn","filepath":"src/types/functions/LiteralFn.ts","startLine":39,"endLine":53,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TParams","type":"TParams"},{"name":"TReturn","type":"TReturn"},{"name":"TProps","type":"TProps"}],"jsDocs":[{"comment":"**AsLiteralFn**`<TParams,TReturns,TProps>`\n\nConstructs a `LiteralFn` from component aspects of \na function.\n\n**Related:** `LiteralFn`, `NarrowingFn`, `AsNarrowingFn`","tags":[]}],"deps":["module::2666698309::Tuple","module::3580587573::AnyFunction","module::186693758::Dictionary","module::4114441065::EmptyObject","module::3275125468::LiteralFn","module::3866744368::IsNonEmptyObject","module::1364134543::IsEqual"],"refs":[],"symbolHash":723080414,"updated":1723767904318},{"name":"AsLeftRight","fqn":"module::1086298569::AsLeftRight","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":28,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**AsLeftRight**`<A,B>`\n\nAssigns two types into a `LeftRight` tuple.\n\nNote: in most cases you should prefer the use of `ToLeft` and `ToRight`\nbut in the case where both sides of the `LeftRight` tuple are being leveraged\nthis is a convenient way to set the value.","tags":[]}],"deps":["module::1195775228::LeftRight"],"refs":[],"symbolHash":561216008,"updated":1723767904185},{"name":"AsLeft","fqn":"module::3030420927::AsLeft","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":47,"endLine":47,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsLeft**`<T>`\n\nCreates a `LeftRight` tuple with value on left.","tags":[]}],"deps":["module::1195775228::LeftRight"],"refs":[],"symbolHash":864503723,"updated":1723767904186},{"name":"AsIp6Prefix","fqn":"module::3029081692::AsIp6Prefix","filepath":"src/types/string-literals/character-sets/IpAddress.ts","startLine":124,"endLine":134,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::216320004::Ip6Group"],"refs":[],"symbolHash":903391120,"updated":1723767904457},{"name":"AsIndexOf","fqn":"module::1751270623::AsIndexOf","filepath":"src/types/boolean-logic/narrowing/AsIndexOf.ts","startLine":9,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"K","type":"K"},{"name":"ERR","type":"ERR"}],"jsDocs":[{"comment":"**AsIndexOf**`<T,K,[ERR]>`\n\nValidates that `K` is a keyof `T` and","tags":[]}],"deps":["module::186693758::Dictionary","module::2666698309::Tuple","ext::2318994541::PropertyKey","module::3629498205::Constant","module::4258457119::IfEqual","module::3686363877::Throw","module::577891714::ToString"],"refs":[],"symbolHash":2469929145,"updated":1723767904248},{"name":"AsFunction","fqn":"module::2159155214::AsFunction","filepath":"src/types/type-conversion/AsFunction.ts","startLine":10,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TParams","type":"TParams"}],"jsDocs":[{"comment":"**AsFunction**<TTest, [TParams]>\n\nAttempts to narrow `T` to a string type where possible.\n\n**Related:** `ToString`","tags":[]}],"deps":[],"refs":[],"symbolHash":247727712,"updated":1723767904488},{"name":"AsFnMeta","fqn":"module::2049676963::AsFnMeta","filepath":"src/types/functions/AsFnMeta.ts","startLine":18,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TFn","type":"TFn"}],"jsDocs":[{"comment":"**AsFnMeta**`<TFn>`\n\nConverts any function into `FnMeta` format.","tags":[]}],"deps":["module::3580587573::AnyFunction","module::540585742::TypedFunction","module::3866744368::IsNonEmptyObject","module::2594163080::FnProps","module::1086143214::FnMeta","ext::2318994541::Parameters","ext::2318994541::ReturnType","module::2994160504::ExpandDictionary","module::4114441065::EmptyObject"],"refs":[],"symbolHash":894614661,"updated":1723767904310},{"name":"AsEscapeFunction","fqn":"module::3518909409::AsEscapeFunction","filepath":"src/types/base-types/fns/EscapeFunction.ts","startLine":21,"endLine":23,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::3591970705::EscapeFunction","module::3435872486::ExpandRecursively","module::2994160504::ExpandDictionary","ext::2318994541::Record","module::2594163080::FnProps"],"refs":[],"symbolHash":564886833,"updated":1723767904185},{"name":"AsError","fqn":"module::2675502635::AsError","filepath":"src/types/errors/AsError.ts","startLine":83,"endLine":110,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TType","type":"TType"}],"jsDocs":[{"comment":"**AsError**`<T>`\n\nProxies through all `T`'s which are already extended from `ErrorCondition`\nunchanged but converts all other types into \n\nIf no known formula's are found to convert to an ErrorCondition then a\n`ErrorCondition<\"failed-to-wrap\">` error will be produced:\n\n#### Known Formulas:\n- `never` - converted to `ErrorCondition<\"never-value\">`\n- `Error` - a JS `Error` type is converted to `ErrorCondition<\"runtime-error\"> and it's properties are available in the error conditions hash storage as `error`\n- `ErrorCondition` - any pre-existing `ErrorCondition` will just be proxied through\n- `[kind, msg, [context]]` - it will:\n   - the first two parameters will map directly into the error condition properties of the same name\n   - the optional `context` object is a dictionary of key value pairs; where:\n     - when the keys match one of the root properties of `ErrorCondition` it will be\n       mapped onto that property (assuming that the _type_ is appropriate)\n     - otherwise it will be added to the `context` dictionary appearing as a prop on \n       `ErrorCondition`.\n\n**Related:** `Throw`","tags":[]}],"deps":["module::1939532401::ErrorCondition","module::1715223530::IfNever","local::206009832::Error","module::3686363877::Throw","module::3445016838::AsError__Meta","local::206009832::Process","module::2597507937::Concat","module::577891714::ToString"],"refs":[],"symbolHash":3341797024,"updated":1723767904290},{"name":"AsErrKind","fqn":"module::1093054686::AsErrKind","filepath":"src/types/functional/Result.ts","startLine":108,"endLine":123,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsErrKind**\n\nProvides a useful way to build a `ResultErr` which will be used as a \"template\"\n(aka., \"msg\" is always just a wide string value)\n\n**Related:** `AsErr`, `ResultErr`","tags":[]}],"deps":["ext::2318994541::Record","module::2853127496::KebabCase","ext::2318994541::NonNullable","module::1897058928::AsString","module::4064428151::Widen","module::731915050::TakeProp"],"refs":[],"symbolHash":2807847183,"updated":1723767904302},{"name":"AsDoneFn","fqn":"module::4064012562::AsDoneFn","filepath":"src/types/boolean-logic/narrowing/AsDoneFn.ts","startLine":10,"endLine":12,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsDoneFn**`<T>`\n\nNarrows","tags":[]}],"deps":["module::3727409867::FnWithDescription"],"refs":[],"symbolHash":3343312581,"updated":1723767904248},{"name":"AsDictionary","fqn":"module::1887470862::AsDictionary","filepath":"src/types/type-conversion/AsDictionary.ts","startLine":3,"endLine":5,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::186693758::Dictionary"],"refs":[],"symbolHash":454270356,"updated":1723767904486},{"name":"AsDefined","fqn":"module::1054645658::AsDefined","filepath":"src/types/type-conversion/AsDefined.ts","startLine":8,"endLine":8,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsDefined**`<T>`\n\nEnsures that if `T` includes _undefined_ as part of a union, it is\nremoved.","tags":[]}],"deps":["ext::2318994541::Exclude"],"refs":[],"symbolHash":2197388116,"updated":1723767904488},{"name":"AsContainer","fqn":"module::765106640::AsContainer","filepath":"src/types/type-conversion/AsContainer.ts","startLine":10,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TError","type":"TError"}],"jsDocs":[{"comment":"**AsContainer**`<T, [TError]>`\n\nReturns `T` with the type that ensures it is a\ncontainer.","tags":[]}],"deps":["module::186693758::Dictionary"],"refs":[],"symbolHash":4258185079,"updated":1723767904505},{"name":"AsChoice","fqn":"module::395787435::AsChoice","filepath":"src/types/literals/Choices.ts","startLine":48,"endLine":55,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TName","type":"TName"},{"name":"TValue","type":"TValue"}],"jsDocs":[{"comment":"**AsChoice**\n\nConverts a name/value pairing from createChoice() into a Choice.","tags":[]}],"deps":["module::2167556926::ChoiceValue","module::1626958147::ShapeCallback","module::1548065869::HandleDoneFn","ext::2318994541::ReturnType","module::3252133680::Scalar","module::186693758::Dictionary"],"refs":[],"symbolHash":2114968822,"updated":1723767904359},{"name":"AsBoolean","fqn":"module::1005140503::AsBoolean","filepath":"src/types/type-conversion/AsBoolean.ts","startLine":8,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsBoolean**`<T>`\n\nConverts any `BooleanLike` value to a boolean value\nand return `never` otherwise.","tags":[]}],"deps":[],"refs":[],"symbolHash":3819306958,"updated":1723767904487},{"name":"AsArray","fqn":"module::3219477275::AsArray","filepath":"src/types/lists/AsArray.ts","startLine":20,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AsArray**`<T>`\n\nType utility which ensures that `T` is an array by\nencapsulating it as a single item array if it is a\nnon-array type.","tags":[]}],"deps":["local::3818237550::_AsArray"],"refs":[],"symbolHash":4042700798,"updated":1723767904321},{"name":"As","fqn":"module::602096613::As","filepath":"src/types/boolean-logic/narrowing/As.ts","startLine":8,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"},{"name":"TType","type":"TType"}],"jsDocs":[{"comment":"**As**`<TContent,TType>`\n\nEnsures that `TContent` _extends_ `TType` or turns type to `never`.","tags":[]}],"deps":[],"refs":[],"symbolHash":1026132615,"updated":1723767904248},{"name":"ArrayTypeDefn","fqn":"module::4075989132::ArrayTypeDefn","filepath":"src/types/literals/Shape.ts","startLine":285,"endLine":285,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::1473201238::ShapeCallback"],"refs":[],"symbolHash":2573238598,"updated":1723767904354},{"name":"ArrayElementType","fqn":"module::1755327514::ArrayElementType","filepath":"src/types/lists/ArrayElementType.ts","startLine":12,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ArrayElementType**`<T>`\n\nDetermines what type the elements in an array are.\n```ts\n// string\ntype T = ArrayElementType<string[]>;\n```","tags":[]}],"deps":["module::394049077::IsEmptyContainer","module::4064428151::Widen","module::2535688849::TupleToUnion"],"refs":[],"symbolHash":2995703279,"updated":1723767904321},{"name":"AreSameType","fqn":"module::4272896224::AreSameType","filepath":"src/types/boolean-logic/operators/AreSameType.ts","startLine":18,"endLine":22,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**AreSameType**`<A,B>`\n\nTests whether `A` and `B` are the same _wide_ type.\n\n- Note: for containers, the types are rolled up to the broad category of\ncontainer (e.g., Dictionary, Tuple, Map, Set, WeakMap)\n\n```ts\n// true\nAreSameType<\"foo\",\"bar\">;\n// false\nAreSameType<\"foo\",42>;\n```","tags":[]}],"deps":["module::4064428151::Widen"],"refs":[],"symbolHash":3293889048,"updated":1723767904194},{"name":"AreSameLength","fqn":"module::1470575819::AreSameLength","filepath":"src/types/boolean-logic/operators/AreSameLength.ts","startLine":17,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**AreSameLength**`<A,B>`\n\nTests whether `A` and `B` are of equal length. Generics should\nbe a `Tuple` or a string but not a combination of the two.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::1364134543::IsEqual","module::3921923702::Chars","module::1897058928::AsString","module::4041511888::IsTuple"],"refs":[],"symbolHash":1136299917,"updated":1723767904222},{"name":"AppendRight","fqn":"module::3478612292::AppendRight","filepath":"src/types/base-types/functional/LeftRight.ts","startLine":74,"endLine":75,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TErr","type":"TErr"},{"name":"TExisting","type":"TExisting"}],"jsDocs":[{"comment":"**AppendRight**`<TErr, TExisting>`\n\nType utility to add to the right side of a `LeftRight` tuple.\n\n- if the right of `TExisting` is empty it will add `TErr` as the first element\nof an array","tags":[]}],"deps":["module::1195775228::LeftRight","local::889785542::right","module::2666698309::Tuple"],"refs":[],"symbolHash":2368367084,"updated":1723767904187},{"name":"ApiStateInitializer","fqn":"module::1915333373::ApiStateInitializer","filepath":"src/types/api/api.ts","startLine":293,"endLine":295,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TApi","type":"TApi"}],"jsDocs":[{"comment":"","tags":[]}],"deps":["module::186693758::Dictionary"],"refs":[],"symbolHash":269089618,"updated":1723767904142},{"name":"ApiReturn","fqn":"module::1569357853::ApiReturn","filepath":"src/types/api/api.ts","startLine":236,"endLine":242,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ApiReturn**\n\nThe expected/desired types that could result from calling the API's\n_endpoints_.\n\nNote: this does not consider the possibility of a user","tags":[]}],"deps":["module::4278016201::Api","module::186693758::Dictionary","module::2535688849::TupleToUnion","module::1669874810::ReduceValues"],"refs":[],"symbolHash":169021920,"updated":1723767904139},{"name":"ApiOptions","fqn":"module::2560464730::ApiOptions","filepath":"src/types/api/api.ts","startLine":191,"endLine":209,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSurface","type":"TSurface"}],"jsDocs":[{"comment":"**ApiOptions**`<[TSurface]>`\n\nThe _options_ which go into defining an API surface.","tags":[]}],"deps":["module::186693758::Dictionary","module::540585742::TypedFunction","module::814973::Unset","module::4019558171::IfUnset","ext::2318994541::PropertyKey","module::1874893613::PublicKeyOf","module::693354809::AsApi"],"refs":[],"symbolHash":2514430174,"updated":1723767904137},{"name":"ApiHandler","fqn":"module::1957475778::ApiHandler","filepath":"src/types/api/api.ts","startLine":365,"endLine":368,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TApi","type":"TApi"},{"name":"_THandle","type":"_THandle"}],"jsDocs":[{"comment":"**ApiHandler**`<TApi,THandle>`\n\nAn API handler for a specific API","tags":[]}],"deps":["module::4278016201::Api","module::1939532401::ErrorCondition"],"refs":[],"symbolHash":803180937,"updated":1723767904147},{"name":"ApiEscape","fqn":"module::452057443::ApiEscape","filepath":"src/types/api/api.ts","startLine":334,"endLine":342,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ApiEscape**`<T>`\n\nGiven a `T` which extends `Api` or `ApiCallback`, this utility will expose\nthe escape function.","tags":[]}],"deps":["module::186693758::Dictionary","module::540585742::TypedFunction","module::1663272331::ApiCallback","module::4278016201::Api","ext::2318994541::Parameters","module::1218893954::GetEscapeFunction"],"refs":[],"symbolHash":1363609195,"updated":1723767904146},{"name":"ApiConfig","fqn":"module::3463196045::ApiConfig","filepath":"src/types/api/api.ts","startLine":140,"endLine":147,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TSurface","type":"TSurface"},{"name":"TState","type":"TState"}],"jsDocs":[{"comment":"**ApiConfig**`<TSurface,TState>`\n\nThe configuration of your API provides opportunities to\nshow or mask various parts of your surface area based on\nthe current _state_ you are in.","tags":[]}],"deps":["module::647390714::ApiSurface","module::4278016201::Api","module::549128158::ApiState","module::2202603258::KeyOf"],"refs":[],"symbolHash":3887598436,"updated":1723767904135},{"name":"AnyQueryParams","fqn":"module::1014993398::AnyQueryParams","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":318,"endLine":318,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**AnyQueryParams**\n\nA type which represents any string value for query parameters\nor no query parameters at all.\n\nCan be quite useful for creating pattern matching types where\nyou don't want to be blocked by someone having put some silly\nmarketing QP at the end of a URL.","tags":[]}],"deps":[],"refs":[],"symbolHash":3852674771,"updated":1723767904450},{"name":"AnyObject","fqn":"module::3664412668::AnyObject","filepath":"src/types/base-types/AnyObject.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**AnyObject**\n\nMeant to represent any valid object type (both indexable and not).","tags":[]}],"deps":["module::186693758::Dictionary","module::4114441065::EmptyObject","module::542025033::ExplicitlyEmptyObject"],"refs":[],"symbolHash":3990259613,"updated":1723767904148},{"name":"AnyFunction","fqn":"module::3708361711::AnyFunction","filepath":"src/types/base-types/fns/AnyFunction.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**AnyFunction**\n\nA type which is meant to match on _all_ types of functions which can exist.","tags":[]}],"deps":["ext::2318994541::Function","module::540585742::TypedFunction"],"refs":[],"symbolHash":3216073403,"updated":1723767904182},{"name":"AnyArray","fqn":"module::629862038::AnyArray","filepath":"src/types/base-types/AnyArray.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**AnyArray**\n\nAny array, either readonly or otherwise.","tags":[]}],"deps":[],"refs":[],"symbolHash":754342995,"updated":1723767904150},{"name":"And","fqn":"module::3257907665::And","filepath":"src/types/boolean-logic/combinators/And.ts","startLine":30,"endLine":43,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TConditions","type":"TConditions"},{"name":"TEmpty","type":"TEmpty"}],"jsDocs":[{"comment":"**And**`<TConditions, [TEmpty]>`\n\nAllows an array of conditions which are either ARE a boolean value or a\nfunction which evaluates to a boolean value to be logically AND'd together.","tags":[]}],"deps":["module::2984222131::LogicFunction","module::1364134543::IsEqual","module::1149977588::LogicalReturns","local::3164929300::Process","module::3504175184::NarrowlyContains"],"refs":[],"symbolHash":387185955,"updated":1723767904236},{"name":"AlphaNumericChar","fqn":"module::2595848327::AlphaNumericChar","filepath":"src/types/string-literals/character-sets/AlphaNumeric.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"Any alphabetic or numeric string character","tags":[]}],"deps":["module::2392759183::AlphaChar","module::1881292962::NumericChar"],"refs":[],"symbolHash":3590068720,"updated":1723767904459},{"name":"AlphaNumeric","fqn":"module::2028748358::AlphaNumeric","filepath":"src/types/string-literals/character-sets/AlphaNumeric.ts","startLine":28,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AlphaNumeric**`<T>`\n\nType utility which tests that all characters in `T` are alpha-numeric and returns\n`T` \"as is\" in cases where this conditions is met. In cases where the condition is\nnot met, the type is converted to `never`.\n\n**Related:** `AlphaNumericChar`","tags":[]}],"deps":["module::172457424::IsStringLiteral","local::2289732328::AlphaNumericAcc"],"refs":[],"symbolHash":1095440345,"updated":1723767904459},{"name":"AlphaChar","fqn":"module::133596785::AlphaChar","filepath":"src/types/string-literals/character-sets/AlphaChar.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**AlphaChar**\n\nAlphabetical character (both upper and lowercase).\n\n**Related:** `UpperAlphaChar`, `LowerAlphaChar`, `Alpha`","tags":[]}],"deps":["module::2595159798::UpperAlphaChar","module::3806360013::LowerAlphaChar"],"refs":[],"symbolHash":3529799558,"updated":1723767904443},{"name":"Alpha","fqn":"module::2614663322::Alpha","filepath":"src/types/string-literals/character-sets/Alpha.ts","startLine":12,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Alpha**`<T>`\n\nConverts `T` to _never_ if `T` is not a alphabetic string. Possible values are:\n\n- `T` - when T is a string literal and characters are alphabetic\n- `string` - when T is a wide string type\n- `never` - all other types of `T` are converted to never","tags":[]}],"deps":["module::1931245833::If","module::172457424::IsStringLiteral","module::2630824779::IfAllExtend","module::4284904442::AsArray","module::3921923702::Chars","module::2392759183::AlphaChar"],"refs":[],"symbolHash":2956991496,"updated":1723767904442},{"name":"AllStringLiterals","fqn":"module::3515285149::AllStringLiterals","filepath":"src/types/boolean-logic/operators/AllStringLiterals.ts","startLine":10,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AllStringLiterals**`<T>`\n\nBoolean operator which checks whether **all** of the\npassed in elements are _string literals_.","tags":[]}],"deps":["module::83169107::And","module::172457424::IsStringLiteral"],"refs":[],"symbolHash":207653133,"updated":1723767904194},{"name":"AllowNonTupleWhenSingular","fqn":"module::767815113::AllowNonTupleWhenSingular","filepath":"src/types/lists/AllowNonTupleWhenSingular.ts","startLine":11,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTuple","type":"TTuple"}],"jsDocs":[{"comment":"**AllowNonTupleWhenSingular**`<TTuple>`\n\nConverts `T` to being `T | T[0]` when the tuple's length\nis 1. Otherwise keeps the type as `T`.\n\nThis type pairs well with the `AsArray` utility.","tags":[]}],"deps":["module::1939532401::ErrorCondition"],"refs":[],"symbolHash":2700644256,"updated":1723767904321},{"name":"AllNumericLiterals","fqn":"module::964593196::AllNumericLiterals","filepath":"src/types/boolean-logic/operators/AllNumericLiterals.ts","startLine":10,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AllNumericLiterals**`<T>`\n\nBoolean operator which checks whether **all** of the\npassed in elements are _numeric literals_.","tags":[]}],"deps":["module::83169107::And","module::82688423::IsNumericLiteral"],"refs":[],"symbolHash":2414506649,"updated":1723767904194},{"name":"AllLiteral","fqn":"module::3055768985::AllLiteral","filepath":"src/types/boolean-logic/operators/AllLiteral.ts","startLine":16,"endLine":28,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AllLiteral**`<TTuple>`\n\nA boolean operator which tests whether all properties in\nthe tuple `TTuple` are _literal_ types.","tags":[]}],"deps":["module::83169107::And","module::172457424::IsStringLiteral","module::82688423::IsNumericLiteral","module::4041511888::IsTuple","module::1272639998::IsBooleanLiteral","module::2943445649::IsObjectLiteral"],"refs":[],"symbolHash":1536954903,"updated":1723767904194},{"name":"AllExtend","fqn":"module::1321102881::AllExtend","filepath":"src/types/boolean-logic/operators/AllExtend.ts","startLine":26,"endLine":29,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TList","type":"TList"},{"name":"TExtend","type":"TExtend"}],"jsDocs":[{"comment":"**AllExtend**`<TList, TExtend>`\n\nBoolean type util which checks whether **all** of the elements\nin `TList` _extend_ `TExtend`.\n\n**Related:** `SomeExtend`, `DoesExtend`","tags":[]}],"deps":["local::3664003991::AllAcc"],"refs":[],"symbolHash":3063912717,"updated":1723767904193},{"name":"AllCaps","fqn":"module::1118898971::AllCaps","filepath":"src/types/string-literals/casing/AllCaps.ts","startLine":16,"endLine":24,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AllCaps**`<T>`\n\nType utility which converts all alphabetic characters to their\nUPPERCASE variant.","tags":[]}],"deps":["module::1931245833::If","module::172457424::IsStringLiteral","module::3921923702::Chars","local::1289680348::Process","module::2597507937::Concat"],"refs":[],"symbolHash":3950176,"updated":1723767904477},{"name":"AfterFirstChar","fqn":"module::1959332149::AfterFirstChar","filepath":"src/types/string-literals/AfterFirstChar.ts","startLine":27,"endLine":33,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TContent","type":"TContent"}],"jsDocs":[{"comment":"**RemainingChar**`<TContent>`\n\nReceives either a string or a tuple of strings. Based on the input\nit is converted to:\n\n- **String:** \n   - when a string is received it will return the string with the first \ncharacter removed\n   - when a wide string type is provided it will return the _never_ type.\n- **Tuple<string>:** \n   - when a tuple of strings is received it will process\neach element in the array independently and return each element's _remaining characters_\nafter the first character has been removed\n   - any wide strings encountered will be ignored in the returned array","tags":[]}],"deps":["local::1082811800::Iterate","module::4284904442::AsArray","module::2597507937::Concat","module::798798449::AfterFirst","module::3921923702::Chars","module::1897058928::AsString"],"refs":[],"symbolHash":4109824208,"updated":1723767904424},{"name":"AfterFirst","fqn":"module::4104661162::AfterFirst","filepath":"src/types/lists/AfterFirst.ts","startLine":8,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AfterFirst**`<T>`\n\nreturns the elements in an array _after_ the first element","tags":[]}],"deps":["module::2666698309::Tuple"],"refs":[],"symbolHash":3517816541,"updated":1723767904320},{"name":"AddUrlPathSegment","fqn":"module::709167836::AddUrlPathSegment","filepath":"src/types/string-literals/character-sets/Url.ts","startLine":359,"endLine":364,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TExisting","type":"TExisting"},{"name":"TAdd","type":"TAdd"}],"jsDocs":[{"comment":"**AddUrlPathSegment**`<TExisting, TAdd>`\n\nAdds a new URL path segment, ensuring that appropriate\n`/` representation is preserved.","tags":[]}],"deps":["module::3241023069::StripTrailing","module::2603245803::StripLeading"],"refs":[],"symbolHash":3651645293,"updated":1723767904452},{"name":"AddKeyValue","fqn":"module::3397458247::AddKeyValue","filepath":"src/types/dictionary/AddKeyValue.ts","startLine":25,"endLine":33,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TObj","type":"TObj"},{"name":"K","type":"K"},{"name":"V","type":"V"}],"jsDocs":[{"comment":"**AddKeyValue**`<TObj,TKey,TVal>`\n\nExtends the object `TObj` to include the new KV pair of `TKey`\nand `TVal`. \n\nAny attempt to _override_ an existing key in `TObj` will result\nin an **ErrorCondition< \"duplicate-key\" >**. Use the `UpsertKeyValue` utility if \nyou want this condition to result in an overwrite.","tags":[]}],"deps":["module::1903151425::AnyObject","ext::2318994541::PropertyKey","module::3605609985::Narrowable","module::1931245833::If","module::2698938817::Contains","module::4102577001::Keys","module::4076869199::AsRecord","module::1939532401::ErrorCondition","module::2597507937::Concat","module::577891714::ToString","module::818348575::SimplifyObject","ext::2318994541::Record"],"refs":[],"symbolHash":1013558785,"updated":1723767904253},{"name":"Add","fqn":"module::81280496::Add","filepath":"src/types/numeric-literals/Add.ts","startLine":172,"endLine":179,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"A","type":"A"},{"name":"B","type":"B"}],"jsDocs":[{"comment":"**Add**`<A,B>`\n\nAdds two `NumberLike` values together and returns the appropriate numeric type:\n\n- if either or both `A` and `B` are a `${number}` then a `${number}` type is returned\n- if both are numeric values than the type is `number`.","tags":[]}],"deps":["module::3330042255::NumberLike","module::3860303104::As","local::1543726490::PreProcess"],"refs":[],"symbolHash":3872041037,"updated":1723767904371},{"name":"AbsMaybe","fqn":"module::2142295758::AbsMaybe","filepath":"src/types/numeric-literals/AbsMaybe.ts","startLine":14,"endLine":21,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**AbsMaybe**`<T>`\n\nConverts any literal numeric into the **absolute value** of the number.\n\n- you can pass in a numeric string literal and it perform ABS func while\npreserving string literal type\n- if a wide numeric type is used for `T` this utility will resolve to `number`\nas the absolute value can not be known at design time; if you'd prefer to \nblock any wide types then use `Abs` instead","tags":[]}],"deps":["module::1931245833::If","module::2376902257::Or","module::82688423::IsNumericLiteral","module::172457424::IsStringLiteral","module::2603245803::StripLeading","module::2061136353::ToNumber","module::1897058928::AsString"],"refs":[],"symbolHash":3378949700,"updated":1723767904372},{"name":"Abs","fqn":"module::2040987517::Abs","filepath":"src/types/numeric-literals/Abs.ts","startLine":24,"endLine":30,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**Abs**`<T>`\n\nConverts any literal numeric into the **absolute value** of the number.\n\n- you can pass in a numeric string literal and it perform ABS func while\npreserving string literal type","tags":[]}],"deps":["module::3330042255::NumberLike","module::116081596::AsNumber","local::4092081188::Process"],"refs":[],"symbolHash":4098640064,"updated":1723767904372},{"name":"UPPER_ALPHA_CHARS","fqn":"local::2541959915::UPPER_ALPHA_CHARS","filepath":"src/constants/Alpha.ts","startLine":11,"endLine":13,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2062260659,"updated":1723767904509},{"name":"LOWER_ALPHA_CHARS","fqn":"local::2541959915::LOWER_ALPHA_CHARS","filepath":"src/constants/Alpha.ts","startLine":5,"endLine":6,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2789282611,"updated":1723767904509},{"name":"ALPHA_CHARS","fqn":"local::2541959915::ALPHA_CHARS","filepath":"src/constants/Alpha.ts","startLine":18,"endLine":21,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1494570486,"updated":1723767904509},{"name":"WHITESPACE_CHARS","fqn":"local::2310180320::WHITESPACE_CHARS","filepath":"src/constants/Characters.ts","startLine":1,"endLine":5,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2779246923,"updated":1723767904509},{"name":"SerializedComma","fqn":"module::3361355124::SerializedComma","filepath":"src/constants/Comma.ts","startLine":18,"endLine":18,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**SerializedComma**\n\nA serialized representation of a `,` value.","tags":[]}],"deps":[],"refs":[],"symbolHash":1396790715,"updated":1723767904509},{"name":"COMMA","fqn":"local::2743068251::COMMA","filepath":"src/constants/Comma.ts","startLine":11,"endLine":11,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3699329872,"updated":1723767904509},{"name":"CommonObjProps","fqn":"module::2153163416::CommonObjProps","filepath":"src/constants/CommonObjProps.ts","startLine":1,"endLine":3,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":1500358831,"updated":1723767904509},{"name":"COMMON_OBJ_PROPS","fqn":"local::3008014867::COMMON_OBJ_PROPS","filepath":"src/constants/CommonObjProps.ts","startLine":5,"endLine":7,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":426195323,"updated":1723767904509},{"name":"CONSONANTS","fqn":"local::4063704566::CONSONANTS","filepath":"src/constants/Consonants.ts","startLine":3,"endLine":25,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3686096302,"updated":1723767904509},{"name":"Constant","fqn":"module::2039969610::Constant","filepath":"src/constants/Constant.ts","startLine":7,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TKind","type":"TKind"},{"name":"TVal","type":"TVal"}],"jsDocs":[{"comment":"**Constant**`<TKind>`\n\nA static value of a particular _kind_.","tags":[]}],"deps":[],"refs":[],"symbolHash":2885647466,"updated":1723767904510},{"name":"createConstant","fqn":"module::1249208251::createConstant","filepath":"src/constants/createConstant.ts","startLine":8,"endLine":13,"scope":"module","flags":["None","Function","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[{"name":"TKind","type":"TKind"}],"jsDocs":[{"comment":"**createConstant**(kind)\n\nCreates a `Constant<TKind>` type.","tags":[]}],"deps":[],"refs":[],"symbolHash":1823258425,"updated":1723767904510},{"name":"MONTH_NAME","fqn":"local::1076484288::MONTH_NAME","filepath":"src/constants/DateTime.ts","startLine":6,"endLine":19,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3317094550,"updated":1723767904510},{"name":"MONTH_ABBR","fqn":"local::1076484288::MONTH_ABBR","filepath":"src/constants/DateTime.ts","startLine":27,"endLine":40,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2053148009,"updated":1723767904510},{"name":"FALSY_VALUES","fqn":"local::1862235043::FALSY_VALUES","filepath":"src/constants/FalsyValues.ts","startLine":7,"endLine":9,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2114087140,"updated":1723767904510},{"name":"RESULT","fqn":"local::1670889096::RESULT","filepath":"src/constants/Functional.ts","startLine":6,"endLine":9,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3512643831,"updated":1723767904510},{"name":"OPTION","fqn":"local::1670889096::OPTION","filepath":"src/constants/Functional.ts","startLine":17,"endLine":20,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3963352259,"updated":1723767904510},{"name":"ZIP_TO_STATE","fqn":"local::2756788088::ZIP_TO_STATE","filepath":"src/constants/Geo.ts","startLine":88,"endLine":99,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1367951636,"updated":1723767904511},{"name":"US_STATE_LOOKUP_STRICT","fqn":"local::2756788088::US_STATE_LOOKUP_STRICT","filepath":"src/constants/Geo.ts","startLine":5,"endLine":56,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2537544786,"updated":1723767904511},{"name":"US_STATE_LOOKUP_PROVINCES","fqn":"local::2756788088::US_STATE_LOOKUP_PROVINCES","filepath":"src/constants/Geo.ts","startLine":61,"endLine":71,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1790206244,"updated":1723767904511},{"name":"US_STATE_LOOKUP","fqn":"local::2756788088::US_STATE_LOOKUP","filepath":"src/constants/Geo.ts","startLine":79,"endLine":82,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":301833261,"updated":1723767904511},{"name":"HASH_TABLE_WIDE","fqn":"local::2651089690::HASH_TABLE_WIDE","filepath":"src/constants/HashTable.ts","startLine":3,"endLine":19,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1649830936,"updated":1723767904511},{"name":"HASH_TABLE_SPECIAL","fqn":"local::2651089690::HASH_TABLE_SPECIAL","filepath":"src/constants/HashTable.ts","startLine":51,"endLine":80,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1516476102,"updated":1723767904511},{"name":"HASH_TABLE_OTHER","fqn":"local::2651089690::HASH_TABLE_OTHER","filepath":"src/constants/HashTable.ts","startLine":131,"endLine":131,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":242821983,"updated":1723767904511},{"name":"HASH_TABLE_DIGIT","fqn":"local::2651089690::HASH_TABLE_DIGIT","filepath":"src/constants/HashTable.ts","startLine":82,"endLine":93,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2791620552,"updated":1723767904511},{"name":"HASH_TABLE_CHAR","fqn":"local::2651089690::HASH_TABLE_CHAR","filepath":"src/constants/HashTable.ts","startLine":125,"endLine":129,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3743258534,"updated":1723767904511},{"name":"HASH_TABLE_ALPHA_UPPER","fqn":"local::2651089690::HASH_TABLE_ALPHA_UPPER","filepath":"src/constants/HashTable.ts","startLine":95,"endLine":122,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2272333120,"updated":1723767904511},{"name":"HASH_TABLE_ALPHA_LOWER","fqn":"local::2651089690::HASH_TABLE_ALPHA_LOWER","filepath":"src/constants/HashTable.ts","startLine":21,"endLine":48,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3734780568,"updated":1723767904511},{"name":"WideAssignment","fqn":"local::1288805112::WideAssignment","filepath":"src/constants/Wide.ts","startLine":18,"endLine":36,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1383830603,"updated":1723767904516},{"name":"WIDE_TYPE_KINDS","fqn":"local::3005592699::WIDE_TYPE_KINDS","filepath":"src/constants/Types.ts","startLine":9,"endLine":11,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2070098758,"updated":1723767904512},{"name":"WIDE_CONTAINER_TYPE_KINDS","fqn":"local::3005592699::WIDE_CONTAINER_TYPE_KINDS","filepath":"src/constants/Types.ts","startLine":18,"endLine":20,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2135101474,"updated":1723767904512},{"name":"TYPE_TRANSFORMS","fqn":"local::2139091448::TYPE_TRANSFORMS","filepath":"src/constants/TypeTransforms.ts","startLine":18,"endLine":44,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":484425100,"updated":1723767904514},{"name":"TYPE_TOKEN_PARAM_TIME","fqn":"local::1083606277::TYPE_TOKEN_PARAM_TIME","filepath":"src/constants/TypeTokens.ts","startLine":232,"endLine":239,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2538745164,"updated":1723767904515},{"name":"TYPE_TOKEN_PARAM_STR","fqn":"local::1083606277::TYPE_TOKEN_PARAM_STR","filepath":"src/constants/TypeTokens.ts","startLine":189,"endLine":202,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3938960542,"updated":1723767904515},{"name":"TYPE_TOKEN_PARAM_DATETIME","fqn":"local::1083606277::TYPE_TOKEN_PARAM_DATETIME","filepath":"src/constants/TypeTokens.ts","startLine":219,"endLine":221,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1759149349,"updated":1723767904515},{"name":"TYPE_TOKEN_PARAM_DATE","fqn":"local::1083606277::TYPE_TOKEN_PARAM_DATE","filepath":"src/constants/TypeTokens.ts","startLine":226,"endLine":230,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":110823251,"updated":1723767904515},{"name":"TYPE_TOKEN_PARAM_CSV","fqn":"local::1083606277::TYPE_TOKEN_PARAM_CSV","filepath":"src/constants/TypeTokens.ts","startLine":208,"endLine":214,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4219652493,"updated":1723767904515},{"name":"TYPE_TOKEN_IDENTITIES","fqn":"local::1083606277::TYPE_TOKEN_IDENTITIES","filepath":"src/constants/TypeTokens.ts","startLine":168,"endLine":184,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1108978829,"updated":1723767904515},{"name":"TYPE_TOKEN_ALL","fqn":"local::1083606277::TYPE_TOKEN_ALL","filepath":"src/constants/TypeTokens.ts","startLine":241,"endLine":248,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2752808381,"updated":1723767904516},{"name":"TYPE_OF","fqn":"local::4206067557::TYPE_OF","filepath":"src/constants/TypeOf.ts","startLine":6,"endLine":6,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2803374542,"updated":1723767904514},{"name":"TYPE_KINDS","fqn":"local::3005592699::TYPE_KINDS","filepath":"src/constants/Types.ts","startLine":26,"endLine":32,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2010341919,"updated":1723767904513},{"name":"TYPE_COMPARISONS","fqn":"local::250336242::TYPE_COMPARISONS","filepath":"src/constants/TypeComparisons.ts","startLine":30,"endLine":63,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1538169374,"updated":1723767904514},{"name":"TT_STOP","fqn":"local::1083606277::TT_STOP","filepath":"src/constants/TypeTokens.ts","startLine":161,"endLine":161,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2527031323,"updated":1723767904515},{"name":"TT_START","fqn":"local::1083606277::TT_START","filepath":"src/constants/TypeTokens.ts","startLine":160,"endLine":160,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":768127748,"updated":1723767904515},{"name":"TT_Singletons","fqn":"local::1083606277::TT_Singletons","filepath":"src/constants/TypeTokens.ts","startLine":126,"endLine":129,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4149523603,"updated":1723767904515},{"name":"TT_Sets","fqn":"local::1083606277::TT_Sets","filepath":"src/constants/TypeTokens.ts","startLine":131,"endLine":135,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3551365981,"updated":1723767904515},{"name":"TT_SEP","fqn":"local::1083606277::TT_SEP","filepath":"src/constants/TypeTokens.ts","startLine":162,"endLine":162,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2139406700,"updated":1723767904515},{"name":"TT_Functions","fqn":"local::1083606277::TT_Functions","filepath":"src/constants/TypeTokens.ts","startLine":141,"endLine":144,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4118827032,"updated":1723767904515},{"name":"TT_Containers","fqn":"local::1083606277::TT_Containers","filepath":"src/constants/TypeTokens.ts","startLine":150,"endLine":158,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4220246110,"updated":1723767904515},{"name":"TT_Atomics","fqn":"local::1083606277::TT_Atomics","filepath":"src/constants/TypeTokens.ts","startLine":114,"endLine":120,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2541309345,"updated":1723767904515},{"name":"TOP_LEVEL_DOMAINS","fqn":"local::3599130766::TOP_LEVEL_DOMAINS","filepath":"src/constants/NetworkConstants.ts","startLine":36,"endLine":91,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1258819032,"updated":1723767904517},{"name":"SINGULAR_NOUN_ENDINGS","fqn":"local::1817504911::SINGULAR_NOUN_ENDINGS","filepath":"src/constants/SingularNounEnding.ts","startLine":8,"endLine":10,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4061265214,"updated":1723767904513},{"name":"SIMPLE_UNION_TOKENS","fqn":"local::1083606277::SIMPLE_UNION_TOKENS","filepath":"src/constants/TypeTokens.ts","startLine":57,"endLine":64,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1356834806,"updated":1723767904514},{"name":"SIMPLE_TOKENS","fqn":"local::1083606277::SIMPLE_TOKENS","filepath":"src/constants/TypeTokens.ts","startLine":104,"endLine":108,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":65993609,"updated":1723767904514},{"name":"SIMPLE_SET_TYPES","fqn":"local::1083606277::SIMPLE_SET_TYPES","filepath":"src/constants/TypeTokens.ts","startLine":36,"endLine":39,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3869512318,"updated":1723767904514},{"name":"SIMPLE_SCALAR_TOKENS","fqn":"local::1083606277::SIMPLE_SCALAR_TOKENS","filepath":"src/constants/TypeTokens.ts","startLine":42,"endLine":55,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1746816829,"updated":1723767904514},{"name":"SIMPLE_MAP_VALUES","fqn":"local::1083606277::SIMPLE_MAP_VALUES","filepath":"src/constants/TypeTokens.ts","startLine":18,"endLine":29,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1066186566,"updated":1723767904514},{"name":"SIMPLE_MAP_KEYS","fqn":"local::1083606277::SIMPLE_MAP_KEYS","filepath":"src/constants/TypeTokens.ts","startLine":3,"endLine":16,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4001279778,"updated":1723767904514},{"name":"SIMPLE_DICT_VALUES","fqn":"local::1083606277::SIMPLE_DICT_VALUES","filepath":"src/constants/TypeTokens.ts","startLine":31,"endLine":34,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":4214220739,"updated":1723767904514},{"name":"SIMPLE_CONTAINER_TOKENS","fqn":"local::1083606277::SIMPLE_CONTAINER_TOKENS","filepath":"src/constants/TypeTokens.ts","startLine":66,"endLine":89,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":383908303,"updated":1723767904514},{"name":"SHAPE_PREFIXES","fqn":"local::758750069::SHAPE_PREFIXES","filepath":"src/constants/Shape.ts","startLine":1,"endLine":14,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1327475754,"updated":1723767904516},{"name":"SHAPE_DELIMITER","fqn":"local::758750069::SHAPE_DELIMITER","filepath":"src/constants/Shape.ts","startLine":16,"endLine":16,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2985665181,"updated":1723767904516},{"name":"REPO_SOURCES","fqn":"local::2385019063::REPO_SOURCES","filepath":"src/constants/RepoConstants.ts","startLine":5,"endLine":11,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3465870907,"updated":1723767904517},{"name":"REPO_SOURCE_LOOKUP","fqn":"local::2385019063::REPO_SOURCE_LOOKUP","filepath":"src/constants/RepoConstants.ts","startLine":32,"endLine":38,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2116757936,"updated":1723767904517},{"name":"REPO_PAGE_TYPES","fqn":"local::2385019063::REPO_PAGE_TYPES","filepath":"src/constants/RepoConstants.ts","startLine":17,"endLine":29,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2071973374,"updated":1723767904517},{"name":"PROXMOX_CT_STATE","fqn":"local::4246094429::PROXMOX_CT_STATE","filepath":"src/constants/ProxmoxConstants.ts","startLine":3,"endLine":5,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1520548714,"updated":1723767904517},{"name":"PluralExceptions","fqn":"module::2947317342::PluralExceptions","filepath":"src/constants/PluralExceptions.ts","startLine":31,"endLine":31,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**PluralExceptions**\n\nA dictionary of key/value pairs which map singular words to their\nplural counterpart. This can be used in conjunction with the the\n`pluralize()` and `Pluralize<T>` utilities to extend the known \nirregular conversions.","tags":[]}],"deps":["ext::2318994541::Record"],"refs":[],"symbolHash":1935580225,"updated":1723767904513},{"name":"PLURAL_EXCEPTIONS_OLD","fqn":"local::1158471245::PLURAL_EXCEPTIONS_OLD","filepath":"src/constants/PluralExceptions.ts","startLine":6,"endLine":20,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1380759137,"updated":1723767904513},{"name":"PLURAL_EXCEPTIONS","fqn":"local::1158471245::PLURAL_EXCEPTIONS","filepath":"src/constants/PluralExceptions.ts","startLine":38,"endLine":113,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3392767753,"updated":1723767904513},{"name":"PHONE_FORMAT","fqn":"local::1131650762::PHONE_FORMAT","filepath":"src/constants/Phone.ts","startLine":1,"endLine":6,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1606043887,"updated":1723767904517},{"name":"PHONE_COUNTRY_CODES","fqn":"local::1131650762::PHONE_COUNTRY_CODES","filepath":"src/constants/Phone.ts","startLine":13,"endLine":263,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3591775253,"updated":1723767904517},{"name":"NUMERIC_DIGIT","fqn":"local::656944253::NUMERIC_DIGIT","filepath":"src/constants/NumericDigit.ts","startLine":9,"endLine":11,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2203423513,"updated":1723767904514},{"name":"NUMERIC_CHAR","fqn":"local::2320681874::NUMERIC_CHAR","filepath":"src/constants/NumericChar.ts","startLine":8,"endLine":10,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":1273383550,"updated":1723767904513},{"name":"NotDefined","fqn":"module::3874710660::NotDefined","filepath":"src/constants/NotDefined.ts","startLine":10,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":497570804,"updated":1723767904514},{"name":"NotApplicable","fqn":"module::1278372897::NotApplicable","filepath":"src/constants/NotApplicable.ts","startLine":7,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"Why","type":"Why"}],"jsDocs":[{"comment":"A unique symbol which indicates that a particular\ntype was \"not applicable\".","tags":[]}],"deps":[],"refs":[],"symbolHash":490751671,"updated":1723767904512},{"name":"NOT_DEFINED","fqn":"local::2833218421::NOT_DEFINED","filepath":"src/constants/NotDefined.ts","startLine":8,"endLine":8,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":191843177,"updated":1723767904514},{"name":"NOT_APPLICABLE","fqn":"local::563506726::NOT_APPLICABLE","filepath":"src/constants/NotApplicable.ts","startLine":1,"endLine":1,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":958207801,"updated":1723767904512},{"name":"NON_ZERO_NUMERIC_CHAR","fqn":"local::2320681874::NON_ZERO_NUMERIC_CHAR","filepath":"src/constants/NumericChar.ts","startLine":12,"endLine":14,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":675891362,"updated":1723767904514},{"name":"NoDefaultValue","fqn":"module::272167091::NoDefaultValue","filepath":"src/constants/NoDefaultValue.ts","startLine":13,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"A unique symbol which indicates that a particular\ntype was not given a \"default value\".","tags":[]}],"deps":[],"refs":[],"symbolHash":3918985828,"updated":1723767904512},{"name":"NO_DEFAULT_VALUE","fqn":"local::692058613::NO_DEFAULT_VALUE","filepath":"src/constants/NoDefaultValue.ts","startLine":7,"endLine":7,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":234052630,"updated":1723767904511},{"name":"Never","fqn":"local::3545451474::Never","filepath":"src/constants/Never.ts","startLine":11,"endLine":11,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3750750347,"updated":1723767904514},{"name":"NETWORK_PROTOCOL_LOOKUP","fqn":"local::3599130766::NETWORK_PROTOCOL_LOOKUP","filepath":"src/constants/NetworkConstants.ts","startLine":17,"endLine":24,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":391048506,"updated":1723767904517},{"name":"NARROW_CONTAINER_TYPE_KINDS","fqn":"local::3005592699::NARROW_CONTAINER_TYPE_KINDS","filepath":"src/constants/Types.ts","startLine":13,"endLine":16,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3439336792,"updated":1723767904512},{"name":"MARKED","fqn":"local::3680832032::MARKED","filepath":"src/constants/Marked.ts","startLine":3,"endLine":3,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3561380549,"updated":1723767904516},{"name":"Marked","fqn":"module::315861837::Marked","filepath":"src/constants/Marked.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"**Marked**\n\nA constant that indicates that an item has been marked for\nsome ongoing operation.","tags":[]}],"deps":[],"refs":[],"symbolHash":262374016,"updated":1723767904516},{"name":"LITERAL_TYPE_KINDS","fqn":"local::3005592699::LITERAL_TYPE_KINDS","filepath":"src/constants/Types.ts","startLine":5,"endLine":7,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3248839731,"updated":1723767904512},{"name":"IPv6","fqn":"local::3599130766::IPv6","filepath":"src/constants/NetworkConstants.ts","startLine":1,"endLine":7,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":787304824,"updated":1723767904517},{"name":"IPv4","fqn":"local::3599130766::IPv4","filepath":"src/constants/NetworkConstants.ts","startLine":9,"endLine":11,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2045856719,"updated":1723767904517},{"name":"GITHUB_INSIGHT_CATEGORY_LOOKUP","fqn":"local::2385019063::GITHUB_INSIGHT_CATEGORY_LOOKUP","filepath":"src/constants/RepoConstants.ts","startLine":41,"endLine":55,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":3059052584,"updated":1723767904517},{"name":"FALSY_TYPE_KINDS","fqn":"local::3005592699::FALSY_TYPE_KINDS","filepath":"src/constants/Types.ts","startLine":1,"endLine":3,"scope":"local","flags":["None","BlockScopedVariable","PropertyExcludes","NamespaceModuleExcludes"],"kind":"property","generics":[],"jsDocs":[],"deps":[],"refs":[],"symbolHash":2635297759,"updated":1723767904512},{"name":"OnlyFnProps","fqn":"module::1073932179::OnlyFnProps","filepath":"src/types/functions/OnlyFnProps.ts","startLine":9,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**OnlyFnProps**`<T>`\n\nTakes a function `T` and strips the function away leaving only\nany key/values that were stored alongside it.","tags":[]}],"deps":["module::3580587573::AnyFunction","module::2610106395::AsFnMeta"],"refs":[],"symbolHash":776857010,"updated":1723767904712},{"name":"AsReadonlyArray","fqn":"module::1317776196::AsReadonlyArray","filepath":"src/types/lists/AsReadonlyArray.ts","startLine":1,"endLine":3,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"","tags":[]}],"deps":[],"refs":[],"symbolHash":3758780000,"updated":1723767904716},{"name":"FirstOrElse","fqn":"module::3614791694::FirstOrElse","filepath":"src/types/lists/FirstOrElse.ts","startLine":10,"endLine":15,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"E","type":"E"}],"jsDocs":[{"comment":"**FirstOrElse**`<T,E>`\n\nReturns the _first_ type in a list but if there are no elements then \nit will return `E` (which defaults to _undefined_).","tags":[]}],"deps":["module::2666698309::Tuple","module::2295046820::First"],"refs":[],"symbolHash":2709899307,"updated":1723767904722},{"name":"Rec","fqn":"module::3219571453::Rec","filepath":"src/types/runtime-types/Rec.ts","startLine":14,"endLine":16,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"ID","type":"ID"}],"jsDocs":[{"comment":"**Dict**`<T, ID>`\n\nA nominal replacement for Javascript object's with precisely\nthe same functionality but with a hashed type which allows\nuse of `let` instead of `const` for object definitions due \nto the type not being able to be reassigned.","tags":[]}],"deps":["module::186693758::Dictionary"],"refs":[],"symbolHash":1273210274,"updated":1723767904834},{"name":"ProxmoxCtState","fqn":"module::953555239::ProxmoxCtState","filepath":"src/types/string-literals/Proxmox.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"the _states_ a Proxmox LXC container can be in","tags":[]}],"deps":[],"refs":[],"symbolHash":2513626091,"updated":1723767904931},{"name":"IsAny","fqn":"module::4250086787::IsAny","filepath":"src/types/boolean-logic/operators/IsAny.ts","startLine":8,"endLine":10,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsAny**`<T>`\n\nTests whether a given `T` is of the **any** type.","tags":[]}],"deps":["module::80185219::IsNever"],"refs":[],"symbolHash":3426914841,"updated":1723767905049},{"name":"IsAnyEqual","fqn":"module::23206706::IsAnyEqual","filepath":"src/types/boolean-logic/operators/IsAnyEqual.ts","startLine":9,"endLine":14,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TVal","type":"TVal"},{"name":"TList","type":"TList"}],"jsDocs":[{"comment":"**IsAnyEqual**`<TVal,TList>`\n\nBoolean tester which reports on whether `TVal` equals **any** of\nthe values in `TList`.","tags":[]}],"deps":["module::1364134543::IsEqual","module::2295046820::First","module::798798449::AfterFirst"],"refs":[],"symbolHash":4105788387,"updated":1723767905050},{"name":"IsIterable","fqn":"module::2591474209::IsIterable","filepath":"src/types/boolean-logic/operators/IsIterable.ts","startLine":26,"endLine":33,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"},{"name":"TNever","type":"TNever"}],"jsDocs":[{"comment":"**IsIterable**`<T>`\n\nBoolean operator which tests whether `T` is iterable.","tags":[]}],"deps":["module::80185219::IsNever","module::2872591658::Container","local::4012802885::Process"],"refs":[],"symbolHash":125498912,"updated":1723767905055},{"name":"ReturnsBoolean","fqn":"module::2551232922::ReturnsBoolean","filepath":"src/types/boolean-logic/operators/ReturnsBoolean.ts","startLine":11,"endLine":13,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**ReturnsBoolean**`<T>`\n\nType utility which indicates whether the _return value_ of `T` is \na `false` value. Possible values are `true`, `false`, or `boolean`.\n\nNote: any non-functions passed in as `T` are always a **false** value","tags":[]}],"deps":["module::540585742::TypedFunction","module::996394587::IsBoolean","ext::2318994541::ReturnType"],"refs":[],"symbolHash":3169125395,"updated":1723767905075},{"name":"IsYouTubeVideoUrl","fqn":"module::1996439837::IsYouTubeVideoUrl","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":43,"endLine":52,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"TTest","type":"TTest"},{"name":"TKind","type":"TKind"}],"jsDocs":[{"comment":"**IsYouTubeVideoUrl**`<TTest,[TKind]>`\n\nBoolean operator which returns _true_ when the string is a\npossible YouTube URL which is for playing a video.\n\n**Note:** by default any URL which plays a video is allowed but\nyou can change `TKind` to \"single-video\" or \"video-in-playlist\"\nto isolate to just one of the play styles.\n\n**Related:** `IsYouTubeUrl`, `YouTubeVideoUrl`","tags":[]}],"deps":["local::2159697161::VideoUrlKind","module::172457424::IsStringLiteral","module::4083180366::YouTubeVideoUrl","local::2159697161::_VideoKind","module::790210903::GetUrlQueryParams"],"refs":[],"symbolHash":2301808433,"updated":1723767905078},{"name":"IsYouTubeUrl","fqn":"module::2113172788::IsYouTubeUrl","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":11,"endLine":17,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsYouTubeUrl**`<T>`\n\nBoolean operator which returns _true_ when the string is a\npossible YouTube URL.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::788639442::YouTubeUrl"],"refs":[],"symbolHash":2200677062,"updated":1723767905077},{"name":"IsYouTubePlaylist","fqn":"module::4151532562::IsYouTubePlaylist","filepath":"src/types/boolean-logic/operators/YouTube-operators.ts","startLine":61,"endLine":67,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**IsYouTubeUrl**`<T>`\n\nBoolean operator which returns _true_ when the string is a\npossible YouTube URL.","tags":[]}],"deps":["module::172457424::IsStringLiteral","module::1911915973::YouTubePlaylistUrl"],"refs":[],"symbolHash":4202282876,"updated":1723767905078},{"name":"RaiseAllLowercase","fqn":"module::4158181609::RaiseAllLowercase","filepath":"src/types/string-literals/casing/RaiseAllLowercase.ts","startLine":11,"endLine":11,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[{"name":"T","type":"T"}],"jsDocs":[{"comment":"**RaiseAllLowercase**`<T>`\n\nType utility which will convert an \"all lowercase\" string to a string where all characters are uppercase; in \nall other cases it will do nothing and simply return `T` as `T`.\n\n**Related:** `LowerAllCaps`","tags":[]}],"deps":["module::2655857164::IsAllLowercase","ext::2318994541::Uppercase"],"refs":[],"symbolHash":1629326119,"updated":1723767905087},{"name":"BCP47","fqn":"module::2924094190::BCP47","filepath":"src/types/string-literals/character-sets/BCP.ts","startLine":12,"endLine":37,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"The [BCP47 standard](https://en.wikipedia.org/wiki/IETF_language_tag) is \nused to specify a country or region.\n\nNotes:\n\n- it is also used heavily in Javascript, such as the for Locale strings, etc.\n- this type is not exhaustive but rather just suggests some and allows all","tags":[]}],"deps":["module::3356276222::Suggest"],"refs":[],"symbolHash":627476167,"updated":1723767905089},{"name":"PhoneNumberDelimiter","fqn":"module::1672581867::PhoneNumberDelimiter","filepath":"src/types/string-literals/character-sets/phone.ts","startLine":6,"endLine":6,"scope":"module","flags":["None","TypeAlias","PropertyExcludes","NamespaceModuleExcludes"],"kind":"type-defn","generics":[],"jsDocs":[{"comment":"delimiter characters commonly used to separate digits in phone numbers","tags":[]}],"deps":[],"refs":[],"symbolHash":3359153834,"updated":1723767905133}]